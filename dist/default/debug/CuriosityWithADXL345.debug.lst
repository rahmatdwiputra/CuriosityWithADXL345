

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 02 18:34:14 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F1619 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  011C                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  018E                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0194                     	;# 
   147  0195                     	;# 
   148  0196                     	;# 
   149  0197                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019D                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019E                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020D                     	;# 
   177  020E                     	;# 
   178  0211                     	;# 
   179  0211                     	;# 
   180  0212                     	;# 
   181  0212                     	;# 
   182  0213                     	;# 
   183  0213                     	;# 
   184  0214                     	;# 
   185  0214                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0216                     	;# 
   191  0216                     	;# 
   192  0217                     	;# 
   193  0217                     	;# 
   194  028C                     	;# 
   195  028D                     	;# 
   196  028E                     	;# 
   197  0291                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0294                     	;# 
   202  0298                     	;# 
   203  0298                     	;# 
   204  0299                     	;# 
   205  029A                     	;# 
   206  029B                     	;# 
   207  029E                     	;# 
   208  030C                     	;# 
   209  030D                     	;# 
   210  030E                     	;# 
   211  038C                     	;# 
   212  038D                     	;# 
   213  038E                     	;# 
   214  0391                     	;# 
   215  0392                     	;# 
   216  0393                     	;# 
   217  0394                     	;# 
   218  0395                     	;# 
   219  0396                     	;# 
   220  0397                     	;# 
   221  0398                     	;# 
   222  0399                     	;# 
   223  040E                     	;# 
   224  0413                     	;# 
   225  0413                     	;# 
   226  0414                     	;# 
   227  0414                     	;# 
   228  0415                     	;# 
   229  0416                     	;# 
   230  0417                     	;# 
   231  0418                     	;# 
   232  041A                     	;# 
   233  041A                     	;# 
   234  041B                     	;# 
   235  041B                     	;# 
   236  041C                     	;# 
   237  041D                     	;# 
   238  041E                     	;# 
   239  041F                     	;# 
   240  0493                     	;# 
   241  0494                     	;# 
   242  0495                     	;# 
   243  0496                     	;# 
   244  049A                     	;# 
   245  049B                     	;# 
   246  049C                     	;# 
   247  049D                     	;# 
   248  058C                     	;# 
   249  058C                     	;# 
   250  058D                     	;# 
   251  058E                     	;# 
   252  058E                     	;# 
   253  058F                     	;# 
   254  0590                     	;# 
   255  0590                     	;# 
   256  0591                     	;# 
   257  0592                     	;# 
   258  0592                     	;# 
   259  0593                     	;# 
   260  0594                     	;# 
   261  0594                     	;# 
   262  0595                     	;# 
   263  0596                     	;# 
   264  0596                     	;# 
   265  0597                     	;# 
   266  0598                     	;# 
   267  0599                     	;# 
   268  059A                     	;# 
   269  059B                     	;# 
   270  059B                     	;# 
   271  059C                     	;# 
   272  059D                     	;# 
   273  060C                     	;# 
   274  060C                     	;# 
   275  060D                     	;# 
   276  060E                     	;# 
   277  060F                     	;# 
   278  060F                     	;# 
   279  0610                     	;# 
   280  0611                     	;# 
   281  0612                     	;# 
   282  0613                     	;# 
   283  0614                     	;# 
   284  0617                     	;# 
   285  0618                     	;# 
   286  0619                     	;# 
   287  061A                     	;# 
   288  061B                     	;# 
   289  061C                     	;# 
   290  0691                     	;# 
   291  0692                     	;# 
   292  0693                     	;# 
   293  0694                     	;# 
   294  0695                     	;# 
   295  0696                     	;# 
   296  0697                     	;# 
   297  0699                     	;# 
   298  069A                     	;# 
   299  0711                     	;# 
   300  0712                     	;# 
   301  0713                     	;# 
   302  0714                     	;# 
   303  0715                     	;# 
   304  0718                     	;# 
   305  0718                     	;# 
   306  0719                     	;# 
   307  071A                     	;# 
   308  071A                     	;# 
   309  071B                     	;# 
   310  071C                     	;# 
   311  071D                     	;# 
   312  0791                     	;# 
   313  0791                     	;# 
   314  0792                     	;# 
   315  0793                     	;# 
   316  0793                     	;# 
   317  0794                     	;# 
   318  0795                     	;# 
   319  0795                     	;# 
   320  0796                     	;# 
   321  0797                     	;# 
   322  0797                     	;# 
   323  0798                     	;# 
   324  0799                     	;# 
   325  079A                     	;# 
   326  080C                     	;# 
   327  080C                     	;# 
   328  080D                     	;# 
   329  080E                     	;# 
   330  080E                     	;# 
   331  080F                     	;# 
   332  0810                     	;# 
   333  0810                     	;# 
   334  0811                     	;# 
   335  0812                     	;# 
   336  0812                     	;# 
   337  0813                     	;# 
   338  0814                     	;# 
   339  0815                     	;# 
   340  0816                     	;# 
   341  0817                     	;# 
   342  0818                     	;# 
   343  0819                     	;# 
   344  081A                     	;# 
   345  081A                     	;# 
   346  081B                     	;# 
   347  081C                     	;# 
   348  081C                     	;# 
   349  081D                     	;# 
   350  088C                     	;# 
   351  088D                     	;# 
   352  088E                     	;# 
   353  088F                     	;# 
   354  088F                     	;# 
   355  0890                     	;# 
   356  0891                     	;# 
   357  0892                     	;# 
   358  0893                     	;# 
   359  0893                     	;# 
   360  0894                     	;# 
   361  0895                     	;# 
   362  0896                     	;# 
   363  0897                     	;# 
   364  0897                     	;# 
   365  0898                     	;# 
   366  0899                     	;# 
   367  0D8C                     	;# 
   368  0D8C                     	;# 
   369  0D8D                     	;# 
   370  0D8E                     	;# 
   371  0D8F                     	;# 
   372  0D8F                     	;# 
   373  0D90                     	;# 
   374  0D91                     	;# 
   375  0D92                     	;# 
   376  0D92                     	;# 
   377  0D93                     	;# 
   378  0D94                     	;# 
   379  0D95                     	;# 
   380  0D95                     	;# 
   381  0D96                     	;# 
   382  0D97                     	;# 
   383  0D98                     	;# 
   384  0D99                     	;# 
   385  0D9A                     	;# 
   386  0D9B                     	;# 
   387  0D9C                     	;# 
   388  0D9D                     	;# 
   389  0D9E                     	;# 
   390  0D9E                     	;# 
   391  0D9F                     	;# 
   392  0DA0                     	;# 
   393  0DA1                     	;# 
   394  0DA1                     	;# 
   395  0DA2                     	;# 
   396  0DA3                     	;# 
   397  0DA4                     	;# 
   398  0DA4                     	;# 
   399  0DA5                     	;# 
   400  0DA6                     	;# 
   401  0DA7                     	;# 
   402  0DA7                     	;# 
   403  0DA8                     	;# 
   404  0DA9                     	;# 
   405  0DAA                     	;# 
   406  0DAB                     	;# 
   407  0DAC                     	;# 
   408  0DAD                     	;# 
   409  0DAE                     	;# 
   410  0DAF                     	;# 
   411  0E0F                     	;# 
   412  0E10                     	;# 
   413  0E11                     	;# 
   414  0E12                     	;# 
   415  0E13                     	;# 
   416  0E14                     	;# 
   417  0E15                     	;# 
   418  0E16                     	;# 
   419  0E17                     	;# 
   420  0E18                     	;# 
   421  0E19                     	;# 
   422  0E1A                     	;# 
   423  0E1B                     	;# 
   424  0E1C                     	;# 
   425  0E1D                     	;# 
   426  0E1E                     	;# 
   427  0E1F                     	;# 
   428  0E20                     	;# 
   429  0E21                     	;# 
   430  0E22                     	;# 
   431  0E23                     	;# 
   432  0E24                     	;# 
   433  0E25                     	;# 
   434  0E26                     	;# 
   435  0E27                     	;# 
   436  0E28                     	;# 
   437  0E29                     	;# 
   438  0E2A                     	;# 
   439  0E2B                     	;# 
   440  0E2C                     	;# 
   441  0E2D                     	;# 
   442  0E2E                     	;# 
   443  0E90                     	;# 
   444  0E91                     	;# 
   445  0E92                     	;# 
   446  0E94                     	;# 
   447  0E95                     	;# 
   448  0E9C                     	;# 
   449  0E9D                     	;# 
   450  0E9E                     	;# 
   451  0E9F                     	;# 
   452  0EA0                     	;# 
   453  0EA1                     	;# 
   454  0EA2                     	;# 
   455  0EA3                     	;# 
   456  0EA4                     	;# 
   457  0EA5                     	;# 
   458  0EA6                     	;# 
   459  0EA7                     	;# 
   460  0F0F                     	;# 
   461  0F10                     	;# 
   462  0F11                     	;# 
   463  0F12                     	;# 
   464  0F13                     	;# 
   465  0F14                     	;# 
   466  0F15                     	;# 
   467  0F16                     	;# 
   468  0F17                     	;# 
   469  0F18                     	;# 
   470  0F19                     	;# 
   471  0F1A                     	;# 
   472  0F1B                     	;# 
   473  0F1C                     	;# 
   474  0F1D                     	;# 
   475  0F1E                     	;# 
   476  0F1F                     	;# 
   477  0F20                     	;# 
   478  0F21                     	;# 
   479  0F22                     	;# 
   480  0F23                     	;# 
   481  0F24                     	;# 
   482  0F25                     	;# 
   483  0F26                     	;# 
   484  0F27                     	;# 
   485  0F28                     	;# 
   486  0F29                     	;# 
   487  0F2A                     	;# 
   488  0F2B                     	;# 
   489  0F2C                     	;# 
   490  0F2D                     	;# 
   491  0F2E                     	;# 
   492  0F2F                     	;# 
   493  0F30                     	;# 
   494  0F31                     	;# 
   495  0F32                     	;# 
   496  0F33                     	;# 
   497  0F34                     	;# 
   498  0F35                     	;# 
   499  0F36                     	;# 
   500  0F37                     	;# 
   501  0FE4                     	;# 
   502  0FE5                     	;# 
   503  0FE6                     	;# 
   504  0FE7                     	;# 
   505  0FE8                     	;# 
   506  0FE9                     	;# 
   507  0FEA                     	;# 
   508  0FEB                     	;# 
   509  0FED                     	;# 
   510  0FEE                     	;# 
   511  0FEF                     	;# 
   512  0000                     	;# 
   513  0001                     	;# 
   514  0002                     	;# 
   515  0003                     	;# 
   516  0004                     	;# 
   517  0005                     	;# 
   518  0006                     	;# 
   519  0007                     	;# 
   520  0008                     	;# 
   521  0009                     	;# 
   522  000A                     	;# 
   523  000B                     	;# 
   524  000C                     	;# 
   525  000D                     	;# 
   526  000E                     	;# 
   527  0010                     	;# 
   528  0011                     	;# 
   529  0012                     	;# 
   530  0013                     	;# 
   531  0014                     	;# 
   532  0015                     	;# 
   533  0016                     	;# 
   534  0016                     	;# 
   535  0017                     	;# 
   536  0018                     	;# 
   537  0019                     	;# 
   538  001A                     	;# 
   539  001A                     	;# 
   540  001B                     	;# 
   541  001B                     	;# 
   542  001C                     	;# 
   543  001D                     	;# 
   544  001E                     	;# 
   545  001F                     	;# 
   546  008C                     	;# 
   547  008D                     	;# 
   548  008E                     	;# 
   549  0090                     	;# 
   550  0091                     	;# 
   551  0092                     	;# 
   552  0093                     	;# 
   553  0094                     	;# 
   554  0095                     	;# 
   555  0096                     	;# 
   556  0098                     	;# 
   557  0099                     	;# 
   558  009A                     	;# 
   559  009B                     	;# 
   560  009B                     	;# 
   561  009C                     	;# 
   562  009D                     	;# 
   563  009E                     	;# 
   564  009F                     	;# 
   565  010C                     	;# 
   566  010D                     	;# 
   567  010E                     	;# 
   568  0111                     	;# 
   569  0112                     	;# 
   570  0113                     	;# 
   571  0114                     	;# 
   572  0115                     	;# 
   573  0116                     	;# 
   574  0117                     	;# 
   575  0118                     	;# 
   576  0119                     	;# 
   577  011C                     	;# 
   578  018C                     	;# 
   579  018D                     	;# 
   580  018E                     	;# 
   581  0191                     	;# 
   582  0191                     	;# 
   583  0192                     	;# 
   584  0193                     	;# 
   585  0193                     	;# 
   586  0194                     	;# 
   587  0195                     	;# 
   588  0196                     	;# 
   589  0197                     	;# 
   590  0199                     	;# 
   591  0199                     	;# 
   592  0199                     	;# 
   593  019A                     	;# 
   594  019A                     	;# 
   595  019A                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019C                     	;# 
   602  019C                     	;# 
   603  019C                     	;# 
   604  019D                     	;# 
   605  019D                     	;# 
   606  019D                     	;# 
   607  019E                     	;# 
   608  019E                     	;# 
   609  019E                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  019F                     	;# 
   615  020C                     	;# 
   616  020D                     	;# 
   617  020E                     	;# 
   618  0211                     	;# 
   619  0211                     	;# 
   620  0212                     	;# 
   621  0212                     	;# 
   622  0213                     	;# 
   623  0213                     	;# 
   624  0214                     	;# 
   625  0214                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0215                     	;# 
   630  0216                     	;# 
   631  0216                     	;# 
   632  0217                     	;# 
   633  0217                     	;# 
   634  028C                     	;# 
   635  028D                     	;# 
   636  028E                     	;# 
   637  0291                     	;# 
   638  0291                     	;# 
   639  0292                     	;# 
   640  0293                     	;# 
   641  0294                     	;# 
   642  0298                     	;# 
   643  0298                     	;# 
   644  0299                     	;# 
   645  029A                     	;# 
   646  029B                     	;# 
   647  029E                     	;# 
   648  030C                     	;# 
   649  030D                     	;# 
   650  030E                     	;# 
   651  038C                     	;# 
   652  038D                     	;# 
   653  038E                     	;# 
   654  0391                     	;# 
   655  0392                     	;# 
   656  0393                     	;# 
   657  0394                     	;# 
   658  0395                     	;# 
   659  0396                     	;# 
   660  0397                     	;# 
   661  0398                     	;# 
   662  0399                     	;# 
   663  040E                     	;# 
   664  0413                     	;# 
   665  0413                     	;# 
   666  0414                     	;# 
   667  0414                     	;# 
   668  0415                     	;# 
   669  0416                     	;# 
   670  0417                     	;# 
   671  0418                     	;# 
   672  041A                     	;# 
   673  041A                     	;# 
   674  041B                     	;# 
   675  041B                     	;# 
   676  041C                     	;# 
   677  041D                     	;# 
   678  041E                     	;# 
   679  041F                     	;# 
   680  0493                     	;# 
   681  0494                     	;# 
   682  0495                     	;# 
   683  0496                     	;# 
   684  049A                     	;# 
   685  049B                     	;# 
   686  049C                     	;# 
   687  049D                     	;# 
   688  058C                     	;# 
   689  058C                     	;# 
   690  058D                     	;# 
   691  058E                     	;# 
   692  058E                     	;# 
   693  058F                     	;# 
   694  0590                     	;# 
   695  0590                     	;# 
   696  0591                     	;# 
   697  0592                     	;# 
   698  0592                     	;# 
   699  0593                     	;# 
   700  0594                     	;# 
   701  0594                     	;# 
   702  0595                     	;# 
   703  0596                     	;# 
   704  0596                     	;# 
   705  0597                     	;# 
   706  0598                     	;# 
   707  0599                     	;# 
   708  059A                     	;# 
   709  059B                     	;# 
   710  059B                     	;# 
   711  059C                     	;# 
   712  059D                     	;# 
   713  060C                     	;# 
   714  060C                     	;# 
   715  060D                     	;# 
   716  060E                     	;# 
   717  060F                     	;# 
   718  060F                     	;# 
   719  0610                     	;# 
   720  0611                     	;# 
   721  0612                     	;# 
   722  0613                     	;# 
   723  0614                     	;# 
   724  0617                     	;# 
   725  0618                     	;# 
   726  0619                     	;# 
   727  061A                     	;# 
   728  061B                     	;# 
   729  061C                     	;# 
   730  0691                     	;# 
   731  0692                     	;# 
   732  0693                     	;# 
   733  0694                     	;# 
   734  0695                     	;# 
   735  0696                     	;# 
   736  0697                     	;# 
   737  0699                     	;# 
   738  069A                     	;# 
   739  0711                     	;# 
   740  0712                     	;# 
   741  0713                     	;# 
   742  0714                     	;# 
   743  0715                     	;# 
   744  0718                     	;# 
   745  0718                     	;# 
   746  0719                     	;# 
   747  071A                     	;# 
   748  071A                     	;# 
   749  071B                     	;# 
   750  071C                     	;# 
   751  071D                     	;# 
   752  0791                     	;# 
   753  0791                     	;# 
   754  0792                     	;# 
   755  0793                     	;# 
   756  0793                     	;# 
   757  0794                     	;# 
   758  0795                     	;# 
   759  0795                     	;# 
   760  0796                     	;# 
   761  0797                     	;# 
   762  0797                     	;# 
   763  0798                     	;# 
   764  0799                     	;# 
   765  079A                     	;# 
   766  080C                     	;# 
   767  080C                     	;# 
   768  080D                     	;# 
   769  080E                     	;# 
   770  080E                     	;# 
   771  080F                     	;# 
   772  0810                     	;# 
   773  0810                     	;# 
   774  0811                     	;# 
   775  0812                     	;# 
   776  0812                     	;# 
   777  0813                     	;# 
   778  0814                     	;# 
   779  0815                     	;# 
   780  0816                     	;# 
   781  0817                     	;# 
   782  0818                     	;# 
   783  0819                     	;# 
   784  081A                     	;# 
   785  081A                     	;# 
   786  081B                     	;# 
   787  081C                     	;# 
   788  081C                     	;# 
   789  081D                     	;# 
   790  088C                     	;# 
   791  088D                     	;# 
   792  088E                     	;# 
   793  088F                     	;# 
   794  088F                     	;# 
   795  0890                     	;# 
   796  0891                     	;# 
   797  0892                     	;# 
   798  0893                     	;# 
   799  0893                     	;# 
   800  0894                     	;# 
   801  0895                     	;# 
   802  0896                     	;# 
   803  0897                     	;# 
   804  0897                     	;# 
   805  0898                     	;# 
   806  0899                     	;# 
   807  0D8C                     	;# 
   808  0D8C                     	;# 
   809  0D8D                     	;# 
   810  0D8E                     	;# 
   811  0D8F                     	;# 
   812  0D8F                     	;# 
   813  0D90                     	;# 
   814  0D91                     	;# 
   815  0D92                     	;# 
   816  0D92                     	;# 
   817  0D93                     	;# 
   818  0D94                     	;# 
   819  0D95                     	;# 
   820  0D95                     	;# 
   821  0D96                     	;# 
   822  0D97                     	;# 
   823  0D98                     	;# 
   824  0D99                     	;# 
   825  0D9A                     	;# 
   826  0D9B                     	;# 
   827  0D9C                     	;# 
   828  0D9D                     	;# 
   829  0D9E                     	;# 
   830  0D9E                     	;# 
   831  0D9F                     	;# 
   832  0DA0                     	;# 
   833  0DA1                     	;# 
   834  0DA1                     	;# 
   835  0DA2                     	;# 
   836  0DA3                     	;# 
   837  0DA4                     	;# 
   838  0DA4                     	;# 
   839  0DA5                     	;# 
   840  0DA6                     	;# 
   841  0DA7                     	;# 
   842  0DA7                     	;# 
   843  0DA8                     	;# 
   844  0DA9                     	;# 
   845  0DAA                     	;# 
   846  0DAB                     	;# 
   847  0DAC                     	;# 
   848  0DAD                     	;# 
   849  0DAE                     	;# 
   850  0DAF                     	;# 
   851  0E0F                     	;# 
   852  0E10                     	;# 
   853  0E11                     	;# 
   854  0E12                     	;# 
   855  0E13                     	;# 
   856  0E14                     	;# 
   857  0E15                     	;# 
   858  0E16                     	;# 
   859  0E17                     	;# 
   860  0E18                     	;# 
   861  0E19                     	;# 
   862  0E1A                     	;# 
   863  0E1B                     	;# 
   864  0E1C                     	;# 
   865  0E1D                     	;# 
   866  0E1E                     	;# 
   867  0E1F                     	;# 
   868  0E20                     	;# 
   869  0E21                     	;# 
   870  0E22                     	;# 
   871  0E23                     	;# 
   872  0E24                     	;# 
   873  0E25                     	;# 
   874  0E26                     	;# 
   875  0E27                     	;# 
   876  0E28                     	;# 
   877  0E29                     	;# 
   878  0E2A                     	;# 
   879  0E2B                     	;# 
   880  0E2C                     	;# 
   881  0E2D                     	;# 
   882  0E2E                     	;# 
   883  0E90                     	;# 
   884  0E91                     	;# 
   885  0E92                     	;# 
   886  0E94                     	;# 
   887  0E95                     	;# 
   888  0E9C                     	;# 
   889  0E9D                     	;# 
   890  0E9E                     	;# 
   891  0E9F                     	;# 
   892  0EA0                     	;# 
   893  0EA1                     	;# 
   894  0EA2                     	;# 
   895  0EA3                     	;# 
   896  0EA4                     	;# 
   897  0EA5                     	;# 
   898  0EA6                     	;# 
   899  0EA7                     	;# 
   900  0F0F                     	;# 
   901  0F10                     	;# 
   902  0F11                     	;# 
   903  0F12                     	;# 
   904  0F13                     	;# 
   905  0F14                     	;# 
   906  0F15                     	;# 
   907  0F16                     	;# 
   908  0F17                     	;# 
   909  0F18                     	;# 
   910  0F19                     	;# 
   911  0F1A                     	;# 
   912  0F1B                     	;# 
   913  0F1C                     	;# 
   914  0F1D                     	;# 
   915  0F1E                     	;# 
   916  0F1F                     	;# 
   917  0F20                     	;# 
   918  0F21                     	;# 
   919  0F22                     	;# 
   920  0F23                     	;# 
   921  0F24                     	;# 
   922  0F25                     	;# 
   923  0F26                     	;# 
   924  0F27                     	;# 
   925  0F28                     	;# 
   926  0F29                     	;# 
   927  0F2A                     	;# 
   928  0F2B                     	;# 
   929  0F2C                     	;# 
   930  0F2D                     	;# 
   931  0F2E                     	;# 
   932  0F2F                     	;# 
   933  0F30                     	;# 
   934  0F31                     	;# 
   935  0F32                     	;# 
   936  0F33                     	;# 
   937  0F34                     	;# 
   938  0F35                     	;# 
   939  0F36                     	;# 
   940  0F37                     	;# 
   941  0FE4                     	;# 
   942  0FE5                     	;# 
   943  0FE6                     	;# 
   944  0FE7                     	;# 
   945  0FE8                     	;# 
   946  0FE9                     	;# 
   947  0FEA                     	;# 
   948  0FEB                     	;# 
   949  0FED                     	;# 
   950  0FEE                     	;# 
   951  0FEF                     	;# 
   952  0000                     	;# 
   953  0001                     	;# 
   954  0002                     	;# 
   955  0003                     	;# 
   956  0004                     	;# 
   957  0005                     	;# 
   958  0006                     	;# 
   959  0007                     	;# 
   960  0008                     	;# 
   961  0009                     	;# 
   962  000A                     	;# 
   963  000B                     	;# 
   964  000C                     	;# 
   965  000D                     	;# 
   966  000E                     	;# 
   967  0010                     	;# 
   968  0011                     	;# 
   969  0012                     	;# 
   970  0013                     	;# 
   971  0014                     	;# 
   972  0015                     	;# 
   973  0016                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001A                     	;# 
   980  001B                     	;# 
   981  001B                     	;# 
   982  001C                     	;# 
   983  001D                     	;# 
   984  001E                     	;# 
   985  001F                     	;# 
   986  008C                     	;# 
   987  008D                     	;# 
   988  008E                     	;# 
   989  0090                     	;# 
   990  0091                     	;# 
   991  0092                     	;# 
   992  0093                     	;# 
   993  0094                     	;# 
   994  0095                     	;# 
   995  0096                     	;# 
   996  0098                     	;# 
   997  0099                     	;# 
   998  009A                     	;# 
   999  009B                     	;# 
  1000  009B                     	;# 
  1001  009C                     	;# 
  1002  009D                     	;# 
  1003  009E                     	;# 
  1004  009F                     	;# 
  1005  010C                     	;# 
  1006  010D                     	;# 
  1007  010E                     	;# 
  1008  0111                     	;# 
  1009  0112                     	;# 
  1010  0113                     	;# 
  1011  0114                     	;# 
  1012  0115                     	;# 
  1013  0116                     	;# 
  1014  0117                     	;# 
  1015  0118                     	;# 
  1016  0119                     	;# 
  1017  011C                     	;# 
  1018  018C                     	;# 
  1019  018D                     	;# 
  1020  018E                     	;# 
  1021  0191                     	;# 
  1022  0191                     	;# 
  1023  0192                     	;# 
  1024  0193                     	;# 
  1025  0193                     	;# 
  1026  0194                     	;# 
  1027  0195                     	;# 
  1028  0196                     	;# 
  1029  0197                     	;# 
  1030  0199                     	;# 
  1031  0199                     	;# 
  1032  0199                     	;# 
  1033  019A                     	;# 
  1034  019A                     	;# 
  1035  019A                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019B                     	;# 
  1039  019B                     	;# 
  1040  019B                     	;# 
  1041  019C                     	;# 
  1042  019C                     	;# 
  1043  019C                     	;# 
  1044  019D                     	;# 
  1045  019D                     	;# 
  1046  019D                     	;# 
  1047  019E                     	;# 
  1048  019E                     	;# 
  1049  019E                     	;# 
  1050  019F                     	;# 
  1051  019F                     	;# 
  1052  019F                     	;# 
  1053  019F                     	;# 
  1054  019F                     	;# 
  1055  020C                     	;# 
  1056  020D                     	;# 
  1057  020E                     	;# 
  1058  0211                     	;# 
  1059  0211                     	;# 
  1060  0212                     	;# 
  1061  0212                     	;# 
  1062  0213                     	;# 
  1063  0213                     	;# 
  1064  0214                     	;# 
  1065  0214                     	;# 
  1066  0215                     	;# 
  1067  0215                     	;# 
  1068  0215                     	;# 
  1069  0215                     	;# 
  1070  0216                     	;# 
  1071  0216                     	;# 
  1072  0217                     	;# 
  1073  0217                     	;# 
  1074  028C                     	;# 
  1075  028D                     	;# 
  1076  028E                     	;# 
  1077  0291                     	;# 
  1078  0291                     	;# 
  1079  0292                     	;# 
  1080  0293                     	;# 
  1081  0294                     	;# 
  1082  0298                     	;# 
  1083  0298                     	;# 
  1084  0299                     	;# 
  1085  029A                     	;# 
  1086  029B                     	;# 
  1087  029E                     	;# 
  1088  030C                     	;# 
  1089  030D                     	;# 
  1090  030E                     	;# 
  1091  038C                     	;# 
  1092  038D                     	;# 
  1093  038E                     	;# 
  1094  0391                     	;# 
  1095  0392                     	;# 
  1096  0393                     	;# 
  1097  0394                     	;# 
  1098  0395                     	;# 
  1099  0396                     	;# 
  1100  0397                     	;# 
  1101  0398                     	;# 
  1102  0399                     	;# 
  1103  040E                     	;# 
  1104  0413                     	;# 
  1105  0413                     	;# 
  1106  0414                     	;# 
  1107  0414                     	;# 
  1108  0415                     	;# 
  1109  0416                     	;# 
  1110  0417                     	;# 
  1111  0418                     	;# 
  1112  041A                     	;# 
  1113  041A                     	;# 
  1114  041B                     	;# 
  1115  041B                     	;# 
  1116  041C                     	;# 
  1117  041D                     	;# 
  1118  041E                     	;# 
  1119  041F                     	;# 
  1120  0493                     	;# 
  1121  0494                     	;# 
  1122  0495                     	;# 
  1123  0496                     	;# 
  1124  049A                     	;# 
  1125  049B                     	;# 
  1126  049C                     	;# 
  1127  049D                     	;# 
  1128  058C                     	;# 
  1129  058C                     	;# 
  1130  058D                     	;# 
  1131  058E                     	;# 
  1132  058E                     	;# 
  1133  058F                     	;# 
  1134  0590                     	;# 
  1135  0590                     	;# 
  1136  0591                     	;# 
  1137  0592                     	;# 
  1138  0592                     	;# 
  1139  0593                     	;# 
  1140  0594                     	;# 
  1141  0594                     	;# 
  1142  0595                     	;# 
  1143  0596                     	;# 
  1144  0596                     	;# 
  1145  0597                     	;# 
  1146  0598                     	;# 
  1147  0599                     	;# 
  1148  059A                     	;# 
  1149  059B                     	;# 
  1150  059B                     	;# 
  1151  059C                     	;# 
  1152  059D                     	;# 
  1153  060C                     	;# 
  1154  060C                     	;# 
  1155  060D                     	;# 
  1156  060E                     	;# 
  1157  060F                     	;# 
  1158  060F                     	;# 
  1159  0610                     	;# 
  1160  0611                     	;# 
  1161  0612                     	;# 
  1162  0613                     	;# 
  1163  0614                     	;# 
  1164  0617                     	;# 
  1165  0618                     	;# 
  1166  0619                     	;# 
  1167  061A                     	;# 
  1168  061B                     	;# 
  1169  061C                     	;# 
  1170  0691                     	;# 
  1171  0692                     	;# 
  1172  0693                     	;# 
  1173  0694                     	;# 
  1174  0695                     	;# 
  1175  0696                     	;# 
  1176  0697                     	;# 
  1177  0699                     	;# 
  1178  069A                     	;# 
  1179  0711                     	;# 
  1180  0712                     	;# 
  1181  0713                     	;# 
  1182  0714                     	;# 
  1183  0715                     	;# 
  1184  0718                     	;# 
  1185  0718                     	;# 
  1186  0719                     	;# 
  1187  071A                     	;# 
  1188  071A                     	;# 
  1189  071B                     	;# 
  1190  071C                     	;# 
  1191  071D                     	;# 
  1192  0791                     	;# 
  1193  0791                     	;# 
  1194  0792                     	;# 
  1195  0793                     	;# 
  1196  0793                     	;# 
  1197  0794                     	;# 
  1198  0795                     	;# 
  1199  0795                     	;# 
  1200  0796                     	;# 
  1201  0797                     	;# 
  1202  0797                     	;# 
  1203  0798                     	;# 
  1204  0799                     	;# 
  1205  079A                     	;# 
  1206  080C                     	;# 
  1207  080C                     	;# 
  1208  080D                     	;# 
  1209  080E                     	;# 
  1210  080E                     	;# 
  1211  080F                     	;# 
  1212  0810                     	;# 
  1213  0810                     	;# 
  1214  0811                     	;# 
  1215  0812                     	;# 
  1216  0812                     	;# 
  1217  0813                     	;# 
  1218  0814                     	;# 
  1219  0815                     	;# 
  1220  0816                     	;# 
  1221  0817                     	;# 
  1222  0818                     	;# 
  1223  0819                     	;# 
  1224  081A                     	;# 
  1225  081A                     	;# 
  1226  081B                     	;# 
  1227  081C                     	;# 
  1228  081C                     	;# 
  1229  081D                     	;# 
  1230  088C                     	;# 
  1231  088D                     	;# 
  1232  088E                     	;# 
  1233  088F                     	;# 
  1234  088F                     	;# 
  1235  0890                     	;# 
  1236  0891                     	;# 
  1237  0892                     	;# 
  1238  0893                     	;# 
  1239  0893                     	;# 
  1240  0894                     	;# 
  1241  0895                     	;# 
  1242  0896                     	;# 
  1243  0897                     	;# 
  1244  0897                     	;# 
  1245  0898                     	;# 
  1246  0899                     	;# 
  1247  0D8C                     	;# 
  1248  0D8C                     	;# 
  1249  0D8D                     	;# 
  1250  0D8E                     	;# 
  1251  0D8F                     	;# 
  1252  0D8F                     	;# 
  1253  0D90                     	;# 
  1254  0D91                     	;# 
  1255  0D92                     	;# 
  1256  0D92                     	;# 
  1257  0D93                     	;# 
  1258  0D94                     	;# 
  1259  0D95                     	;# 
  1260  0D95                     	;# 
  1261  0D96                     	;# 
  1262  0D97                     	;# 
  1263  0D98                     	;# 
  1264  0D99                     	;# 
  1265  0D9A                     	;# 
  1266  0D9B                     	;# 
  1267  0D9C                     	;# 
  1268  0D9D                     	;# 
  1269  0D9E                     	;# 
  1270  0D9E                     	;# 
  1271  0D9F                     	;# 
  1272  0DA0                     	;# 
  1273  0DA1                     	;# 
  1274  0DA1                     	;# 
  1275  0DA2                     	;# 
  1276  0DA3                     	;# 
  1277  0DA4                     	;# 
  1278  0DA4                     	;# 
  1279  0DA5                     	;# 
  1280  0DA6                     	;# 
  1281  0DA7                     	;# 
  1282  0DA7                     	;# 
  1283  0DA8                     	;# 
  1284  0DA9                     	;# 
  1285  0DAA                     	;# 
  1286  0DAB                     	;# 
  1287  0DAC                     	;# 
  1288  0DAD                     	;# 
  1289  0DAE                     	;# 
  1290  0DAF                     	;# 
  1291  0E0F                     	;# 
  1292  0E10                     	;# 
  1293  0E11                     	;# 
  1294  0E12                     	;# 
  1295  0E13                     	;# 
  1296  0E14                     	;# 
  1297  0E15                     	;# 
  1298  0E16                     	;# 
  1299  0E17                     	;# 
  1300  0E18                     	;# 
  1301  0E19                     	;# 
  1302  0E1A                     	;# 
  1303  0E1B                     	;# 
  1304  0E1C                     	;# 
  1305  0E1D                     	;# 
  1306  0E1E                     	;# 
  1307  0E1F                     	;# 
  1308  0E20                     	;# 
  1309  0E21                     	;# 
  1310  0E22                     	;# 
  1311  0E23                     	;# 
  1312  0E24                     	;# 
  1313  0E25                     	;# 
  1314  0E26                     	;# 
  1315  0E27                     	;# 
  1316  0E28                     	;# 
  1317  0E29                     	;# 
  1318  0E2A                     	;# 
  1319  0E2B                     	;# 
  1320  0E2C                     	;# 
  1321  0E2D                     	;# 
  1322  0E2E                     	;# 
  1323  0E90                     	;# 
  1324  0E91                     	;# 
  1325  0E92                     	;# 
  1326  0E94                     	;# 
  1327  0E95                     	;# 
  1328  0E9C                     	;# 
  1329  0E9D                     	;# 
  1330  0E9E                     	;# 
  1331  0E9F                     	;# 
  1332  0EA0                     	;# 
  1333  0EA1                     	;# 
  1334  0EA2                     	;# 
  1335  0EA3                     	;# 
  1336  0EA4                     	;# 
  1337  0EA5                     	;# 
  1338  0EA6                     	;# 
  1339  0EA7                     	;# 
  1340  0F0F                     	;# 
  1341  0F10                     	;# 
  1342  0F11                     	;# 
  1343  0F12                     	;# 
  1344  0F13                     	;# 
  1345  0F14                     	;# 
  1346  0F15                     	;# 
  1347  0F16                     	;# 
  1348  0F17                     	;# 
  1349  0F18                     	;# 
  1350  0F19                     	;# 
  1351  0F1A                     	;# 
  1352  0F1B                     	;# 
  1353  0F1C                     	;# 
  1354  0F1D                     	;# 
  1355  0F1E                     	;# 
  1356  0F1F                     	;# 
  1357  0F20                     	;# 
  1358  0F21                     	;# 
  1359  0F22                     	;# 
  1360  0F23                     	;# 
  1361  0F24                     	;# 
  1362  0F25                     	;# 
  1363  0F26                     	;# 
  1364  0F27                     	;# 
  1365  0F28                     	;# 
  1366  0F29                     	;# 
  1367  0F2A                     	;# 
  1368  0F2B                     	;# 
  1369  0F2C                     	;# 
  1370  0F2D                     	;# 
  1371  0F2E                     	;# 
  1372  0F2F                     	;# 
  1373  0F30                     	;# 
  1374  0F31                     	;# 
  1375  0F32                     	;# 
  1376  0F33                     	;# 
  1377  0F34                     	;# 
  1378  0F35                     	;# 
  1379  0F36                     	;# 
  1380  0F37                     	;# 
  1381  0FE4                     	;# 
  1382  0FE5                     	;# 
  1383  0FE6                     	;# 
  1384  0FE7                     	;# 
  1385  0FE8                     	;# 
  1386  0FE9                     	;# 
  1387  0FEA                     	;# 
  1388  0FEB                     	;# 
  1389  0FED                     	;# 
  1390  0FEE                     	;# 
  1391  0FEF                     	;# 
  1392  0000                     	;# 
  1393  0001                     	;# 
  1394  0002                     	;# 
  1395  0003                     	;# 
  1396  0004                     	;# 
  1397  0005                     	;# 
  1398  0006                     	;# 
  1399  0007                     	;# 
  1400  0008                     	;# 
  1401  0009                     	;# 
  1402  000A                     	;# 
  1403  000B                     	;# 
  1404  000C                     	;# 
  1405  000D                     	;# 
  1406  000E                     	;# 
  1407  0010                     	;# 
  1408  0011                     	;# 
  1409  0012                     	;# 
  1410  0013                     	;# 
  1411  0014                     	;# 
  1412  0015                     	;# 
  1413  0016                     	;# 
  1414  0016                     	;# 
  1415  0017                     	;# 
  1416  0018                     	;# 
  1417  0019                     	;# 
  1418  001A                     	;# 
  1419  001A                     	;# 
  1420  001B                     	;# 
  1421  001B                     	;# 
  1422  001C                     	;# 
  1423  001D                     	;# 
  1424  001E                     	;# 
  1425  001F                     	;# 
  1426  008C                     	;# 
  1427  008D                     	;# 
  1428  008E                     	;# 
  1429  0090                     	;# 
  1430  0091                     	;# 
  1431  0092                     	;# 
  1432  0093                     	;# 
  1433  0094                     	;# 
  1434  0095                     	;# 
  1435  0096                     	;# 
  1436  0098                     	;# 
  1437  0099                     	;# 
  1438  009A                     	;# 
  1439  009B                     	;# 
  1440  009B                     	;# 
  1441  009C                     	;# 
  1442  009D                     	;# 
  1443  009E                     	;# 
  1444  009F                     	;# 
  1445  010C                     	;# 
  1446  010D                     	;# 
  1447  010E                     	;# 
  1448  0111                     	;# 
  1449  0112                     	;# 
  1450  0113                     	;# 
  1451  0114                     	;# 
  1452  0115                     	;# 
  1453  0116                     	;# 
  1454  0117                     	;# 
  1455  0118                     	;# 
  1456  0119                     	;# 
  1457  011C                     	;# 
  1458  018C                     	;# 
  1459  018D                     	;# 
  1460  018E                     	;# 
  1461  0191                     	;# 
  1462  0191                     	;# 
  1463  0192                     	;# 
  1464  0193                     	;# 
  1465  0193                     	;# 
  1466  0194                     	;# 
  1467  0195                     	;# 
  1468  0196                     	;# 
  1469  0197                     	;# 
  1470  0199                     	;# 
  1471  0199                     	;# 
  1472  0199                     	;# 
  1473  019A                     	;# 
  1474  019A                     	;# 
  1475  019A                     	;# 
  1476  019B                     	;# 
  1477  019B                     	;# 
  1478  019B                     	;# 
  1479  019B                     	;# 
  1480  019B                     	;# 
  1481  019C                     	;# 
  1482  019C                     	;# 
  1483  019C                     	;# 
  1484  019D                     	;# 
  1485  019D                     	;# 
  1486  019D                     	;# 
  1487  019E                     	;# 
  1488  019E                     	;# 
  1489  019E                     	;# 
  1490  019F                     	;# 
  1491  019F                     	;# 
  1492  019F                     	;# 
  1493  019F                     	;# 
  1494  019F                     	;# 
  1495  020C                     	;# 
  1496  020D                     	;# 
  1497  020E                     	;# 
  1498  0211                     	;# 
  1499  0211                     	;# 
  1500  0212                     	;# 
  1501  0212                     	;# 
  1502  0213                     	;# 
  1503  0213                     	;# 
  1504  0214                     	;# 
  1505  0214                     	;# 
  1506  0215                     	;# 
  1507  0215                     	;# 
  1508  0215                     	;# 
  1509  0215                     	;# 
  1510  0216                     	;# 
  1511  0216                     	;# 
  1512  0217                     	;# 
  1513  0217                     	;# 
  1514  028C                     	;# 
  1515  028D                     	;# 
  1516  028E                     	;# 
  1517  0291                     	;# 
  1518  0291                     	;# 
  1519  0292                     	;# 
  1520  0293                     	;# 
  1521  0294                     	;# 
  1522  0298                     	;# 
  1523  0298                     	;# 
  1524  0299                     	;# 
  1525  029A                     	;# 
  1526  029B                     	;# 
  1527  029E                     	;# 
  1528  030C                     	;# 
  1529  030D                     	;# 
  1530  030E                     	;# 
  1531  038C                     	;# 
  1532  038D                     	;# 
  1533  038E                     	;# 
  1534  0391                     	;# 
  1535  0392                     	;# 
  1536  0393                     	;# 
  1537  0394                     	;# 
  1538  0395                     	;# 
  1539  0396                     	;# 
  1540  0397                     	;# 
  1541  0398                     	;# 
  1542  0399                     	;# 
  1543  040E                     	;# 
  1544  0413                     	;# 
  1545  0413                     	;# 
  1546  0414                     	;# 
  1547  0414                     	;# 
  1548  0415                     	;# 
  1549  0416                     	;# 
  1550  0417                     	;# 
  1551  0418                     	;# 
  1552  041A                     	;# 
  1553  041A                     	;# 
  1554  041B                     	;# 
  1555  041B                     	;# 
  1556  041C                     	;# 
  1557  041D                     	;# 
  1558  041E                     	;# 
  1559  041F                     	;# 
  1560  0493                     	;# 
  1561  0494                     	;# 
  1562  0495                     	;# 
  1563  0496                     	;# 
  1564  049A                     	;# 
  1565  049B                     	;# 
  1566  049C                     	;# 
  1567  049D                     	;# 
  1568  058C                     	;# 
  1569  058C                     	;# 
  1570  058D                     	;# 
  1571  058E                     	;# 
  1572  058E                     	;# 
  1573  058F                     	;# 
  1574  0590                     	;# 
  1575  0590                     	;# 
  1576  0591                     	;# 
  1577  0592                     	;# 
  1578  0592                     	;# 
  1579  0593                     	;# 
  1580  0594                     	;# 
  1581  0594                     	;# 
  1582  0595                     	;# 
  1583  0596                     	;# 
  1584  0596                     	;# 
  1585  0597                     	;# 
  1586  0598                     	;# 
  1587  0599                     	;# 
  1588  059A                     	;# 
  1589  059B                     	;# 
  1590  059B                     	;# 
  1591  059C                     	;# 
  1592  059D                     	;# 
  1593  060C                     	;# 
  1594  060C                     	;# 
  1595  060D                     	;# 
  1596  060E                     	;# 
  1597  060F                     	;# 
  1598  060F                     	;# 
  1599  0610                     	;# 
  1600  0611                     	;# 
  1601  0612                     	;# 
  1602  0613                     	;# 
  1603  0614                     	;# 
  1604  0617                     	;# 
  1605  0618                     	;# 
  1606  0619                     	;# 
  1607  061A                     	;# 
  1608  061B                     	;# 
  1609  061C                     	;# 
  1610  0691                     	;# 
  1611  0692                     	;# 
  1612  0693                     	;# 
  1613  0694                     	;# 
  1614  0695                     	;# 
  1615  0696                     	;# 
  1616  0697                     	;# 
  1617  0699                     	;# 
  1618  069A                     	;# 
  1619  0711                     	;# 
  1620  0712                     	;# 
  1621  0713                     	;# 
  1622  0714                     	;# 
  1623  0715                     	;# 
  1624  0718                     	;# 
  1625  0718                     	;# 
  1626  0719                     	;# 
  1627  071A                     	;# 
  1628  071A                     	;# 
  1629  071B                     	;# 
  1630  071C                     	;# 
  1631  071D                     	;# 
  1632  0791                     	;# 
  1633  0791                     	;# 
  1634  0792                     	;# 
  1635  0793                     	;# 
  1636  0793                     	;# 
  1637  0794                     	;# 
  1638  0795                     	;# 
  1639  0795                     	;# 
  1640  0796                     	;# 
  1641  0797                     	;# 
  1642  0797                     	;# 
  1643  0798                     	;# 
  1644  0799                     	;# 
  1645  079A                     	;# 
  1646  080C                     	;# 
  1647  080C                     	;# 
  1648  080D                     	;# 
  1649  080E                     	;# 
  1650  080E                     	;# 
  1651  080F                     	;# 
  1652  0810                     	;# 
  1653  0810                     	;# 
  1654  0811                     	;# 
  1655  0812                     	;# 
  1656  0812                     	;# 
  1657  0813                     	;# 
  1658  0814                     	;# 
  1659  0815                     	;# 
  1660  0816                     	;# 
  1661  0817                     	;# 
  1662  0818                     	;# 
  1663  0819                     	;# 
  1664  081A                     	;# 
  1665  081A                     	;# 
  1666  081B                     	;# 
  1667  081C                     	;# 
  1668  081C                     	;# 
  1669  081D                     	;# 
  1670  088C                     	;# 
  1671  088D                     	;# 
  1672  088E                     	;# 
  1673  088F                     	;# 
  1674  088F                     	;# 
  1675  0890                     	;# 
  1676  0891                     	;# 
  1677  0892                     	;# 
  1678  0893                     	;# 
  1679  0893                     	;# 
  1680  0894                     	;# 
  1681  0895                     	;# 
  1682  0896                     	;# 
  1683  0897                     	;# 
  1684  0897                     	;# 
  1685  0898                     	;# 
  1686  0899                     	;# 
  1687  0D8C                     	;# 
  1688  0D8C                     	;# 
  1689  0D8D                     	;# 
  1690  0D8E                     	;# 
  1691  0D8F                     	;# 
  1692  0D8F                     	;# 
  1693  0D90                     	;# 
  1694  0D91                     	;# 
  1695  0D92                     	;# 
  1696  0D92                     	;# 
  1697  0D93                     	;# 
  1698  0D94                     	;# 
  1699  0D95                     	;# 
  1700  0D95                     	;# 
  1701  0D96                     	;# 
  1702  0D97                     	;# 
  1703  0D98                     	;# 
  1704  0D99                     	;# 
  1705  0D9A                     	;# 
  1706  0D9B                     	;# 
  1707  0D9C                     	;# 
  1708  0D9D                     	;# 
  1709  0D9E                     	;# 
  1710  0D9E                     	;# 
  1711  0D9F                     	;# 
  1712  0DA0                     	;# 
  1713  0DA1                     	;# 
  1714  0DA1                     	;# 
  1715  0DA2                     	;# 
  1716  0DA3                     	;# 
  1717  0DA4                     	;# 
  1718  0DA4                     	;# 
  1719  0DA5                     	;# 
  1720  0DA6                     	;# 
  1721  0DA7                     	;# 
  1722  0DA7                     	;# 
  1723  0DA8                     	;# 
  1724  0DA9                     	;# 
  1725  0DAA                     	;# 
  1726  0DAB                     	;# 
  1727  0DAC                     	;# 
  1728  0DAD                     	;# 
  1729  0DAE                     	;# 
  1730  0DAF                     	;# 
  1731  0E0F                     	;# 
  1732  0E10                     	;# 
  1733  0E11                     	;# 
  1734  0E12                     	;# 
  1735  0E13                     	;# 
  1736  0E14                     	;# 
  1737  0E15                     	;# 
  1738  0E16                     	;# 
  1739  0E17                     	;# 
  1740  0E18                     	;# 
  1741  0E19                     	;# 
  1742  0E1A                     	;# 
  1743  0E1B                     	;# 
  1744  0E1C                     	;# 
  1745  0E1D                     	;# 
  1746  0E1E                     	;# 
  1747  0E1F                     	;# 
  1748  0E20                     	;# 
  1749  0E21                     	;# 
  1750  0E22                     	;# 
  1751  0E23                     	;# 
  1752  0E24                     	;# 
  1753  0E25                     	;# 
  1754  0E26                     	;# 
  1755  0E27                     	;# 
  1756  0E28                     	;# 
  1757  0E29                     	;# 
  1758  0E2A                     	;# 
  1759  0E2B                     	;# 
  1760  0E2C                     	;# 
  1761  0E2D                     	;# 
  1762  0E2E                     	;# 
  1763  0E90                     	;# 
  1764  0E91                     	;# 
  1765  0E92                     	;# 
  1766  0E94                     	;# 
  1767  0E95                     	;# 
  1768  0E9C                     	;# 
  1769  0E9D                     	;# 
  1770  0E9E                     	;# 
  1771  0E9F                     	;# 
  1772  0EA0                     	;# 
  1773  0EA1                     	;# 
  1774  0EA2                     	;# 
  1775  0EA3                     	;# 
  1776  0EA4                     	;# 
  1777  0EA5                     	;# 
  1778  0EA6                     	;# 
  1779  0EA7                     	;# 
  1780  0F0F                     	;# 
  1781  0F10                     	;# 
  1782  0F11                     	;# 
  1783  0F12                     	;# 
  1784  0F13                     	;# 
  1785  0F14                     	;# 
  1786  0F15                     	;# 
  1787  0F16                     	;# 
  1788  0F17                     	;# 
  1789  0F18                     	;# 
  1790  0F19                     	;# 
  1791  0F1A                     	;# 
  1792  0F1B                     	;# 
  1793  0F1C                     	;# 
  1794  0F1D                     	;# 
  1795  0F1E                     	;# 
  1796  0F1F                     	;# 
  1797  0F20                     	;# 
  1798  0F21                     	;# 
  1799  0F22                     	;# 
  1800  0F23                     	;# 
  1801  0F24                     	;# 
  1802  0F25                     	;# 
  1803  0F26                     	;# 
  1804  0F27                     	;# 
  1805  0F28                     	;# 
  1806  0F29                     	;# 
  1807  0F2A                     	;# 
  1808  0F2B                     	;# 
  1809  0F2C                     	;# 
  1810  0F2D                     	;# 
  1811  0F2E                     	;# 
  1812  0F2F                     	;# 
  1813  0F30                     	;# 
  1814  0F31                     	;# 
  1815  0F32                     	;# 
  1816  0F33                     	;# 
  1817  0F34                     	;# 
  1818  0F35                     	;# 
  1819  0F36                     	;# 
  1820  0F37                     	;# 
  1821  0FE4                     	;# 
  1822  0FE5                     	;# 
  1823  0FE6                     	;# 
  1824  0FE7                     	;# 
  1825  0FE8                     	;# 
  1826  0FE9                     	;# 
  1827  0FEA                     	;# 
  1828  0FEB                     	;# 
  1829  0FED                     	;# 
  1830  0FEE                     	;# 
  1831  0FEF                     	;# 
  1832  0000                     	;# 
  1833  0001                     	;# 
  1834  0002                     	;# 
  1835  0003                     	;# 
  1836  0004                     	;# 
  1837  0005                     	;# 
  1838  0006                     	;# 
  1839  0007                     	;# 
  1840  0008                     	;# 
  1841  0009                     	;# 
  1842  000A                     	;# 
  1843  000B                     	;# 
  1844  000C                     	;# 
  1845  000D                     	;# 
  1846  000E                     	;# 
  1847  0010                     	;# 
  1848  0011                     	;# 
  1849  0012                     	;# 
  1850  0013                     	;# 
  1851  0014                     	;# 
  1852  0015                     	;# 
  1853  0016                     	;# 
  1854  0016                     	;# 
  1855  0017                     	;# 
  1856  0018                     	;# 
  1857  0019                     	;# 
  1858  001A                     	;# 
  1859  001A                     	;# 
  1860  001B                     	;# 
  1861  001B                     	;# 
  1862  001C                     	;# 
  1863  001D                     	;# 
  1864  001E                     	;# 
  1865  001F                     	;# 
  1866  008C                     	;# 
  1867  008D                     	;# 
  1868  008E                     	;# 
  1869  0090                     	;# 
  1870  0091                     	;# 
  1871  0092                     	;# 
  1872  0093                     	;# 
  1873  0094                     	;# 
  1874  0095                     	;# 
  1875  0096                     	;# 
  1876  0098                     	;# 
  1877  0099                     	;# 
  1878  009A                     	;# 
  1879  009B                     	;# 
  1880  009B                     	;# 
  1881  009C                     	;# 
  1882  009D                     	;# 
  1883  009E                     	;# 
  1884  009F                     	;# 
  1885  010C                     	;# 
  1886  010D                     	;# 
  1887  010E                     	;# 
  1888  0111                     	;# 
  1889  0112                     	;# 
  1890  0113                     	;# 
  1891  0114                     	;# 
  1892  0115                     	;# 
  1893  0116                     	;# 
  1894  0117                     	;# 
  1895  0118                     	;# 
  1896  0119                     	;# 
  1897  011C                     	;# 
  1898  018C                     	;# 
  1899  018D                     	;# 
  1900  018E                     	;# 
  1901  0191                     	;# 
  1902  0191                     	;# 
  1903  0192                     	;# 
  1904  0193                     	;# 
  1905  0193                     	;# 
  1906  0194                     	;# 
  1907  0195                     	;# 
  1908  0196                     	;# 
  1909  0197                     	;# 
  1910  0199                     	;# 
  1911  0199                     	;# 
  1912  0199                     	;# 
  1913  019A                     	;# 
  1914  019A                     	;# 
  1915  019A                     	;# 
  1916  019B                     	;# 
  1917  019B                     	;# 
  1918  019B                     	;# 
  1919  019B                     	;# 
  1920  019B                     	;# 
  1921  019C                     	;# 
  1922  019C                     	;# 
  1923  019C                     	;# 
  1924  019D                     	;# 
  1925  019D                     	;# 
  1926  019D                     	;# 
  1927  019E                     	;# 
  1928  019E                     	;# 
  1929  019E                     	;# 
  1930  019F                     	;# 
  1931  019F                     	;# 
  1932  019F                     	;# 
  1933  019F                     	;# 
  1934  019F                     	;# 
  1935  020C                     	;# 
  1936  020D                     	;# 
  1937  020E                     	;# 
  1938  0211                     	;# 
  1939  0211                     	;# 
  1940  0212                     	;# 
  1941  0212                     	;# 
  1942  0213                     	;# 
  1943  0213                     	;# 
  1944  0214                     	;# 
  1945  0214                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0215                     	;# 
  1949  0215                     	;# 
  1950  0216                     	;# 
  1951  0216                     	;# 
  1952  0217                     	;# 
  1953  0217                     	;# 
  1954  028C                     	;# 
  1955  028D                     	;# 
  1956  028E                     	;# 
  1957  0291                     	;# 
  1958  0291                     	;# 
  1959  0292                     	;# 
  1960  0293                     	;# 
  1961  0294                     	;# 
  1962  0298                     	;# 
  1963  0298                     	;# 
  1964  0299                     	;# 
  1965  029A                     	;# 
  1966  029B                     	;# 
  1967  029E                     	;# 
  1968  030C                     	;# 
  1969  030D                     	;# 
  1970  030E                     	;# 
  1971  038C                     	;# 
  1972  038D                     	;# 
  1973  038E                     	;# 
  1974  0391                     	;# 
  1975  0392                     	;# 
  1976  0393                     	;# 
  1977  0394                     	;# 
  1978  0395                     	;# 
  1979  0396                     	;# 
  1980  0397                     	;# 
  1981  0398                     	;# 
  1982  0399                     	;# 
  1983  040E                     	;# 
  1984  0413                     	;# 
  1985  0413                     	;# 
  1986  0414                     	;# 
  1987  0414                     	;# 
  1988  0415                     	;# 
  1989  0416                     	;# 
  1990  0417                     	;# 
  1991  0418                     	;# 
  1992  041A                     	;# 
  1993  041A                     	;# 
  1994  041B                     	;# 
  1995  041B                     	;# 
  1996  041C                     	;# 
  1997  041D                     	;# 
  1998  041E                     	;# 
  1999  041F                     	;# 
  2000  0493                     	;# 
  2001  0494                     	;# 
  2002  0495                     	;# 
  2003  0496                     	;# 
  2004  049A                     	;# 
  2005  049B                     	;# 
  2006  049C                     	;# 
  2007  049D                     	;# 
  2008  058C                     	;# 
  2009  058C                     	;# 
  2010  058D                     	;# 
  2011  058E                     	;# 
  2012  058E                     	;# 
  2013  058F                     	;# 
  2014  0590                     	;# 
  2015  0590                     	;# 
  2016  0591                     	;# 
  2017  0592                     	;# 
  2018  0592                     	;# 
  2019  0593                     	;# 
  2020  0594                     	;# 
  2021  0594                     	;# 
  2022  0595                     	;# 
  2023  0596                     	;# 
  2024  0596                     	;# 
  2025  0597                     	;# 
  2026  0598                     	;# 
  2027  0599                     	;# 
  2028  059A                     	;# 
  2029  059B                     	;# 
  2030  059B                     	;# 
  2031  059C                     	;# 
  2032  059D                     	;# 
  2033  060C                     	;# 
  2034  060C                     	;# 
  2035  060D                     	;# 
  2036  060E                     	;# 
  2037  060F                     	;# 
  2038  060F                     	;# 
  2039  0610                     	;# 
  2040  0611                     	;# 
  2041  0612                     	;# 
  2042  0613                     	;# 
  2043  0614                     	;# 
  2044  0617                     	;# 
  2045  0618                     	;# 
  2046  0619                     	;# 
  2047  061A                     	;# 
  2048  061B                     	;# 
  2049  061C                     	;# 
  2050  0691                     	;# 
  2051  0692                     	;# 
  2052  0693                     	;# 
  2053  0694                     	;# 
  2054  0695                     	;# 
  2055  0696                     	;# 
  2056  0697                     	;# 
  2057  0699                     	;# 
  2058  069A                     	;# 
  2059  0711                     	;# 
  2060  0712                     	;# 
  2061  0713                     	;# 
  2062  0714                     	;# 
  2063  0715                     	;# 
  2064  0718                     	;# 
  2065  0718                     	;# 
  2066  0719                     	;# 
  2067  071A                     	;# 
  2068  071A                     	;# 
  2069  071B                     	;# 
  2070  071C                     	;# 
  2071  071D                     	;# 
  2072  0791                     	;# 
  2073  0791                     	;# 
  2074  0792                     	;# 
  2075  0793                     	;# 
  2076  0793                     	;# 
  2077  0794                     	;# 
  2078  0795                     	;# 
  2079  0795                     	;# 
  2080  0796                     	;# 
  2081  0797                     	;# 
  2082  0797                     	;# 
  2083  0798                     	;# 
  2084  0799                     	;# 
  2085  079A                     	;# 
  2086  080C                     	;# 
  2087  080C                     	;# 
  2088  080D                     	;# 
  2089  080E                     	;# 
  2090  080E                     	;# 
  2091  080F                     	;# 
  2092  0810                     	;# 
  2093  0810                     	;# 
  2094  0811                     	;# 
  2095  0812                     	;# 
  2096  0812                     	;# 
  2097  0813                     	;# 
  2098  0814                     	;# 
  2099  0815                     	;# 
  2100  0816                     	;# 
  2101  0817                     	;# 
  2102  0818                     	;# 
  2103  0819                     	;# 
  2104  081A                     	;# 
  2105  081A                     	;# 
  2106  081B                     	;# 
  2107  081C                     	;# 
  2108  081C                     	;# 
  2109  081D                     	;# 
  2110  088C                     	;# 
  2111  088D                     	;# 
  2112  088E                     	;# 
  2113  088F                     	;# 
  2114  088F                     	;# 
  2115  0890                     	;# 
  2116  0891                     	;# 
  2117  0892                     	;# 
  2118  0893                     	;# 
  2119  0893                     	;# 
  2120  0894                     	;# 
  2121  0895                     	;# 
  2122  0896                     	;# 
  2123  0897                     	;# 
  2124  0897                     	;# 
  2125  0898                     	;# 
  2126  0899                     	;# 
  2127  0D8C                     	;# 
  2128  0D8C                     	;# 
  2129  0D8D                     	;# 
  2130  0D8E                     	;# 
  2131  0D8F                     	;# 
  2132  0D8F                     	;# 
  2133  0D90                     	;# 
  2134  0D91                     	;# 
  2135  0D92                     	;# 
  2136  0D92                     	;# 
  2137  0D93                     	;# 
  2138  0D94                     	;# 
  2139  0D95                     	;# 
  2140  0D95                     	;# 
  2141  0D96                     	;# 
  2142  0D97                     	;# 
  2143  0D98                     	;# 
  2144  0D99                     	;# 
  2145  0D9A                     	;# 
  2146  0D9B                     	;# 
  2147  0D9C                     	;# 
  2148  0D9D                     	;# 
  2149  0D9E                     	;# 
  2150  0D9E                     	;# 
  2151  0D9F                     	;# 
  2152  0DA0                     	;# 
  2153  0DA1                     	;# 
  2154  0DA1                     	;# 
  2155  0DA2                     	;# 
  2156  0DA3                     	;# 
  2157  0DA4                     	;# 
  2158  0DA4                     	;# 
  2159  0DA5                     	;# 
  2160  0DA6                     	;# 
  2161  0DA7                     	;# 
  2162  0DA7                     	;# 
  2163  0DA8                     	;# 
  2164  0DA9                     	;# 
  2165  0DAA                     	;# 
  2166  0DAB                     	;# 
  2167  0DAC                     	;# 
  2168  0DAD                     	;# 
  2169  0DAE                     	;# 
  2170  0DAF                     	;# 
  2171  0E0F                     	;# 
  2172  0E10                     	;# 
  2173  0E11                     	;# 
  2174  0E12                     	;# 
  2175  0E13                     	;# 
  2176  0E14                     	;# 
  2177  0E15                     	;# 
  2178  0E16                     	;# 
  2179  0E17                     	;# 
  2180  0E18                     	;# 
  2181  0E19                     	;# 
  2182  0E1A                     	;# 
  2183  0E1B                     	;# 
  2184  0E1C                     	;# 
  2185  0E1D                     	;# 
  2186  0E1E                     	;# 
  2187  0E1F                     	;# 
  2188  0E20                     	;# 
  2189  0E21                     	;# 
  2190  0E22                     	;# 
  2191  0E23                     	;# 
  2192  0E24                     	;# 
  2193  0E25                     	;# 
  2194  0E26                     	;# 
  2195  0E27                     	;# 
  2196  0E28                     	;# 
  2197  0E29                     	;# 
  2198  0E2A                     	;# 
  2199  0E2B                     	;# 
  2200  0E2C                     	;# 
  2201  0E2D                     	;# 
  2202  0E2E                     	;# 
  2203  0E90                     	;# 
  2204  0E91                     	;# 
  2205  0E92                     	;# 
  2206  0E94                     	;# 
  2207  0E95                     	;# 
  2208  0E9C                     	;# 
  2209  0E9D                     	;# 
  2210  0E9E                     	;# 
  2211  0E9F                     	;# 
  2212  0EA0                     	;# 
  2213  0EA1                     	;# 
  2214  0EA2                     	;# 
  2215  0EA3                     	;# 
  2216  0EA4                     	;# 
  2217  0EA5                     	;# 
  2218  0EA6                     	;# 
  2219  0EA7                     	;# 
  2220  0F0F                     	;# 
  2221  0F10                     	;# 
  2222  0F11                     	;# 
  2223  0F12                     	;# 
  2224  0F13                     	;# 
  2225  0F14                     	;# 
  2226  0F15                     	;# 
  2227  0F16                     	;# 
  2228  0F17                     	;# 
  2229  0F18                     	;# 
  2230  0F19                     	;# 
  2231  0F1A                     	;# 
  2232  0F1B                     	;# 
  2233  0F1C                     	;# 
  2234  0F1D                     	;# 
  2235  0F1E                     	;# 
  2236  0F1F                     	;# 
  2237  0F20                     	;# 
  2238  0F21                     	;# 
  2239  0F22                     	;# 
  2240  0F23                     	;# 
  2241  0F24                     	;# 
  2242  0F25                     	;# 
  2243  0F26                     	;# 
  2244  0F27                     	;# 
  2245  0F28                     	;# 
  2246  0F29                     	;# 
  2247  0F2A                     	;# 
  2248  0F2B                     	;# 
  2249  0F2C                     	;# 
  2250  0F2D                     	;# 
  2251  0F2E                     	;# 
  2252  0F2F                     	;# 
  2253  0F30                     	;# 
  2254  0F31                     	;# 
  2255  0F32                     	;# 
  2256  0F33                     	;# 
  2257  0F34                     	;# 
  2258  0F35                     	;# 
  2259  0F36                     	;# 
  2260  0F37                     	;# 
  2261  0FE4                     	;# 
  2262  0FE5                     	;# 
  2263  0FE6                     	;# 
  2264  0FE7                     	;# 
  2265  0FE8                     	;# 
  2266  0FE9                     	;# 
  2267  0FEA                     	;# 
  2268  0FEB                     	;# 
  2269  0FED                     	;# 
  2270  0FEE                     	;# 
  2271  0FEF                     	;# 
  2272  0000                     	;# 
  2273  0001                     	;# 
  2274  0002                     	;# 
  2275  0003                     	;# 
  2276  0004                     	;# 
  2277  0005                     	;# 
  2278  0006                     	;# 
  2279  0007                     	;# 
  2280  0008                     	;# 
  2281  0009                     	;# 
  2282  000A                     	;# 
  2283  000B                     	;# 
  2284  000C                     	;# 
  2285  000D                     	;# 
  2286  000E                     	;# 
  2287  0010                     	;# 
  2288  0011                     	;# 
  2289  0012                     	;# 
  2290  0013                     	;# 
  2291  0014                     	;# 
  2292  0015                     	;# 
  2293  0016                     	;# 
  2294  0016                     	;# 
  2295  0017                     	;# 
  2296  0018                     	;# 
  2297  0019                     	;# 
  2298  001A                     	;# 
  2299  001A                     	;# 
  2300  001B                     	;# 
  2301  001B                     	;# 
  2302  001C                     	;# 
  2303  001D                     	;# 
  2304  001E                     	;# 
  2305  001F                     	;# 
  2306  008C                     	;# 
  2307  008D                     	;# 
  2308  008E                     	;# 
  2309  0090                     	;# 
  2310  0091                     	;# 
  2311  0092                     	;# 
  2312  0093                     	;# 
  2313  0094                     	;# 
  2314  0095                     	;# 
  2315  0096                     	;# 
  2316  0098                     	;# 
  2317  0099                     	;# 
  2318  009A                     	;# 
  2319  009B                     	;# 
  2320  009B                     	;# 
  2321  009C                     	;# 
  2322  009D                     	;# 
  2323  009E                     	;# 
  2324  009F                     	;# 
  2325  010C                     	;# 
  2326  010D                     	;# 
  2327  010E                     	;# 
  2328  0111                     	;# 
  2329  0112                     	;# 
  2330  0113                     	;# 
  2331  0114                     	;# 
  2332  0115                     	;# 
  2333  0116                     	;# 
  2334  0117                     	;# 
  2335  0118                     	;# 
  2336  0119                     	;# 
  2337  011C                     	;# 
  2338  018C                     	;# 
  2339  018D                     	;# 
  2340  018E                     	;# 
  2341  0191                     	;# 
  2342  0191                     	;# 
  2343  0192                     	;# 
  2344  0193                     	;# 
  2345  0193                     	;# 
  2346  0194                     	;# 
  2347  0195                     	;# 
  2348  0196                     	;# 
  2349  0197                     	;# 
  2350  0199                     	;# 
  2351  0199                     	;# 
  2352  0199                     	;# 
  2353  019A                     	;# 
  2354  019A                     	;# 
  2355  019A                     	;# 
  2356  019B                     	;# 
  2357  019B                     	;# 
  2358  019B                     	;# 
  2359  019B                     	;# 
  2360  019B                     	;# 
  2361  019C                     	;# 
  2362  019C                     	;# 
  2363  019C                     	;# 
  2364  019D                     	;# 
  2365  019D                     	;# 
  2366  019D                     	;# 
  2367  019E                     	;# 
  2368  019E                     	;# 
  2369  019E                     	;# 
  2370  019F                     	;# 
  2371  019F                     	;# 
  2372  019F                     	;# 
  2373  019F                     	;# 
  2374  019F                     	;# 
  2375  020C                     	;# 
  2376  020D                     	;# 
  2377  020E                     	;# 
  2378  0211                     	;# 
  2379  0211                     	;# 
  2380  0212                     	;# 
  2381  0212                     	;# 
  2382  0213                     	;# 
  2383  0213                     	;# 
  2384  0214                     	;# 
  2385  0214                     	;# 
  2386  0215                     	;# 
  2387  0215                     	;# 
  2388  0215                     	;# 
  2389  0215                     	;# 
  2390  0216                     	;# 
  2391  0216                     	;# 
  2392  0217                     	;# 
  2393  0217                     	;# 
  2394  028C                     	;# 
  2395  028D                     	;# 
  2396  028E                     	;# 
  2397  0291                     	;# 
  2398  0291                     	;# 
  2399  0292                     	;# 
  2400  0293                     	;# 
  2401  0294                     	;# 
  2402  0298                     	;# 
  2403  0298                     	;# 
  2404  0299                     	;# 
  2405  029A                     	;# 
  2406  029B                     	;# 
  2407  029E                     	;# 
  2408  030C                     	;# 
  2409  030D                     	;# 
  2410  030E                     	;# 
  2411  038C                     	;# 
  2412  038D                     	;# 
  2413  038E                     	;# 
  2414  0391                     	;# 
  2415  0392                     	;# 
  2416  0393                     	;# 
  2417  0394                     	;# 
  2418  0395                     	;# 
  2419  0396                     	;# 
  2420  0397                     	;# 
  2421  0398                     	;# 
  2422  0399                     	;# 
  2423  040E                     	;# 
  2424  0413                     	;# 
  2425  0413                     	;# 
  2426  0414                     	;# 
  2427  0414                     	;# 
  2428  0415                     	;# 
  2429  0416                     	;# 
  2430  0417                     	;# 
  2431  0418                     	;# 
  2432  041A                     	;# 
  2433  041A                     	;# 
  2434  041B                     	;# 
  2435  041B                     	;# 
  2436  041C                     	;# 
  2437  041D                     	;# 
  2438  041E                     	;# 
  2439  041F                     	;# 
  2440  0493                     	;# 
  2441  0494                     	;# 
  2442  0495                     	;# 
  2443  0496                     	;# 
  2444  049A                     	;# 
  2445  049B                     	;# 
  2446  049C                     	;# 
  2447  049D                     	;# 
  2448  058C                     	;# 
  2449  058C                     	;# 
  2450  058D                     	;# 
  2451  058E                     	;# 
  2452  058E                     	;# 
  2453  058F                     	;# 
  2454  0590                     	;# 
  2455  0590                     	;# 
  2456  0591                     	;# 
  2457  0592                     	;# 
  2458  0592                     	;# 
  2459  0593                     	;# 
  2460  0594                     	;# 
  2461  0594                     	;# 
  2462  0595                     	;# 
  2463  0596                     	;# 
  2464  0596                     	;# 
  2465  0597                     	;# 
  2466  0598                     	;# 
  2467  0599                     	;# 
  2468  059A                     	;# 
  2469  059B                     	;# 
  2470  059B                     	;# 
  2471  059C                     	;# 
  2472  059D                     	;# 
  2473  060C                     	;# 
  2474  060C                     	;# 
  2475  060D                     	;# 
  2476  060E                     	;# 
  2477  060F                     	;# 
  2478  060F                     	;# 
  2479  0610                     	;# 
  2480  0611                     	;# 
  2481  0612                     	;# 
  2482  0613                     	;# 
  2483  0614                     	;# 
  2484  0617                     	;# 
  2485  0618                     	;# 
  2486  0619                     	;# 
  2487  061A                     	;# 
  2488  061B                     	;# 
  2489  061C                     	;# 
  2490  0691                     	;# 
  2491  0692                     	;# 
  2492  0693                     	;# 
  2493  0694                     	;# 
  2494  0695                     	;# 
  2495  0696                     	;# 
  2496  0697                     	;# 
  2497  0699                     	;# 
  2498  069A                     	;# 
  2499  0711                     	;# 
  2500  0712                     	;# 
  2501  0713                     	;# 
  2502  0714                     	;# 
  2503  0715                     	;# 
  2504  0718                     	;# 
  2505  0718                     	;# 
  2506  0719                     	;# 
  2507  071A                     	;# 
  2508  071A                     	;# 
  2509  071B                     	;# 
  2510  071C                     	;# 
  2511  071D                     	;# 
  2512  0791                     	;# 
  2513  0791                     	;# 
  2514  0792                     	;# 
  2515  0793                     	;# 
  2516  0793                     	;# 
  2517  0794                     	;# 
  2518  0795                     	;# 
  2519  0795                     	;# 
  2520  0796                     	;# 
  2521  0797                     	;# 
  2522  0797                     	;# 
  2523  0798                     	;# 
  2524  0799                     	;# 
  2525  079A                     	;# 
  2526  080C                     	;# 
  2527  080C                     	;# 
  2528  080D                     	;# 
  2529  080E                     	;# 
  2530  080E                     	;# 
  2531  080F                     	;# 
  2532  0810                     	;# 
  2533  0810                     	;# 
  2534  0811                     	;# 
  2535  0812                     	;# 
  2536  0812                     	;# 
  2537  0813                     	;# 
  2538  0814                     	;# 
  2539  0815                     	;# 
  2540  0816                     	;# 
  2541  0817                     	;# 
  2542  0818                     	;# 
  2543  0819                     	;# 
  2544  081A                     	;# 
  2545  081A                     	;# 
  2546  081B                     	;# 
  2547  081C                     	;# 
  2548  081C                     	;# 
  2549  081D                     	;# 
  2550  088C                     	;# 
  2551  088D                     	;# 
  2552  088E                     	;# 
  2553  088F                     	;# 
  2554  088F                     	;# 
  2555  0890                     	;# 
  2556  0891                     	;# 
  2557  0892                     	;# 
  2558  0893                     	;# 
  2559  0893                     	;# 
  2560  0894                     	;# 
  2561  0895                     	;# 
  2562  0896                     	;# 
  2563  0897                     	;# 
  2564  0897                     	;# 
  2565  0898                     	;# 
  2566  0899                     	;# 
  2567  0D8C                     	;# 
  2568  0D8C                     	;# 
  2569  0D8D                     	;# 
  2570  0D8E                     	;# 
  2571  0D8F                     	;# 
  2572  0D8F                     	;# 
  2573  0D90                     	;# 
  2574  0D91                     	;# 
  2575  0D92                     	;# 
  2576  0D92                     	;# 
  2577  0D93                     	;# 
  2578  0D94                     	;# 
  2579  0D95                     	;# 
  2580  0D95                     	;# 
  2581  0D96                     	;# 
  2582  0D97                     	;# 
  2583  0D98                     	;# 
  2584  0D99                     	;# 
  2585  0D9A                     	;# 
  2586  0D9B                     	;# 
  2587  0D9C                     	;# 
  2588  0D9D                     	;# 
  2589  0D9E                     	;# 
  2590  0D9E                     	;# 
  2591  0D9F                     	;# 
  2592  0DA0                     	;# 
  2593  0DA1                     	;# 
  2594  0DA1                     	;# 
  2595  0DA2                     	;# 
  2596  0DA3                     	;# 
  2597  0DA4                     	;# 
  2598  0DA4                     	;# 
  2599  0DA5                     	;# 
  2600  0DA6                     	;# 
  2601  0DA7                     	;# 
  2602  0DA7                     	;# 
  2603  0DA8                     	;# 
  2604  0DA9                     	;# 
  2605  0DAA                     	;# 
  2606  0DAB                     	;# 
  2607  0DAC                     	;# 
  2608  0DAD                     	;# 
  2609  0DAE                     	;# 
  2610  0DAF                     	;# 
  2611  0E0F                     	;# 
  2612  0E10                     	;# 
  2613  0E11                     	;# 
  2614  0E12                     	;# 
  2615  0E13                     	;# 
  2616  0E14                     	;# 
  2617  0E15                     	;# 
  2618  0E16                     	;# 
  2619  0E17                     	;# 
  2620  0E18                     	;# 
  2621  0E19                     	;# 
  2622  0E1A                     	;# 
  2623  0E1B                     	;# 
  2624  0E1C                     	;# 
  2625  0E1D                     	;# 
  2626  0E1E                     	;# 
  2627  0E1F                     	;# 
  2628  0E20                     	;# 
  2629  0E21                     	;# 
  2630  0E22                     	;# 
  2631  0E23                     	;# 
  2632  0E24                     	;# 
  2633  0E25                     	;# 
  2634  0E26                     	;# 
  2635  0E27                     	;# 
  2636  0E28                     	;# 
  2637  0E29                     	;# 
  2638  0E2A                     	;# 
  2639  0E2B                     	;# 
  2640  0E2C                     	;# 
  2641  0E2D                     	;# 
  2642  0E2E                     	;# 
  2643  0E90                     	;# 
  2644  0E91                     	;# 
  2645  0E92                     	;# 
  2646  0E94                     	;# 
  2647  0E95                     	;# 
  2648  0E9C                     	;# 
  2649  0E9D                     	;# 
  2650  0E9E                     	;# 
  2651  0E9F                     	;# 
  2652  0EA0                     	;# 
  2653  0EA1                     	;# 
  2654  0EA2                     	;# 
  2655  0EA3                     	;# 
  2656  0EA4                     	;# 
  2657  0EA5                     	;# 
  2658  0EA6                     	;# 
  2659  0EA7                     	;# 
  2660  0F0F                     	;# 
  2661  0F10                     	;# 
  2662  0F11                     	;# 
  2663  0F12                     	;# 
  2664  0F13                     	;# 
  2665  0F14                     	;# 
  2666  0F15                     	;# 
  2667  0F16                     	;# 
  2668  0F17                     	;# 
  2669  0F18                     	;# 
  2670  0F19                     	;# 
  2671  0F1A                     	;# 
  2672  0F1B                     	;# 
  2673  0F1C                     	;# 
  2674  0F1D                     	;# 
  2675  0F1E                     	;# 
  2676  0F1F                     	;# 
  2677  0F20                     	;# 
  2678  0F21                     	;# 
  2679  0F22                     	;# 
  2680  0F23                     	;# 
  2681  0F24                     	;# 
  2682  0F25                     	;# 
  2683  0F26                     	;# 
  2684  0F27                     	;# 
  2685  0F28                     	;# 
  2686  0F29                     	;# 
  2687  0F2A                     	;# 
  2688  0F2B                     	;# 
  2689  0F2C                     	;# 
  2690  0F2D                     	;# 
  2691  0F2E                     	;# 
  2692  0F2F                     	;# 
  2693  0F30                     	;# 
  2694  0F31                     	;# 
  2695  0F32                     	;# 
  2696  0F33                     	;# 
  2697  0F34                     	;# 
  2698  0F35                     	;# 
  2699  0F36                     	;# 
  2700  0F37                     	;# 
  2701  0FE4                     	;# 
  2702  0FE5                     	;# 
  2703  0FE6                     	;# 
  2704  0FE7                     	;# 
  2705  0FE8                     	;# 
  2706  0FE9                     	;# 
  2707  0FEA                     	;# 
  2708  0FEB                     	;# 
  2709  0FED                     	;# 
  2710  0FEE                     	;# 
  2711  0FEF                     	;# 
  2712  0000                     	;# 
  2713  0001                     	;# 
  2714  0002                     	;# 
  2715  0003                     	;# 
  2716  0004                     	;# 
  2717  0005                     	;# 
  2718  0006                     	;# 
  2719  0007                     	;# 
  2720  0008                     	;# 
  2721  0009                     	;# 
  2722  000A                     	;# 
  2723  000B                     	;# 
  2724  000C                     	;# 
  2725  000D                     	;# 
  2726  000E                     	;# 
  2727  0010                     	;# 
  2728  0011                     	;# 
  2729  0012                     	;# 
  2730  0013                     	;# 
  2731  0014                     	;# 
  2732  0015                     	;# 
  2733  0016                     	;# 
  2734  0016                     	;# 
  2735  0017                     	;# 
  2736  0018                     	;# 
  2737  0019                     	;# 
  2738  001A                     	;# 
  2739  001A                     	;# 
  2740  001B                     	;# 
  2741  001B                     	;# 
  2742  001C                     	;# 
  2743  001D                     	;# 
  2744  001E                     	;# 
  2745  001F                     	;# 
  2746  008C                     	;# 
  2747  008D                     	;# 
  2748  008E                     	;# 
  2749  0090                     	;# 
  2750  0091                     	;# 
  2751  0092                     	;# 
  2752  0093                     	;# 
  2753  0094                     	;# 
  2754  0095                     	;# 
  2755  0096                     	;# 
  2756  0098                     	;# 
  2757  0099                     	;# 
  2758  009A                     	;# 
  2759  009B                     	;# 
  2760  009B                     	;# 
  2761  009C                     	;# 
  2762  009D                     	;# 
  2763  009E                     	;# 
  2764  009F                     	;# 
  2765  010C                     	;# 
  2766  010D                     	;# 
  2767  010E                     	;# 
  2768  0111                     	;# 
  2769  0112                     	;# 
  2770  0113                     	;# 
  2771  0114                     	;# 
  2772  0115                     	;# 
  2773  0116                     	;# 
  2774  0117                     	;# 
  2775  0118                     	;# 
  2776  0119                     	;# 
  2777  011C                     	;# 
  2778  018C                     	;# 
  2779  018D                     	;# 
  2780  018E                     	;# 
  2781  0191                     	;# 
  2782  0191                     	;# 
  2783  0192                     	;# 
  2784  0193                     	;# 
  2785  0193                     	;# 
  2786  0194                     	;# 
  2787  0195                     	;# 
  2788  0196                     	;# 
  2789  0197                     	;# 
  2790  0199                     	;# 
  2791  0199                     	;# 
  2792  0199                     	;# 
  2793  019A                     	;# 
  2794  019A                     	;# 
  2795  019A                     	;# 
  2796  019B                     	;# 
  2797  019B                     	;# 
  2798  019B                     	;# 
  2799  019B                     	;# 
  2800  019B                     	;# 
  2801  019C                     	;# 
  2802  019C                     	;# 
  2803  019C                     	;# 
  2804  019D                     	;# 
  2805  019D                     	;# 
  2806  019D                     	;# 
  2807  019E                     	;# 
  2808  019E                     	;# 
  2809  019E                     	;# 
  2810  019F                     	;# 
  2811  019F                     	;# 
  2812  019F                     	;# 
  2813  019F                     	;# 
  2814  019F                     	;# 
  2815  020C                     	;# 
  2816  020D                     	;# 
  2817  020E                     	;# 
  2818  0211                     	;# 
  2819  0211                     	;# 
  2820  0212                     	;# 
  2821  0212                     	;# 
  2822  0213                     	;# 
  2823  0213                     	;# 
  2824  0214                     	;# 
  2825  0214                     	;# 
  2826  0215                     	;# 
  2827  0215                     	;# 
  2828  0215                     	;# 
  2829  0215                     	;# 
  2830  0216                     	;# 
  2831  0216                     	;# 
  2832  0217                     	;# 
  2833  0217                     	;# 
  2834  028C                     	;# 
  2835  028D                     	;# 
  2836  028E                     	;# 
  2837  0291                     	;# 
  2838  0291                     	;# 
  2839  0292                     	;# 
  2840  0293                     	;# 
  2841  0294                     	;# 
  2842  0298                     	;# 
  2843  0298                     	;# 
  2844  0299                     	;# 
  2845  029A                     	;# 
  2846  029B                     	;# 
  2847  029E                     	;# 
  2848  030C                     	;# 
  2849  030D                     	;# 
  2850  030E                     	;# 
  2851  038C                     	;# 
  2852  038D                     	;# 
  2853  038E                     	;# 
  2854  0391                     	;# 
  2855  0392                     	;# 
  2856  0393                     	;# 
  2857  0394                     	;# 
  2858  0395                     	;# 
  2859  0396                     	;# 
  2860  0397                     	;# 
  2861  0398                     	;# 
  2862  0399                     	;# 
  2863  040E                     	;# 
  2864  0413                     	;# 
  2865  0413                     	;# 
  2866  0414                     	;# 
  2867  0414                     	;# 
  2868  0415                     	;# 
  2869  0416                     	;# 
  2870  0417                     	;# 
  2871  0418                     	;# 
  2872  041A                     	;# 
  2873  041A                     	;# 
  2874  041B                     	;# 
  2875  041B                     	;# 
  2876  041C                     	;# 
  2877  041D                     	;# 
  2878  041E                     	;# 
  2879  041F                     	;# 
  2880  0493                     	;# 
  2881  0494                     	;# 
  2882  0495                     	;# 
  2883  0496                     	;# 
  2884  049A                     	;# 
  2885  049B                     	;# 
  2886  049C                     	;# 
  2887  049D                     	;# 
  2888  058C                     	;# 
  2889  058C                     	;# 
  2890  058D                     	;# 
  2891  058E                     	;# 
  2892  058E                     	;# 
  2893  058F                     	;# 
  2894  0590                     	;# 
  2895  0590                     	;# 
  2896  0591                     	;# 
  2897  0592                     	;# 
  2898  0592                     	;# 
  2899  0593                     	;# 
  2900  0594                     	;# 
  2901  0594                     	;# 
  2902  0595                     	;# 
  2903  0596                     	;# 
  2904  0596                     	;# 
  2905  0597                     	;# 
  2906  0598                     	;# 
  2907  0599                     	;# 
  2908  059A                     	;# 
  2909  059B                     	;# 
  2910  059B                     	;# 
  2911  059C                     	;# 
  2912  059D                     	;# 
  2913  060C                     	;# 
  2914  060C                     	;# 
  2915  060D                     	;# 
  2916  060E                     	;# 
  2917  060F                     	;# 
  2918  060F                     	;# 
  2919  0610                     	;# 
  2920  0611                     	;# 
  2921  0612                     	;# 
  2922  0613                     	;# 
  2923  0614                     	;# 
  2924  0617                     	;# 
  2925  0618                     	;# 
  2926  0619                     	;# 
  2927  061A                     	;# 
  2928  061B                     	;# 
  2929  061C                     	;# 
  2930  0691                     	;# 
  2931  0692                     	;# 
  2932  0693                     	;# 
  2933  0694                     	;# 
  2934  0695                     	;# 
  2935  0696                     	;# 
  2936  0697                     	;# 
  2937  0699                     	;# 
  2938  069A                     	;# 
  2939  0711                     	;# 
  2940  0712                     	;# 
  2941  0713                     	;# 
  2942  0714                     	;# 
  2943  0715                     	;# 
  2944  0718                     	;# 
  2945  0718                     	;# 
  2946  0719                     	;# 
  2947  071A                     	;# 
  2948  071A                     	;# 
  2949  071B                     	;# 
  2950  071C                     	;# 
  2951  071D                     	;# 
  2952  0791                     	;# 
  2953  0791                     	;# 
  2954  0792                     	;# 
  2955  0793                     	;# 
  2956  0793                     	;# 
  2957  0794                     	;# 
  2958  0795                     	;# 
  2959  0795                     	;# 
  2960  0796                     	;# 
  2961  0797                     	;# 
  2962  0797                     	;# 
  2963  0798                     	;# 
  2964  0799                     	;# 
  2965  079A                     	;# 
  2966  080C                     	;# 
  2967  080C                     	;# 
  2968  080D                     	;# 
  2969  080E                     	;# 
  2970  080E                     	;# 
  2971  080F                     	;# 
  2972  0810                     	;# 
  2973  0810                     	;# 
  2974  0811                     	;# 
  2975  0812                     	;# 
  2976  0812                     	;# 
  2977  0813                     	;# 
  2978  0814                     	;# 
  2979  0815                     	;# 
  2980  0816                     	;# 
  2981  0817                     	;# 
  2982  0818                     	;# 
  2983  0819                     	;# 
  2984  081A                     	;# 
  2985  081A                     	;# 
  2986  081B                     	;# 
  2987  081C                     	;# 
  2988  081C                     	;# 
  2989  081D                     	;# 
  2990  088C                     	;# 
  2991  088D                     	;# 
  2992  088E                     	;# 
  2993  088F                     	;# 
  2994  088F                     	;# 
  2995  0890                     	;# 
  2996  0891                     	;# 
  2997  0892                     	;# 
  2998  0893                     	;# 
  2999  0893                     	;# 
  3000  0894                     	;# 
  3001  0895                     	;# 
  3002  0896                     	;# 
  3003  0897                     	;# 
  3004  0897                     	;# 
  3005  0898                     	;# 
  3006  0899                     	;# 
  3007  0D8C                     	;# 
  3008  0D8C                     	;# 
  3009  0D8D                     	;# 
  3010  0D8E                     	;# 
  3011  0D8F                     	;# 
  3012  0D8F                     	;# 
  3013  0D90                     	;# 
  3014  0D91                     	;# 
  3015  0D92                     	;# 
  3016  0D92                     	;# 
  3017  0D93                     	;# 
  3018  0D94                     	;# 
  3019  0D95                     	;# 
  3020  0D95                     	;# 
  3021  0D96                     	;# 
  3022  0D97                     	;# 
  3023  0D98                     	;# 
  3024  0D99                     	;# 
  3025  0D9A                     	;# 
  3026  0D9B                     	;# 
  3027  0D9C                     	;# 
  3028  0D9D                     	;# 
  3029  0D9E                     	;# 
  3030  0D9E                     	;# 
  3031  0D9F                     	;# 
  3032  0DA0                     	;# 
  3033  0DA1                     	;# 
  3034  0DA1                     	;# 
  3035  0DA2                     	;# 
  3036  0DA3                     	;# 
  3037  0DA4                     	;# 
  3038  0DA4                     	;# 
  3039  0DA5                     	;# 
  3040  0DA6                     	;# 
  3041  0DA7                     	;# 
  3042  0DA7                     	;# 
  3043  0DA8                     	;# 
  3044  0DA9                     	;# 
  3045  0DAA                     	;# 
  3046  0DAB                     	;# 
  3047  0DAC                     	;# 
  3048  0DAD                     	;# 
  3049  0DAE                     	;# 
  3050  0DAF                     	;# 
  3051  0E0F                     	;# 
  3052  0E10                     	;# 
  3053  0E11                     	;# 
  3054  0E12                     	;# 
  3055  0E13                     	;# 
  3056  0E14                     	;# 
  3057  0E15                     	;# 
  3058  0E16                     	;# 
  3059  0E17                     	;# 
  3060  0E18                     	;# 
  3061  0E19                     	;# 
  3062  0E1A                     	;# 
  3063  0E1B                     	;# 
  3064  0E1C                     	;# 
  3065  0E1D                     	;# 
  3066  0E1E                     	;# 
  3067  0E1F                     	;# 
  3068  0E20                     	;# 
  3069  0E21                     	;# 
  3070  0E22                     	;# 
  3071  0E23                     	;# 
  3072  0E24                     	;# 
  3073  0E25                     	;# 
  3074  0E26                     	;# 
  3075  0E27                     	;# 
  3076  0E28                     	;# 
  3077  0E29                     	;# 
  3078  0E2A                     	;# 
  3079  0E2B                     	;# 
  3080  0E2C                     	;# 
  3081  0E2D                     	;# 
  3082  0E2E                     	;# 
  3083  0E90                     	;# 
  3084  0E91                     	;# 
  3085  0E92                     	;# 
  3086  0E94                     	;# 
  3087  0E95                     	;# 
  3088  0E9C                     	;# 
  3089  0E9D                     	;# 
  3090  0E9E                     	;# 
  3091  0E9F                     	;# 
  3092  0EA0                     	;# 
  3093  0EA1                     	;# 
  3094  0EA2                     	;# 
  3095  0EA3                     	;# 
  3096  0EA4                     	;# 
  3097  0EA5                     	;# 
  3098  0EA6                     	;# 
  3099  0EA7                     	;# 
  3100  0F0F                     	;# 
  3101  0F10                     	;# 
  3102  0F11                     	;# 
  3103  0F12                     	;# 
  3104  0F13                     	;# 
  3105  0F14                     	;# 
  3106  0F15                     	;# 
  3107  0F16                     	;# 
  3108  0F17                     	;# 
  3109  0F18                     	;# 
  3110  0F19                     	;# 
  3111  0F1A                     	;# 
  3112  0F1B                     	;# 
  3113  0F1C                     	;# 
  3114  0F1D                     	;# 
  3115  0F1E                     	;# 
  3116  0F1F                     	;# 
  3117  0F20                     	;# 
  3118  0F21                     	;# 
  3119  0F22                     	;# 
  3120  0F23                     	;# 
  3121  0F24                     	;# 
  3122  0F25                     	;# 
  3123  0F26                     	;# 
  3124  0F27                     	;# 
  3125  0F28                     	;# 
  3126  0F29                     	;# 
  3127  0F2A                     	;# 
  3128  0F2B                     	;# 
  3129  0F2C                     	;# 
  3130  0F2D                     	;# 
  3131  0F2E                     	;# 
  3132  0F2F                     	;# 
  3133  0F30                     	;# 
  3134  0F31                     	;# 
  3135  0F32                     	;# 
  3136  0F33                     	;# 
  3137  0F34                     	;# 
  3138  0F35                     	;# 
  3139  0F36                     	;# 
  3140  0F37                     	;# 
  3141  0FE4                     	;# 
  3142  0FE5                     	;# 
  3143  0FE6                     	;# 
  3144  0FE7                     	;# 
  3145  0FE8                     	;# 
  3146  0FE9                     	;# 
  3147  0FEA                     	;# 
  3148  0FEB                     	;# 
  3149  0FED                     	;# 
  3150  0FEE                     	;# 
  3151  0FEF                     	;# 
  3152  0000                     	;# 
  3153  0001                     	;# 
  3154  0002                     	;# 
  3155  0003                     	;# 
  3156  0004                     	;# 
  3157  0005                     	;# 
  3158  0006                     	;# 
  3159  0007                     	;# 
  3160  0008                     	;# 
  3161  0009                     	;# 
  3162  000A                     	;# 
  3163  000B                     	;# 
  3164  000C                     	;# 
  3165  000D                     	;# 
  3166  000E                     	;# 
  3167  0010                     	;# 
  3168  0011                     	;# 
  3169  0012                     	;# 
  3170  0013                     	;# 
  3171  0014                     	;# 
  3172  0015                     	;# 
  3173  0016                     	;# 
  3174  0016                     	;# 
  3175  0017                     	;# 
  3176  0018                     	;# 
  3177  0019                     	;# 
  3178  001A                     	;# 
  3179  001A                     	;# 
  3180  001B                     	;# 
  3181  001B                     	;# 
  3182  001C                     	;# 
  3183  001D                     	;# 
  3184  001E                     	;# 
  3185  001F                     	;# 
  3186  008C                     	;# 
  3187  008D                     	;# 
  3188  008E                     	;# 
  3189  0090                     	;# 
  3190  0091                     	;# 
  3191  0092                     	;# 
  3192  0093                     	;# 
  3193  0094                     	;# 
  3194  0095                     	;# 
  3195  0096                     	;# 
  3196  0098                     	;# 
  3197  0099                     	;# 
  3198  009A                     	;# 
  3199  009B                     	;# 
  3200  009B                     	;# 
  3201  009C                     	;# 
  3202  009D                     	;# 
  3203  009E                     	;# 
  3204  009F                     	;# 
  3205  010C                     	;# 
  3206  010D                     	;# 
  3207  010E                     	;# 
  3208  0111                     	;# 
  3209  0112                     	;# 
  3210  0113                     	;# 
  3211  0114                     	;# 
  3212  0115                     	;# 
  3213  0116                     	;# 
  3214  0117                     	;# 
  3215  0118                     	;# 
  3216  0119                     	;# 
  3217  011C                     	;# 
  3218  018C                     	;# 
  3219  018D                     	;# 
  3220  018E                     	;# 
  3221  0191                     	;# 
  3222  0191                     	;# 
  3223  0192                     	;# 
  3224  0193                     	;# 
  3225  0193                     	;# 
  3226  0194                     	;# 
  3227  0195                     	;# 
  3228  0196                     	;# 
  3229  0197                     	;# 
  3230  0199                     	;# 
  3231  0199                     	;# 
  3232  0199                     	;# 
  3233  019A                     	;# 
  3234  019A                     	;# 
  3235  019A                     	;# 
  3236  019B                     	;# 
  3237  019B                     	;# 
  3238  019B                     	;# 
  3239  019B                     	;# 
  3240  019B                     	;# 
  3241  019C                     	;# 
  3242  019C                     	;# 
  3243  019C                     	;# 
  3244  019D                     	;# 
  3245  019D                     	;# 
  3246  019D                     	;# 
  3247  019E                     	;# 
  3248  019E                     	;# 
  3249  019E                     	;# 
  3250  019F                     	;# 
  3251  019F                     	;# 
  3252  019F                     	;# 
  3253  019F                     	;# 
  3254  019F                     	;# 
  3255  020C                     	;# 
  3256  020D                     	;# 
  3257  020E                     	;# 
  3258  0211                     	;# 
  3259  0211                     	;# 
  3260  0212                     	;# 
  3261  0212                     	;# 
  3262  0213                     	;# 
  3263  0213                     	;# 
  3264  0214                     	;# 
  3265  0214                     	;# 
  3266  0215                     	;# 
  3267  0215                     	;# 
  3268  0215                     	;# 
  3269  0215                     	;# 
  3270  0216                     	;# 
  3271  0216                     	;# 
  3272  0217                     	;# 
  3273  0217                     	;# 
  3274  028C                     	;# 
  3275  028D                     	;# 
  3276  028E                     	;# 
  3277  0291                     	;# 
  3278  0291                     	;# 
  3279  0292                     	;# 
  3280  0293                     	;# 
  3281  0294                     	;# 
  3282  0298                     	;# 
  3283  0298                     	;# 
  3284  0299                     	;# 
  3285  029A                     	;# 
  3286  029B                     	;# 
  3287  029E                     	;# 
  3288  030C                     	;# 
  3289  030D                     	;# 
  3290  030E                     	;# 
  3291  038C                     	;# 
  3292  038D                     	;# 
  3293  038E                     	;# 
  3294  0391                     	;# 
  3295  0392                     	;# 
  3296  0393                     	;# 
  3297  0394                     	;# 
  3298  0395                     	;# 
  3299  0396                     	;# 
  3300  0397                     	;# 
  3301  0398                     	;# 
  3302  0399                     	;# 
  3303  040E                     	;# 
  3304  0413                     	;# 
  3305  0413                     	;# 
  3306  0414                     	;# 
  3307  0414                     	;# 
  3308  0415                     	;# 
  3309  0416                     	;# 
  3310  0417                     	;# 
  3311  0418                     	;# 
  3312  041A                     	;# 
  3313  041A                     	;# 
  3314  041B                     	;# 
  3315  041B                     	;# 
  3316  041C                     	;# 
  3317  041D                     	;# 
  3318  041E                     	;# 
  3319  041F                     	;# 
  3320  0493                     	;# 
  3321  0494                     	;# 
  3322  0495                     	;# 
  3323  0496                     	;# 
  3324  049A                     	;# 
  3325  049B                     	;# 
  3326  049C                     	;# 
  3327  049D                     	;# 
  3328  058C                     	;# 
  3329  058C                     	;# 
  3330  058D                     	;# 
  3331  058E                     	;# 
  3332  058E                     	;# 
  3333  058F                     	;# 
  3334  0590                     	;# 
  3335  0590                     	;# 
  3336  0591                     	;# 
  3337  0592                     	;# 
  3338  0592                     	;# 
  3339  0593                     	;# 
  3340  0594                     	;# 
  3341  0594                     	;# 
  3342  0595                     	;# 
  3343  0596                     	;# 
  3344  0596                     	;# 
  3345  0597                     	;# 
  3346  0598                     	;# 
  3347  0599                     	;# 
  3348  059A                     	;# 
  3349  059B                     	;# 
  3350  059B                     	;# 
  3351  059C                     	;# 
  3352  059D                     	;# 
  3353  060C                     	;# 
  3354  060C                     	;# 
  3355  060D                     	;# 
  3356  060E                     	;# 
  3357  060F                     	;# 
  3358  060F                     	;# 
  3359  0610                     	;# 
  3360  0611                     	;# 
  3361  0612                     	;# 
  3362  0613                     	;# 
  3363  0614                     	;# 
  3364  0617                     	;# 
  3365  0618                     	;# 
  3366  0619                     	;# 
  3367  061A                     	;# 
  3368  061B                     	;# 
  3369  061C                     	;# 
  3370  0691                     	;# 
  3371  0692                     	;# 
  3372  0693                     	;# 
  3373  0694                     	;# 
  3374  0695                     	;# 
  3375  0696                     	;# 
  3376  0697                     	;# 
  3377  0699                     	;# 
  3378  069A                     	;# 
  3379  0711                     	;# 
  3380  0712                     	;# 
  3381  0713                     	;# 
  3382  0714                     	;# 
  3383  0715                     	;# 
  3384  0718                     	;# 
  3385  0718                     	;# 
  3386  0719                     	;# 
  3387  071A                     	;# 
  3388  071A                     	;# 
  3389  071B                     	;# 
  3390  071C                     	;# 
  3391  071D                     	;# 
  3392  0791                     	;# 
  3393  0791                     	;# 
  3394  0792                     	;# 
  3395  0793                     	;# 
  3396  0793                     	;# 
  3397  0794                     	;# 
  3398  0795                     	;# 
  3399  0795                     	;# 
  3400  0796                     	;# 
  3401  0797                     	;# 
  3402  0797                     	;# 
  3403  0798                     	;# 
  3404  0799                     	;# 
  3405  079A                     	;# 
  3406  080C                     	;# 
  3407  080C                     	;# 
  3408  080D                     	;# 
  3409  080E                     	;# 
  3410  080E                     	;# 
  3411  080F                     	;# 
  3412  0810                     	;# 
  3413  0810                     	;# 
  3414  0811                     	;# 
  3415  0812                     	;# 
  3416  0812                     	;# 
  3417  0813                     	;# 
  3418  0814                     	;# 
  3419  0815                     	;# 
  3420  0816                     	;# 
  3421  0817                     	;# 
  3422  0818                     	;# 
  3423  0819                     	;# 
  3424  081A                     	;# 
  3425  081A                     	;# 
  3426  081B                     	;# 
  3427  081C                     	;# 
  3428  081C                     	;# 
  3429  081D                     	;# 
  3430  088C                     	;# 
  3431  088D                     	;# 
  3432  088E                     	;# 
  3433  088F                     	;# 
  3434  088F                     	;# 
  3435  0890                     	;# 
  3436  0891                     	;# 
  3437  0892                     	;# 
  3438  0893                     	;# 
  3439  0893                     	;# 
  3440  0894                     	;# 
  3441  0895                     	;# 
  3442  0896                     	;# 
  3443  0897                     	;# 
  3444  0897                     	;# 
  3445  0898                     	;# 
  3446  0899                     	;# 
  3447  0D8C                     	;# 
  3448  0D8C                     	;# 
  3449  0D8D                     	;# 
  3450  0D8E                     	;# 
  3451  0D8F                     	;# 
  3452  0D8F                     	;# 
  3453  0D90                     	;# 
  3454  0D91                     	;# 
  3455  0D92                     	;# 
  3456  0D92                     	;# 
  3457  0D93                     	;# 
  3458  0D94                     	;# 
  3459  0D95                     	;# 
  3460  0D95                     	;# 
  3461  0D96                     	;# 
  3462  0D97                     	;# 
  3463  0D98                     	;# 
  3464  0D99                     	;# 
  3465  0D9A                     	;# 
  3466  0D9B                     	;# 
  3467  0D9C                     	;# 
  3468  0D9D                     	;# 
  3469  0D9E                     	;# 
  3470  0D9E                     	;# 
  3471  0D9F                     	;# 
  3472  0DA0                     	;# 
  3473  0DA1                     	;# 
  3474  0DA1                     	;# 
  3475  0DA2                     	;# 
  3476  0DA3                     	;# 
  3477  0DA4                     	;# 
  3478  0DA4                     	;# 
  3479  0DA5                     	;# 
  3480  0DA6                     	;# 
  3481  0DA7                     	;# 
  3482  0DA7                     	;# 
  3483  0DA8                     	;# 
  3484  0DA9                     	;# 
  3485  0DAA                     	;# 
  3486  0DAB                     	;# 
  3487  0DAC                     	;# 
  3488  0DAD                     	;# 
  3489  0DAE                     	;# 
  3490  0DAF                     	;# 
  3491  0E0F                     	;# 
  3492  0E10                     	;# 
  3493  0E11                     	;# 
  3494  0E12                     	;# 
  3495  0E13                     	;# 
  3496  0E14                     	;# 
  3497  0E15                     	;# 
  3498  0E16                     	;# 
  3499  0E17                     	;# 
  3500  0E18                     	;# 
  3501  0E19                     	;# 
  3502  0E1A                     	;# 
  3503  0E1B                     	;# 
  3504  0E1C                     	;# 
  3505  0E1D                     	;# 
  3506  0E1E                     	;# 
  3507  0E1F                     	;# 
  3508  0E20                     	;# 
  3509  0E21                     	;# 
  3510  0E22                     	;# 
  3511  0E23                     	;# 
  3512  0E24                     	;# 
  3513  0E25                     	;# 
  3514  0E26                     	;# 
  3515  0E27                     	;# 
  3516  0E28                     	;# 
  3517  0E29                     	;# 
  3518  0E2A                     	;# 
  3519  0E2B                     	;# 
  3520  0E2C                     	;# 
  3521  0E2D                     	;# 
  3522  0E2E                     	;# 
  3523  0E90                     	;# 
  3524  0E91                     	;# 
  3525  0E92                     	;# 
  3526  0E94                     	;# 
  3527  0E95                     	;# 
  3528  0E9C                     	;# 
  3529  0E9D                     	;# 
  3530  0E9E                     	;# 
  3531  0E9F                     	;# 
  3532  0EA0                     	;# 
  3533  0EA1                     	;# 
  3534  0EA2                     	;# 
  3535  0EA3                     	;# 
  3536  0EA4                     	;# 
  3537  0EA5                     	;# 
  3538  0EA6                     	;# 
  3539  0EA7                     	;# 
  3540  0F0F                     	;# 
  3541  0F10                     	;# 
  3542  0F11                     	;# 
  3543  0F12                     	;# 
  3544  0F13                     	;# 
  3545  0F14                     	;# 
  3546  0F15                     	;# 
  3547  0F16                     	;# 
  3548  0F17                     	;# 
  3549  0F18                     	;# 
  3550  0F19                     	;# 
  3551  0F1A                     	;# 
  3552  0F1B                     	;# 
  3553  0F1C                     	;# 
  3554  0F1D                     	;# 
  3555  0F1E                     	;# 
  3556  0F1F                     	;# 
  3557  0F20                     	;# 
  3558  0F21                     	;# 
  3559  0F22                     	;# 
  3560  0F23                     	;# 
  3561  0F24                     	;# 
  3562  0F25                     	;# 
  3563  0F26                     	;# 
  3564  0F27                     	;# 
  3565  0F28                     	;# 
  3566  0F29                     	;# 
  3567  0F2A                     	;# 
  3568  0F2B                     	;# 
  3569  0F2C                     	;# 
  3570  0F2D                     	;# 
  3571  0F2E                     	;# 
  3572  0F2F                     	;# 
  3573  0F30                     	;# 
  3574  0F31                     	;# 
  3575  0F32                     	;# 
  3576  0F33                     	;# 
  3577  0F34                     	;# 
  3578  0F35                     	;# 
  3579  0F36                     	;# 
  3580  0F37                     	;# 
  3581  0FE4                     	;# 
  3582  0FE5                     	;# 
  3583  0FE6                     	;# 
  3584  0FE7                     	;# 
  3585  0FE8                     	;# 
  3586  0FE9                     	;# 
  3587  0FEA                     	;# 
  3588  0FEB                     	;# 
  3589  0FED                     	;# 
  3590  0FEE                     	;# 
  3591  0FEF                     	;# 
  3592                           
  3593                           	psect	nvBANK0
  3594  005F                     __pnvBANK0:	
  3595  005F                     _TMR0_InterruptHandler:	
  3596  005F                     	ds	2
  3597  0061                     _timer0ReloadVal:	
  3598  0061                     	ds	1
  3599  0011                     _PIR2bits	set	17
  3600  0015                     _TMR0	set	21
  3601  0010                     _PIR1bits	set	16
  3602  000B                     _INTCONbits	set	11
  3603  0090                     _PIE1bits	set	144
  3604  0091                     _PIE2bits	set	145
  3605  0098                     _OSCTUNE	set	152
  3606  0099                     _OSCCON	set	153
  3607  0095                     _OPTION_REGbits	set	149
  3608  008E                     _TRISC	set	142
  3609  008D                     _TRISB	set	141
  3610  008C                     _TRISA	set	140
  3611  0095                     _OPTION_REG	set	149
  3612  0116                     _BORCON	set	278
  3613  010C                     _LATAbits	set	268
  3614  010E                     _LATC	set	270
  3615  010D                     _LATB	set	269
  3616  010C                     _LATA	set	268
  3617  010E                     _LATCbits	set	270
  3618  0199                     _RC1REG	set	409
  3619  019D                     _RC1STAbits	set	413
  3620  019A                     _TX1REG	set	410
  3621  019C                     _SPBRGH	set	412
  3622  019B                     _SPBRGL	set	411
  3623  019E                     _TX1STA	set	414
  3624  019D                     _RC1STA	set	413
  3625  019F                     _BAUD1CON	set	415
  3626  018C                     _ANSELA	set	396
  3627  018D                     _ANSELB	set	397
  3628  018E                     _ANSELC	set	398
  3629  0215                     _SSP1CON1bits	set	533
  3630  0212                     _SSP1ADD	set	530
  3631  0217                     _SSP1CON3	set	535
  3632  0215                     _SSP1CON1	set	533
  3633  0214                     _SSP1STAT	set	532
  3634  020E                     _WPUC	set	526
  3635  020C                     _WPUA	set	524
  3636  020D                     _WPUB	set	525
  3637  0211                     _SSPBUF	set	529
  3638  0214                     _SSP1STATbits	set	532
  3639  0211                     _SSP1BUF	set	529
  3640  0216                     _SSP1CON2bits	set	534
  3641  028E                     _ODCONC	set	654
  3642  028D                     _ODCONB	set	653
  3643  028C                     _ODCONA	set	652
  3644  0391                     _IOCAPbits	set	913
  3645  0392                     _IOCANbits	set	914
  3646  0393                     _IOCAFbits	set	915
  3647  0E21                     _SSPDATPPS	set	3617
  3648  0E20                     _SSPCLKPPS	set	3616
  3649  0E24                     _RXPPS	set	3620
  3650  0E9C                     _RB4PPS	set	3740
  3651  0E9E                     _RB6PPS	set	3742
  3652  0E9F                     _RB7PPS	set	3743
  3653                           
  3654                           ; #config settings
  3655  0000                     
  3656                           	psect	cinit
  3657  0031                     start_initialization:	
  3658  0031                     __initialization:	
  3659                           
  3660                           ; Clear objects allocated to BANK0
  3661  0031  3020               	movlw	low __pbssBANK0
  3662  0032  0084               	movwf	4
  3663  0033  3000               	movlw	high __pbssBANK0
  3664  0034  0085               	movwf	5
  3665  0035  3026               	movlw	38
  3666  0036  3183  23A0  3180   	fcall	clear_ram0
  3667                           
  3668                           ; Clear objects allocated to BANK1
  3669  0039  30AE               	movlw	low __pbssBANK1
  3670  003A  0084               	movwf	4
  3671  003B  3000               	movlw	high __pbssBANK1
  3672  003C  0085               	movwf	5
  3673  003D  3007               	movlw	7
  3674  003E  3183  23A0         	fcall	clear_ram0
  3675  0040                     end_of_initialization:	
  3676                           ;End of C runtime variable initialization code
  3677                           
  3678  0040                     __end_of__initialization:	
  3679  0040  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3680  0041  0020               	movlb	0
  3681  0042  3183  2B4C         	ljmp	_main	;jump to C main() function
  3682                           
  3683                           	psect	bssBANK0
  3684  0020                     __pbssBANK0:	
  3685  0020                     _i2c_object:	
  3686  0020                     	ds	5
  3687  0025                     SPI_Read@F12027:	
  3688  0025                     	ds	4
  3689  0029                     ADXL345_SetRegisterValue@F96:	
  3690  0029                     	ds	2
  3691  002B                     ADXL345_GetRegisterValue@F91:	
  3692  002B                     	ds	2
  3693  002D                     TMR0_ISR@CountCallBack:	
  3694  002D                     	ds	2
  3695  002F                     _fullResolutionSet:	
  3696  002F                     	ds	1
  3697  0030                     _selectedRange:	
  3698  0030                     	ds	1
  3699  0031                     _communicationType:	
  3700  0031                     	ds	1
  3701  0032                     I2C_ISR@i2c_10bit_address_restart:	
  3702  0032                     	ds	1
  3703  0033                     I2C_ISR@i2c_bytes_left:	
  3704  0033                     	ds	1
  3705  0034                     I2C_ISR@pi2c_buf_ptr:	
  3706  0034                     	ds	1
  3707  0035                     _p_i2c_current:	
  3708  0035                     	ds	1
  3709  0036                     _p_i2c_trb_current:	
  3710  0036                     	ds	1
  3711  0037                     _i2c_trb_count:	
  3712  0037                     	ds	1
  3713  0038                     _i2c_state:	
  3714  0038                     	ds	1
  3715  0039                     I2C_MasterRead@trBlock:	
  3716  0039                     	ds	4
  3717  003D                     I2C_MasterWrite@trBlock:	
  3718  003D                     	ds	4
  3719  0041                     _i2c_tr_queue:	
  3720  0041                     	ds	3
  3721  0044                     I2C_ISR@i2c_address:	
  3722  0044                     	ds	2
  3723                           
  3724                           	psect	bssBANK1
  3725  00AE                     __pbssBANK1:	
  3726  00AE                     ADXL345_GetXyz@F107:	
  3727  00AE                     	ds	7
  3728                           
  3729                           	psect	clrtext
  3730  03A0                     clear_ram0:	
  3731                           ;	Called with FSR0 containing the base address, and
  3732                           ;	WREG with the size to clear
  3733                           
  3734  03A0  0064               	clrwdt	;clear the watchdog before getting into this loop
  3735  03A1                     clrloop0:	
  3736  03A1  0180               	clrf	0	;clear RAM location pointed to by FSR
  3737  03A2  3101               	addfsr 0,1
  3738  03A3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3739  03A4  2BA1               	goto	clrloop0	;have we reached the end yet?
  3740  03A5  3400               	retlw	0	;all done for this memory range, return
  3741                           
  3742                           	psect	cstackBANK1
  3743  00A0                     __pcstackBANK1:	
  3744  00A0                     main@AccelX:	
  3745                           
  3746                           ; 2 bytes @ 0x0
  3747  00A0                     	ds	2
  3748  00A2                     main@AccelY:	
  3749                           
  3750                           ; 2 bytes @ 0x2
  3751  00A2                     	ds	2
  3752  00A4                     main@AccelZ:	
  3753                           
  3754                           ; 2 bytes @ 0x4
  3755  00A4                     	ds	2
  3756  00A6                     main@AccelXtemp:	
  3757                           
  3758                           ; 2 bytes @ 0x6
  3759  00A6                     	ds	2
  3760  00A8                     main@AccelYtemp:	
  3761                           
  3762                           ; 2 bytes @ 0x8
  3763  00A8                     	ds	2
  3764  00AA                     main@AccelZtemp:	
  3765                           
  3766                           ; 2 bytes @ 0xA
  3767  00AA                     	ds	2
  3768  00AC                     main@i2cStatus:	
  3769                           
  3770                           ; 1 bytes @ 0xC
  3771  00AC                     	ds	1
  3772  00AD                     main@counter:	
  3773                           
  3774                           ; 1 bytes @ 0xD
  3775  00AD                     	ds	1
  3776                           
  3777                           	psect	cstackCOMMON
  3778  0070                     __pcstackCOMMON:	
  3779  0070                     ?_SYSTEM_Initialize:	
  3780  0070                     ?_ADXL345_Init:	
  3781                           ; 1 bytes @ 0x0
  3782                           
  3783  0070                     ?_TMR0_DefaultInterruptHandler:	
  3784                           ; 1 bytes @ 0x0
  3785                           
  3786  0070                     ??_TMR0_DefaultInterruptHandler:	
  3787                           ; 1 bytes @ 0x0
  3788                           
  3789  0070                     ?_TMR0_CallBack:	
  3790                           ; 1 bytes @ 0x0
  3791                           
  3792  0070                     ?_ADXL345_GetRegisterValue:	
  3793                           ; 1 bytes @ 0x0
  3794                           
  3795  0070                     ?_IOCAF2_ISR:	
  3796                           ; 1 bytes @ 0x0
  3797                           
  3798  0070                     ??_IOCAF2_ISR:	
  3799                           ; 1 bytes @ 0x0
  3800                           
  3801  0070                     ?_OSCILLATOR_Initialize:	
  3802                           ; 1 bytes @ 0x0
  3803                           
  3804  0070                     ?_I2C_BusCollisionISR:	
  3805                           ; 1 bytes @ 0x0
  3806                           
  3807  0070                     ??_I2C_BusCollisionISR:	
  3808                           ; 1 bytes @ 0x0
  3809                           
  3810  0070                     ?_main:	
  3811                           ; 1 bytes @ 0x0
  3812                           
  3813  0070                     ?_TMR0_Initialize:	
  3814                           ; 1 bytes @ 0x0
  3815                           
  3816  0070                     ?_TMR0_ISR:	
  3817                           ; 1 bytes @ 0x0
  3818                           
  3819  0070                     ?_PIN_MANAGER_Initialize:	
  3820                           ; 1 bytes @ 0x0
  3821                           
  3822  0070                     ?_PIN_MANAGER_IOC:	
  3823                           ; 1 bytes @ 0x0
  3824                           
  3825  0070                     ??_PIN_MANAGER_IOC:	
  3826                           ; 1 bytes @ 0x0
  3827                           
  3828  0070                     ?_INTERRUPT_InterruptManager:	
  3829                           ; 1 bytes @ 0x0
  3830                           
  3831  0070                     ?i1_ADXL345_GetRegisterValue:	
  3832                           ; 1 bytes @ 0x0
  3833                           
  3834  0070                     ?i1_I2C_Write:	
  3835                           ; 1 bytes @ 0x0
  3836                           
  3837  0070                     ?i1_I2C_Read:	
  3838                           ; 1 bytes @ 0x0
  3839                           
  3840  0070                     ?i1_SPI_Read:	
  3841                           ; 1 bytes @ 0x0
  3842                           
  3843  0070                     SPI_Init@lsbFirst:	
  3844                           ; 1 bytes @ 0x0
  3845                           
  3846  0070                     i1I2C_Write@dataBuffer:	
  3847                           ; 1 bytes @ 0x0
  3848                           
  3849  0070                     i1I2C_Read@dataBuffer:	
  3850                           ; 1 bytes @ 0x0
  3851                           
  3852  0070                     i1SPI_Read@data:	
  3853                           ; 1 bytes @ 0x0
  3854                           
  3855                           
  3856                           ; 1 bytes @ 0x0
  3857  0070                     	ds	1
  3858  0071                     i1I2C_Write@bytesNumber:	
  3859  0071                     i1I2C_Read@bytesNumber:	
  3860                           ; 1 bytes @ 0x1
  3861                           
  3862  0071                     i1SPI_Read@bytesNumber:	
  3863                           ; 1 bytes @ 0x1
  3864                           
  3865                           
  3866                           ; 1 bytes @ 0x1
  3867  0071                     	ds	1
  3868  0072                     ??i1_SPI_Read:	
  3869  0072                     i1I2C_Write@stopBit:	
  3870                           ; 1 bytes @ 0x2
  3871                           
  3872  0072                     i1I2C_Read@stopBit:	
  3873                           ; 1 bytes @ 0x2
  3874                           
  3875                           
  3876                           ; 1 bytes @ 0x2
  3877  0072                     	ds	1
  3878  0073                     ??i1_I2C_Write:	
  3879  0073                     ??i1_I2C_Read:	
  3880                           ; 1 bytes @ 0x3
  3881                           
  3882                           
  3883                           ; 1 bytes @ 0x3
  3884  0073                     	ds	1
  3885  0074                     i1I2C_Write@status:	
  3886  0074                     i1SPI_Read@writeBuffer:	
  3887                           ; 1 bytes @ 0x4
  3888                           
  3889                           
  3890                           ; 4 bytes @ 0x4
  3891  0074                     	ds	1
  3892  0075                     i1I2C_Write@slaveAddress:	
  3893  0075                     i1I2C_Read@status:	
  3894                           ; 1 bytes @ 0x5
  3895                           
  3896                           
  3897                           ; 1 bytes @ 0x5
  3898  0075                     	ds	1
  3899  0076                     i1I2C_Write@acknowledge:	
  3900  0076                     i1I2C_Read@slaveAddress:	
  3901                           ; 1 bytes @ 0x6
  3902                           
  3903                           
  3904                           ; 1 bytes @ 0x6
  3905  0076                     	ds	1
  3906  0077                     i1I2C_Write@byte:	
  3907  0077                     i1I2C_Read@acknowledge:	
  3908                           ; 1 bytes @ 0x7
  3909                           
  3910                           
  3911                           ; 1 bytes @ 0x7
  3912  0077                     	ds	1
  3913  0078                     i1I2C_Read@byte:	
  3914  0078                     i1SPI_Read@slaveDeviceId:	
  3915                           ; 1 bytes @ 0x8
  3916                           
  3917                           
  3918                           ; 1 bytes @ 0x8
  3919  0078                     	ds	1
  3920  0079                     i1SPI_Read@byte:	
  3921                           
  3922                           ; 1 bytes @ 0x9
  3923  0079                     	ds	1
  3924  007A                     ??i1_ADXL345_GetRegisterValue:	
  3925                           
  3926                           ; 1 bytes @ 0xA
  3927  007A                     	ds	2
  3928  007C                     ??_TMR0_CallBack:	
  3929                           
  3930                           ; 1 bytes @ 0xC
  3931  007C                     	ds	1
  3932  007D                     TMR0_CallBack@DeviceID:	
  3933                           
  3934                           ; 1 bytes @ 0xD
  3935  007D                     	ds	1
  3936  007E                     ??_TMR0_ISR:	
  3937                           
  3938                           	psect	cstackBANK0
  3939  0046                     __pcstackBANK0:	
  3940                           ; 1 bytes @ 0xE
  3941                           
  3942  0046                     i1ADXL345_GetRegisterValue@dataBuffer:	
  3943                           
  3944                           ; 2 bytes @ 0x0
  3945  0046                     	ds	2
  3946  0048                     i1ADXL345_GetRegisterValue@registerAddress:	
  3947                           
  3948                           ; 1 bytes @ 0x2
  3949  0048                     	ds	1
  3950  0049                     i1ADXL345_GetRegisterValue@registerValue:	
  3951                           
  3952                           ; 1 bytes @ 0x3
  3953  0049                     	ds	1
  3954  004A                     ??_INTERRUPT_InterruptManager:	
  3955                           
  3956                           ; 1 bytes @ 0x4
  3957  004A                     	ds	1
  3958  004B                     ?_TMR0_SetInterruptHandler:	
  3959  004B                     ??_OSCILLATOR_Initialize:	
  3960                           ; 1 bytes @ 0x5
  3961                           
  3962  004B                     ?_SPI_Read:	
  3963                           ; 1 bytes @ 0x5
  3964                           
  3965  004B                     ?_I2C_Write:	
  3966                           ; 1 bytes @ 0x5
  3967                           
  3968  004B                     ?_I2C_Read:	
  3969                           ; 1 bytes @ 0x5
  3970                           
  3971  004B                     ?_SPI_Init:	
  3972                           ; 1 bytes @ 0x5
  3973                           
  3974  004B                     ?_I2C_Init:	
  3975                           ; 1 bytes @ 0x5
  3976                           
  3977  004B                     ??_PIN_MANAGER_Initialize:	
  3978                           ; 1 bytes @ 0x5
  3979                           
  3980  004B                     I2C_Write@dataBuffer:	
  3981                           ; 1 bytes @ 0x5
  3982                           
  3983  004B                     I2C_Read@dataBuffer:	
  3984                           ; 1 bytes @ 0x5
  3985                           
  3986  004B                     SPI_Read@data:	
  3987                           ; 1 bytes @ 0x5
  3988                           
  3989  004B                     TMR0_SetInterruptHandler@InterruptHandler:	
  3990                           ; 1 bytes @ 0x5
  3991                           
  3992  004B                     I2C_Init@clockFreq:	
  3993                           ; 2 bytes @ 0x5
  3994                           
  3995  004B                     SPI_Init@clockFreq:	
  3996                           ; 4 bytes @ 0x5
  3997                           
  3998                           
  3999                           ; 4 bytes @ 0x5
  4000  004B                     	ds	1
  4001  004C                     I2C_Write@bytesNumber:	
  4002  004C                     I2C_Read@bytesNumber:	
  4003                           ; 1 bytes @ 0x6
  4004                           
  4005  004C                     SPI_Read@bytesNumber:	
  4006                           ; 1 bytes @ 0x6
  4007                           
  4008                           
  4009                           ; 1 bytes @ 0x6
  4010  004C                     	ds	1
  4011  004D                     ??_TMR0_SetInterruptHandler:	
  4012  004D                     ??_SPI_Read:	
  4013                           ; 1 bytes @ 0x7
  4014                           
  4015  004D                     ??_TMR0_Initialize:	
  4016                           ; 1 bytes @ 0x7
  4017                           
  4018  004D                     I2C_Write@stopBit:	
  4019                           ; 1 bytes @ 0x7
  4020                           
  4021  004D                     I2C_Read@stopBit:	
  4022                           ; 1 bytes @ 0x7
  4023                           
  4024                           
  4025                           ; 1 bytes @ 0x7
  4026  004D                     	ds	1
  4027  004E                     ??_SYSTEM_Initialize:	
  4028  004E                     ??_I2C_Write:	
  4029                           ; 1 bytes @ 0x8
  4030                           
  4031  004E                     ??_I2C_Read:	
  4032                           ; 1 bytes @ 0x8
  4033                           
  4034                           
  4035                           ; 1 bytes @ 0x8
  4036  004E                     	ds	1
  4037  004F                     ??_I2C_Init:	
  4038  004F                     I2C_Write@status:	
  4039                           ; 1 bytes @ 0x9
  4040                           
  4041  004F                     SPI_Init@clockPol:	
  4042                           ; 1 bytes @ 0x9
  4043                           
  4044  004F                     I2C_Init@pbFrequency:	
  4045                           ; 1 bytes @ 0x9
  4046                           
  4047  004F                     SPI_Read@writeBuffer:	
  4048                           ; 4 bytes @ 0x9
  4049                           
  4050                           
  4051                           ; 4 bytes @ 0x9
  4052  004F                     	ds	1
  4053  0050                     I2C_Write@slaveAddress:	
  4054  0050                     I2C_Read@status:	
  4055                           ; 1 bytes @ 0xA
  4056                           
  4057  0050                     SPI_Init@clockEdg:	
  4058                           ; 1 bytes @ 0xA
  4059                           
  4060                           
  4061                           ; 1 bytes @ 0xA
  4062  0050                     	ds	1
  4063  0051                     ??_SPI_Init:	
  4064  0051                     I2C_Write@acknowledge:	
  4065                           ; 1 bytes @ 0xB
  4066                           
  4067  0051                     I2C_Read@slaveAddress:	
  4068                           ; 1 bytes @ 0xB
  4069                           
  4070  0051                     SPI_Init@pbFrequency:	
  4071                           ; 1 bytes @ 0xB
  4072                           
  4073                           
  4074                           ; 4 bytes @ 0xB
  4075  0051                     	ds	1
  4076  0052                     I2C_Write@byte:	
  4077  0052                     I2C_Read@acknowledge:	
  4078                           ; 1 bytes @ 0xC
  4079                           
  4080                           
  4081                           ; 1 bytes @ 0xC
  4082  0052                     	ds	1
  4083  0053                     I2C_Read@byte:	
  4084  0053                     SPI_Read@slaveDeviceId:	
  4085                           ; 1 bytes @ 0xD
  4086                           
  4087  0053                     I2C_Init@brgValue:	
  4088                           ; 1 bytes @ 0xD
  4089                           
  4090                           
  4091                           ; 2 bytes @ 0xD
  4092  0053                     	ds	1
  4093  0054                     SPI_Read@byte:	
  4094                           
  4095                           ; 1 bytes @ 0xE
  4096  0054                     	ds	1
  4097  0055                     ??_ADXL345_GetRegisterValue:	
  4098  0055                     I2C_Init@status:	
  4099                           ; 1 bytes @ 0xF
  4100                           
  4101  0055                     SPI_Init@brgValue:	
  4102                           ; 1 bytes @ 0xF
  4103                           
  4104                           
  4105                           ; 2 bytes @ 0xF
  4106  0055                     	ds	2
  4107  0057                     ADXL345_GetRegisterValue@registerAddress:	
  4108  0057                     SPI_Init@status:	
  4109                           ; 1 bytes @ 0x11
  4110                           
  4111                           
  4112                           ; 1 bytes @ 0x11
  4113  0057                     	ds	1
  4114  0058                     ADXL345_GetRegisterValue@dataBuffer:	
  4115                           
  4116                           ; 2 bytes @ 0x12
  4117  0058                     	ds	2
  4118  005A                     ADXL345_GetRegisterValue@registerValue:	
  4119                           
  4120                           ; 1 bytes @ 0x14
  4121  005A                     	ds	1
  4122  005B                     ??_ADXL345_Init:	
  4123                           
  4124                           ; 1 bytes @ 0x15
  4125  005B                     	ds	1
  4126  005C                     ADXL345_Init@commProtocol:	
  4127                           
  4128                           ; 1 bytes @ 0x16
  4129  005C                     	ds	1
  4130  005D                     ADXL345_Init@status:	
  4131                           
  4132                           ; 1 bytes @ 0x17
  4133  005D                     	ds	1
  4134  005E                     ??_main:	
  4135                           
  4136                           ; 1 bytes @ 0x18
  4137  005E                     	ds	1
  4138                           
  4139                           	psect	maintext
  4140  034C                     __pmaintext:	
  4141 ;;
  4142 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4143 ;;
  4144 ;; *************** function _main *****************
  4145 ;; Defined at:
  4146 ;;		line 45 in file "main.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  AccelZtemp      2   10[BANK1 ] int 
  4151 ;;  AccelYtemp      2    8[BANK1 ] int 
  4152 ;;  AccelXtemp      2    6[BANK1 ] int 
  4153 ;;  AccelZ          2    4[BANK1 ] int 
  4154 ;;  AccelY          2    2[BANK1 ] int 
  4155 ;;  AccelX          2    0[BANK1 ] int 
  4156 ;;  z               2    0        short 
  4157 ;;  y               2    0        short 
  4158 ;;  x               2    0        short 
  4159 ;;  counter         1   13[BANK1 ] unsigned char 
  4160 ;;  i2cStatus       1   12[BANK1 ] unsigned char 
  4161 ;;  TempZLSB        1    0        unsigned char 
  4162 ;;  TempZMSB        1    0        unsigned char 
  4163 ;;  TempYLSB        1    0        unsigned char 
  4164 ;;  TempYMSB        1    0        unsigned char 
  4165 ;;  TempXLSB        1    0        unsigned char 
  4166 ;;  TempXMSB        1    0        unsigned char 
  4167 ;;  AccelStatus     1    0        unsigned char 
  4168 ;;  DeviceID        1    0        unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      void 
  4171 ;; Registers used:
  4172 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : B1F/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4179 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  4180 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4181 ;;      Totals:         0       1      14       0       0       0       0       0       0       0       0       0       
      +0       0
  4182 ;;Total ram usage:       15 bytes
  4183 ;; Hardware stack levels required when called:    8
  4184 ;; This function calls:
  4185 ;;		_ADXL345_Init
  4186 ;;		_SYSTEM_Initialize
  4187 ;; This function is called by:
  4188 ;;		Startup code after reset
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           
  4193                           ;psect for function _main
  4194  034C                     _main:	
  4195                           
  4196                           ;main.c: 47: unsigned char i2cStatus;
  4197                           ;main.c: 49: short x;
  4198                           ;main.c: 50: short y;
  4199                           ;main.c: 51: short z;
  4200                           ;main.c: 52: unsigned char DeviceID;
  4201                           ;main.c: 54: char AccelStatus;
  4202                           ;main.c: 55: char TempXMSB;
  4203                           ;main.c: 56: char TempXLSB;
  4204                           ;main.c: 57: char TempYMSB;
  4205                           ;main.c: 58: char TempYLSB;
  4206                           ;main.c: 59: char TempZMSB;
  4207                           ;main.c: 60: char TempZLSB;
  4208                           ;main.c: 61: int16_t AccelX = 0;
  4209                           
  4210                           ;incstack = 0
  4211                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4212  034C  0021               	movlb	1	; select bank1
  4213  034D  01A0               	clrf	main@AccelX^(0+128)
  4214  034E  01A1               	clrf	(main@AccelX+1)^(0+128)
  4215                           
  4216                           ;main.c: 62: int16_t AccelY = 0;
  4217  034F  01A2               	clrf	main@AccelY^(0+128)
  4218  0350  01A3               	clrf	(main@AccelY+1)^(0+128)
  4219                           
  4220                           ;main.c: 63: int16_t AccelZ = 0;
  4221  0351  01A4               	clrf	main@AccelZ^(0+128)
  4222  0352  01A5               	clrf	(main@AccelZ+1)^(0+128)
  4223                           
  4224                           ;main.c: 64: int16_t AccelXtemp = 0;
  4225  0353  01A6               	clrf	main@AccelXtemp^(0+128)
  4226  0354  01A7               	clrf	(main@AccelXtemp+1)^(0+128)
  4227                           
  4228                           ;main.c: 65: int16_t AccelYtemp = 0;
  4229  0355  01A8               	clrf	main@AccelYtemp^(0+128)
  4230  0356  01A9               	clrf	(main@AccelYtemp+1)^(0+128)
  4231                           
  4232                           ;main.c: 66: int16_t AccelZtemp = 0;
  4233  0357  01AA               	clrf	main@AccelZtemp^(0+128)
  4234  0358  01AB               	clrf	(main@AccelZtemp+1)^(0+128)
  4235                           
  4236                           ;main.c: 67: char counter = 0;
  4237  0359  01AD               	clrf	main@counter^(0+128)
  4238                           
  4239                           ;main.c: 70: SYSTEM_Initialize();
  4240  035A  3183  2390  3183   	fcall	_SYSTEM_Initialize
  4241                           
  4242                           ;main.c: 71: i2cStatus = ADXL345_Init(1);
  4243  035D  3001               	movlw	1
  4244  035E  3181  21C3  3183   	fcall	_ADXL345_Init
  4245  0361  0020               	movlb	0	; select bank0
  4246  0362  00DE               	movwf	??_main
  4247  0363  085E               	movf	??_main,w
  4248  0364  0021               	movlb	1	; select bank1
  4249  0365  00AC               	movwf	main@i2cStatus^(0+128)
  4250                           
  4251                           ;main.c: 78: (INTCONbits.GIE = 1);
  4252  0366  178B               	bsf	11,7	;volatile
  4253                           
  4254                           ;main.c: 81: (INTCONbits.PEIE = 1);
  4255  0367  170B               	bsf	11,6	;volatile
  4256  0368                     l25:	
  4257                           ;main.c: 90: while (1)
  4258                           
  4259                           
  4260                           ;main.c: 91: {
  4261  0368  2B68               	goto	l25
  4262  0369                     __end_of_main:	
  4263                           
  4264                           	psect	text1
  4265  0390                     __ptext1:	
  4266 ;; *************** function _SYSTEM_Initialize *****************
  4267 ;; Defined at:
  4268 ;;		line 77 in file "mcc.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;		None
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;		None
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    wreg      void 
  4275 ;; Registers used:
  4276 ;;		wreg, status,2, status,0, pclath, cstack
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;Total ram usage:        0 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; Hardware stack levels required when called:    7
  4289 ;; This function calls:
  4290 ;;		_OSCILLATOR_Initialize
  4291 ;;		_PIN_MANAGER_Initialize
  4292 ;;		_TMR0_Initialize
  4293 ;; This function is called by:
  4294 ;;		_main
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           
  4299                           ;psect for function _SYSTEM_Initialize
  4300  0390                     _SYSTEM_Initialize:	
  4301                           
  4302                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  4303                           
  4304                           ;incstack = 0
  4305                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4306  0390  3182  22B3  3183   	fcall	_PIN_MANAGER_Initialize
  4307                           
  4308                           ;mcc.c: 80: OSCILLATOR_Initialize();
  4309  0393  3183  2399  3183   	fcall	_OSCILLATOR_Initialize
  4310                           
  4311                           ;mcc.c: 82: TMR0_Initialize();
  4312  0396  3183  2369         	fcall	_TMR0_Initialize
  4313  0398  0008               	return
  4314  0399                     __end_of_SYSTEM_Initialize:	
  4315                           
  4316                           	psect	text2
  4317  0369                     __ptext2:	
  4318 ;; *************** function _TMR0_Initialize *****************
  4319 ;; Defined at:
  4320 ;;		line 65 in file "tmr0.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0, pclath, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4336 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4337 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4338 ;;Total ram usage:        1 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    6
  4341 ;; This function calls:
  4342 ;;		_TMR0_SetInterruptHandler
  4343 ;; This function is called by:
  4344 ;;		_SYSTEM_Initialize
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           
  4349                           ;psect for function _TMR0_Initialize
  4350  0369                     _TMR0_Initialize:	
  4351                           
  4352                           ;tmr0.c: 70: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD2 & 0x3F);
  4353                           
  4354                           ;incstack = 0
  4355                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4356  0369  0021               	movlb	1	; select bank1
  4357  036A  0815               	movf	21,w	;volatile
  4358  036B  39C0               	andlw	192
  4359  036C  3812               	iorlw	18
  4360  036D  0095               	movwf	21	;volatile
  4361                           
  4362                           ;tmr0.c: 79: TMR0 = 0x83;
  4363  036E  3083               	movlw	131
  4364  036F  0020               	movlb	0	; select bank0
  4365  0370  0095               	movwf	21	;volatile
  4366                           
  4367                           ;tmr0.c: 82: timer0ReloadVal= 131;
  4368  0371  3083               	movlw	131
  4369  0372  00CD               	movwf	??_TMR0_Initialize
  4370  0373  084D               	movf	??_TMR0_Initialize,w
  4371  0374  00E1               	movwf	_timer0ReloadVal	;volatile
  4372                           
  4373                           ;tmr0.c: 85: INTCONbits.TMR0IF = 0;
  4374  0375  110B               	bcf	11,2	;volatile
  4375                           
  4376                           ;tmr0.c: 88: INTCONbits.TMR0IE = 1;
  4377  0376  168B               	bsf	11,5	;volatile
  4378                           
  4379                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  4380  0377  30BA               	movlw	low _TMR0_DefaultInterruptHandler
  4381  0378  00CB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4382  0379  3003               	movlw	high _TMR0_DefaultInterruptHandler
  4383  037A  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4384  037B  3183  23A6         	fcall	_TMR0_SetInterruptHandler
  4385  037D  0008               	return
  4386  037E                     __end_of_TMR0_Initialize:	
  4387                           
  4388                           	psect	text3
  4389  03A6                     __ptext3:	
  4390 ;; *************** function _TMR0_SetInterruptHandler *****************
  4391 ;; Defined at:
  4392 ;;		line 149 in file "tmr0.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  InterruptHan    2    5[BANK0 ] PTR FTN()void 
  4395 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4407 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4411 ;;Total ram usage:        2 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:    5
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_TMR0_Initialize
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           
  4422                           ;psect for function _TMR0_SetInterruptHandler
  4423  03A6                     _TMR0_SetInterruptHandler:	
  4424                           
  4425                           ;tmr0.c: 150: TMR0_InterruptHandler = InterruptHandler;
  4426                           
  4427                           ;incstack = 0
  4428                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4429  03A6  0020               	movlb	0	; select bank0
  4430  03A7  084C               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  4431  03A8  00E0               	movwf	_TMR0_InterruptHandler+1
  4432  03A9  084B               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  4433  03AA  00DF               	movwf	_TMR0_InterruptHandler
  4434  03AB  0008               	return
  4435  03AC                     __end_of_TMR0_SetInterruptHandler:	
  4436                           
  4437                           	psect	text4
  4438  02B3                     __ptext4:	
  4439 ;; *************** function _PIN_MANAGER_Initialize *****************
  4440 ;; Defined at:
  4441 ;;		line 52 in file "pin_manager.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;		None
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      void 
  4448 ;; Registers used:
  4449 ;;		wreg, status,2
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4459 ;;Total ram usage:        0 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    5
  4462 ;; This function calls:
  4463 ;;		Nothing
  4464 ;; This function is called by:
  4465 ;;		_SYSTEM_Initialize
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           
  4470                           ;psect for function _PIN_MANAGER_Initialize
  4471  02B3                     _PIN_MANAGER_Initialize:	
  4472                           
  4473                           ;pin_manager.c: 57: LATA = 0x00;
  4474                           
  4475                           ;incstack = 0
  4476                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4477  02B3  0022               	movlb	2	; select bank2
  4478  02B4  018C               	clrf	12	;volatile
  4479                           
  4480                           ;pin_manager.c: 58: LATB = 0x00;
  4481  02B5  018D               	clrf	13	;volatile
  4482                           
  4483                           ;pin_manager.c: 59: LATC = 0x00;
  4484  02B6  018E               	clrf	14	;volatile
  4485                           
  4486                           ;pin_manager.c: 64: TRISA = 0x07;
  4487  02B7  3007               	movlw	7
  4488  02B8  0021               	movlb	1	; select bank1
  4489  02B9  008C               	movwf	12	;volatile
  4490                           
  4491                           ;pin_manager.c: 65: TRISB = 0x70;
  4492  02BA  3070               	movlw	112
  4493  02BB  008D               	movwf	13	;volatile
  4494                           
  4495                           ;pin_manager.c: 66: TRISC = 0x9F;
  4496  02BC  309F               	movlw	159
  4497  02BD  008E               	movwf	14	;volatile
  4498                           
  4499                           ;pin_manager.c: 71: ANSELC = 0xCF;
  4500  02BE  30CF               	movlw	207
  4501  02BF  0023               	movlb	3	; select bank3
  4502  02C0  008E               	movwf	14	;volatile
  4503                           
  4504                           ;pin_manager.c: 72: ANSELB = 0xA0;
  4505  02C1  30A0               	movlw	160
  4506  02C2  008D               	movwf	13	;volatile
  4507                           
  4508                           ;pin_manager.c: 73: ANSELA = 0x17;
  4509  02C3  3017               	movlw	23
  4510  02C4  008C               	movwf	12	;volatile
  4511                           
  4512                           ;pin_manager.c: 78: WPUB = 0x00;
  4513  02C5  0024               	movlb	4	; select bank4
  4514  02C6  018D               	clrf	13	;volatile
  4515                           
  4516                           ;pin_manager.c: 79: WPUA = 0x00;
  4517  02C7  018C               	clrf	12	;volatile
  4518                           
  4519                           ;pin_manager.c: 80: WPUC = 0x00;
  4520  02C8  018E               	clrf	14	;volatile
  4521                           
  4522                           ;pin_manager.c: 81: OPTION_REGbits.nWPUEN = 1;
  4523  02C9  0021               	movlb	1	; select bank1
  4524  02CA  1795               	bsf	21,7	;volatile
  4525                           
  4526                           ;pin_manager.c: 86: ODCONA = 0x00;
  4527  02CB  0025               	movlb	5	; select bank5
  4528  02CC  018C               	clrf	12	;volatile
  4529                           
  4530                           ;pin_manager.c: 87: ODCONB = 0x00;
  4531  02CD  018D               	clrf	13	;volatile
  4532                           
  4533                           ;pin_manager.c: 88: ODCONC = 0x00;
  4534  02CE  018E               	clrf	14	;volatile
  4535                           
  4536                           ;pin_manager.c: 93: IOCAFbits.IOCAF2 = 0;
  4537  02CF  0027               	movlb	7	; select bank7
  4538  02D0  1113               	bcf	19,2	;volatile
  4539                           
  4540                           ;pin_manager.c: 95: IOCANbits.IOCAN2 = 0;
  4541  02D1  1112               	bcf	18,2	;volatile
  4542                           
  4543                           ;pin_manager.c: 97: IOCAPbits.IOCAP2 = 1;
  4544  02D2  1511               	bsf	17,2	;volatile
  4545                           
  4546                           ;pin_manager.c: 100: INTCONbits.IOCIE = 1;
  4547  02D3  158B               	bsf	11,3	;volatile
  4548                           
  4549                           ;pin_manager.c: 102: RXPPS = 0x0D;
  4550  02D4  300D               	movlw	13
  4551  02D5  003C               	movlb	28	; select bank28
  4552  02D6  00A4               	movwf	36	;volatile
  4553                           
  4554                           ;pin_manager.c: 103: RB7PPS = 0x12;
  4555  02D7  3012               	movlw	18
  4556  02D8  003D               	movlb	29	; select bank29
  4557  02D9  009F               	movwf	31	;volatile
  4558                           
  4559                           ;pin_manager.c: 105: SSPCLKPPS = 0x0E;
  4560  02DA  300E               	movlw	14
  4561  02DB  003C               	movlb	28	; select bank28
  4562  02DC  00A0               	movwf	32	;volatile
  4563                           
  4564                           ;pin_manager.c: 106: SSPDATPPS = 0x0C;
  4565  02DD  300C               	movlw	12
  4566  02DE  00A1               	movwf	33	;volatile
  4567                           
  4568                           ;pin_manager.c: 107: RB6PPS = 0x10;
  4569  02DF  3010               	movlw	16
  4570  02E0  003D               	movlb	29	; select bank29
  4571  02E1  009E               	movwf	30	;volatile
  4572                           
  4573                           ;pin_manager.c: 108: RB4PPS = 0x11;
  4574  02E2  3011               	movlw	17
  4575  02E3  009C               	movwf	28	;volatile
  4576  02E4  0008               	return
  4577  02E5                     __end_of_PIN_MANAGER_Initialize:	
  4578                           
  4579                           	psect	text5
  4580  0399                     __ptext5:	
  4581 ;; *************** function _OSCILLATOR_Initialize *****************
  4582 ;; Defined at:
  4583 ;;		line 85 in file "mcc.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;Total ram usage:        0 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    5
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_SYSTEM_Initialize
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function _OSCILLATOR_Initialize
  4613  0399                     _OSCILLATOR_Initialize:	
  4614                           
  4615                           ;mcc.c: 88: OSCCON = 0x6A;
  4616                           
  4617                           ;incstack = 0
  4618                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4619  0399  306A               	movlw	106
  4620  039A  0021               	movlb	1	; select bank1
  4621  039B  0099               	movwf	25	;volatile
  4622                           
  4623                           ;mcc.c: 90: OSCTUNE = 0x00;
  4624  039C  0198               	clrf	24	;volatile
  4625                           
  4626                           ;mcc.c: 92: BORCON = 0x00;
  4627  039D  0022               	movlb	2	; select bank2
  4628  039E  0196               	clrf	22	;volatile
  4629  039F  0008               	return
  4630  03A0                     __end_of_OSCILLATOR_Initialize:	
  4631                           
  4632                           	psect	text6
  4633  01C3                     __ptext6:	
  4634 ;; *************** function _ADXL345_Init *****************
  4635 ;; Defined at:
  4636 ;;		line 135 in file "ADXL345.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  commProtocol    1    wreg     unsigned char 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  commProtocol    1   22[BANK0 ] unsigned char 
  4641 ;;  status          1   23[BANK0 ] unsigned char 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      unsigned char 
  4644 ;; Registers used:
  4645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4655 ;;Total ram usage:        3 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; Hardware stack levels required when called:    7
  4658 ;; This function calls:
  4659 ;;		_ADXL345_GetRegisterValue
  4660 ;;		_I2C_Init
  4661 ;;		_SPI_Init
  4662 ;; This function is called by:
  4663 ;;		_main
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           
  4668                           ;psect for function _ADXL345_Init
  4669  01C3                     _ADXL345_Init:	
  4670                           
  4671                           ;incstack = 0
  4672                           ; Regs used in _ADXL345_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4673                           ;ADXL345_Init@commProtocol stored from wreg
  4674  01C3  0020               	movlb	0	; select bank0
  4675  01C4  00DC               	movwf	ADXL345_Init@commProtocol
  4676                           
  4677                           ;ADXL345.c: 137: unsigned char status = 0;
  4678  01C5  01DD               	clrf	ADXL345_Init@status
  4679                           
  4680                           ;ADXL345.c: 139: communicationType = commProtocol;
  4681  01C6  085C               	movf	ADXL345_Init@commProtocol,w
  4682  01C7  00DB               	movwf	??_ADXL345_Init
  4683  01C8  085B               	movf	??_ADXL345_Init,w
  4684  01C9  00B1               	movwf	_communicationType
  4685                           
  4686                           ;ADXL345.c: 140: if(commProtocol == 0)
  4687  01CA  085C               	movf	ADXL345_Init@commProtocol,w
  4688  01CB  1D03               	btfss	3,2
  4689  01CC  29DD               	goto	l3193
  4690                           
  4691                           ;ADXL345.c: 141: {
  4692                           ;ADXL345.c: 142: status = SPI_Init(0,
  4693                           ;ADXL345.c: 143: 1000000,
  4694                           ;ADXL345.c: 144: 1,
  4695                           ;ADXL345.c: 145: 0);
  4696  01CD  3000               	movlw	0
  4697  01CE  00CE               	movwf	SPI_Init@clockFreq+3
  4698  01CF  300F               	movlw	15
  4699  01D0  00CD               	movwf	SPI_Init@clockFreq+2
  4700  01D1  3042               	movlw	66
  4701  01D2  00CC               	movwf	SPI_Init@clockFreq+1
  4702  01D3  3040               	movlw	64
  4703  01D4  00CB               	movwf	SPI_Init@clockFreq
  4704  01D5  01CF               	clrf	SPI_Init@clockPol
  4705  01D6  0ACF               	incf	SPI_Init@clockPol,f
  4706  01D7  01D0               	clrf	SPI_Init@clockEdg
  4707  01D8  3000               	movlw	0
  4708  01D9  3182  22E5  3181   	fcall	_SPI_Init
  4709  01DC  29E8               	goto	L1
  4710  01DD                     l3193:	
  4711                           ;ADXL345.c: 146: }
  4712                           
  4713                           
  4714                           ;ADXL345.c: 147: else
  4715                           ;ADXL345.c: 148: {
  4716                           ;ADXL345.c: 149: status = I2C_Init(100000);
  4717  01DD  3000               	movlw	0
  4718  01DE  00CE               	movwf	I2C_Init@clockFreq+3
  4719  01DF  3001               	movlw	1
  4720  01E0  00CD               	movwf	I2C_Init@clockFreq+2
  4721  01E1  3086               	movlw	134
  4722  01E2  00CC               	movwf	I2C_Init@clockFreq+1
  4723  01E3  30A0               	movlw	160
  4724  01E4  00CB               	movwf	I2C_Init@clockFreq
  4725  01E5  3183  232C  3181   	fcall	_I2C_Init
  4726  01E8                     L1:	
  4727  01E8  0020               	movlb	0	; select bank0
  4728  01E9  00DB               	movwf	??_ADXL345_Init
  4729  01EA  085B               	movf	??_ADXL345_Init,w
  4730  01EB  00DD               	movwf	ADXL345_Init@status
  4731                           
  4732                           ;ADXL345.c: 150: }
  4733                           ;ADXL345.c: 151: if(ADXL345_GetRegisterValue(0x00) != 0xE5)
  4734  01EC  3000               	movlw	0
  4735  01ED  3182  2200  3181   	fcall	_ADXL345_GetRegisterValue
  4736  01F0  3AE5               	xorlw	229
  4737  01F1  1903               	skipnz
  4738  01F2  29F8               	goto	l546
  4739                           
  4740                           ;ADXL345.c: 152: {
  4741                           ;ADXL345.c: 153: status = -1;
  4742  01F3  30FF               	movlw	255
  4743  01F4  0020               	movlb	0	; select bank0
  4744  01F5  00DB               	movwf	??_ADXL345_Init
  4745  01F6  085B               	movf	??_ADXL345_Init,w
  4746  01F7  00DD               	movwf	ADXL345_Init@status
  4747  01F8                     l546:	
  4748                           
  4749                           ;ADXL345.c: 154: }
  4750                           ;ADXL345.c: 155: selectedRange = 2;
  4751  01F8  3002               	movlw	2
  4752  01F9  0020               	movlb	0	; select bank0
  4753  01FA  00DB               	movwf	??_ADXL345_Init
  4754  01FB  085B               	movf	??_ADXL345_Init,w
  4755  01FC  00B0               	movwf	_selectedRange
  4756                           
  4757                           ;ADXL345.c: 156: fullResolutionSet = 0;
  4758  01FD  01AF               	clrf	_fullResolutionSet
  4759                           
  4760                           ;ADXL345.c: 158: return status;
  4761  01FE  085D               	movf	ADXL345_Init@status,w
  4762  01FF  0008               	return
  4763  0200                     __end_of_ADXL345_Init:	
  4764                           
  4765                           	psect	text7
  4766  02E5                     __ptext7:	
  4767 ;; *************** function _SPI_Init *****************
  4768 ;; Defined at:
  4769 ;;		line 221 in file "Communication.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;  lsbFirst        1    wreg     unsigned char 
  4772 ;;  clockFreq       4    5[BANK0 ] unsigned long 
  4773 ;;  clockPol        1    9[BANK0 ] unsigned char 
  4774 ;;  clockEdg        1   10[BANK0 ] unsigned char 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  lsbFirst        1    0[COMMON] unsigned char 
  4777 ;;  pbFrequency     4   11[BANK0 ] unsigned long 
  4778 ;;  brgValue        2   15[BANK0 ] unsigned short 
  4779 ;;  status          1   17[BANK0 ] unsigned char 
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      unsigned char 
  4782 ;; Registers used:
  4783 ;;		wreg, status,2, status,0
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4789 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4790 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4792 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4793 ;;Total ram usage:       13 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    5
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_ADXL345_Init
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           
  4804                           ;psect for function _SPI_Init
  4805  02E5                     _SPI_Init:	
  4806                           
  4807                           ;Communication.c: 226: unsigned char status = 0;
  4808                           
  4809                           ;incstack = 0
  4810                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  4811  02E5  0020               	movlb	0	; select bank0
  4812  02E6  01D7               	clrf	SPI_Init@status
  4813                           
  4814                           ;Communication.c: 227: unsigned long pbFrequency = 40000000;
  4815  02E7  3002               	movlw	2
  4816  02E8  00D4               	movwf	SPI_Init@pbFrequency+3
  4817  02E9  3062               	movlw	98
  4818  02EA  00D3               	movwf	SPI_Init@pbFrequency+2
  4819  02EB  305A               	movlw	90
  4820  02EC  00D2               	movwf	SPI_Init@pbFrequency+1
  4821  02ED  3000               	movlw	0
  4822  02EE  00D1               	movwf	SPI_Init@pbFrequency
  4823                           
  4824                           ;Communication.c: 228: unsigned short brgValue = 0;
  4825  02EF  01D5               	clrf	SPI_Init@brgValue
  4826  02F0  01D6               	clrf	SPI_Init@brgValue+1
  4827                           
  4828                           ;Communication.c: 230: do { LATCbits.LATC6 = 1; } while(0);
  4829  02F1  0022               	movlb	2	; select bank2
  4830  02F2  170E               	bsf	14,6	;volatile
  4831                           
  4832                           ;Communication.c: 235: SSP1STAT = 0x00;
  4833  02F3  0024               	movlb	4	; select bank4
  4834  02F4  0194               	clrf	20	;volatile
  4835                           
  4836                           ;Communication.c: 236: SSP1STATbits.CKE = clockEdg;
  4837  02F5  0020               	movlb	0	; select bank0
  4838  02F6  0C50               	rrf	SPI_Init@clockEdg,w
  4839  02F7  0024               	movlb	4	; select bank4
  4840  02F8  1C03               	skipc
  4841  02F9  1314               	bcf	20,6	;volatile
  4842  02FA  1803               	skipnc
  4843  02FB  1714               	bsf	20,6	;volatile
  4844                           
  4845                           ;Communication.c: 239: SSP1CON1 = 0x20;
  4846  02FC  3020               	movlw	32
  4847  02FD  0095               	movwf	21	;volatile
  4848                           
  4849                           ;Communication.c: 240: SSP1CON1bits.CKP = clockPol;
  4850  02FE  0020               	movlb	0	; select bank0
  4851  02FF  0C4F               	rrf	SPI_Init@clockPol,w
  4852  0300  0024               	movlb	4	; select bank4
  4853  0301  1C03               	skipc
  4854  0302  1215               	bcf	21,4	;volatile
  4855  0303  1803               	skipnc
  4856  0304  1615               	bsf	21,4	;volatile
  4857                           
  4858                           ;Communication.c: 245: SSP1ADD = 0x00;
  4859  0305  0192               	clrf	18	;volatile
  4860                           
  4861                           ;Communication.c: 247: status = 1;
  4862  0306  0020               	movlb	0	; select bank0
  4863  0307  01D7               	clrf	SPI_Init@status
  4864  0308  0AD7               	incf	SPI_Init@status,f
  4865                           
  4866                           ;Communication.c: 248: return status;
  4867  0309  0857               	movf	SPI_Init@status,w
  4868  030A  0008               	return
  4869  030B                     __end_of_SPI_Init:	
  4870                           
  4871                           	psect	text8
  4872  032C                     __ptext8:	
  4873 ;; *************** function _I2C_Init *****************
  4874 ;; Defined at:
  4875 ;;		line 57 in file "Communication.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  clockFreq       4    5[BANK0 ] unsigned long 
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;  pbFrequency     4    9[BANK0 ] unsigned long 
  4880 ;;  brgValue        2   13[BANK0 ] unsigned short 
  4881 ;;  status          1   15[BANK0 ] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      unsigned char 
  4884 ;; Registers used:
  4885 ;;		wreg, status,2
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4891 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4892 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4894 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4895 ;;Total ram usage:       11 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    5
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_ADXL345_Init
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           
  4906                           ;psect for function _I2C_Init
  4907  032C                     _I2C_Init:	
  4908                           
  4909                           ;Communication.c: 59: unsigned char status = 0;
  4910                           
  4911                           ;incstack = 0
  4912                           ; Regs used in _I2C_Init: [wreg+status,2]
  4913  032C  0020               	movlb	0	; select bank0
  4914  032D  01D5               	clrf	I2C_Init@status
  4915                           
  4916                           ;Communication.c: 60: unsigned long pbFrequency = 4000000;
  4917  032E  3000               	movlw	0
  4918  032F  00D2               	movwf	I2C_Init@pbFrequency+3
  4919  0330  303D               	movlw	61
  4920  0331  00D1               	movwf	I2C_Init@pbFrequency+2
  4921  0332  3009               	movlw	9
  4922  0333  00D0               	movwf	I2C_Init@pbFrequency+1
  4923  0334  3000               	movlw	0
  4924  0335  00CF               	movwf	I2C_Init@pbFrequency
  4925                           
  4926                           ;Communication.c: 61: unsigned short brgValue = 0;
  4927  0336  01D3               	clrf	I2C_Init@brgValue
  4928  0337  01D4               	clrf	I2C_Init@brgValue+1
  4929                           
  4930                           ;Communication.c: 64: SSP1STAT = 0x00;
  4931  0338  0024               	movlb	4	; select bank4
  4932  0339  0194               	clrf	20	;volatile
  4933                           
  4934                           ;Communication.c: 66: SSP1CON1 = 0x28;
  4935  033A  3028               	movlw	40
  4936  033B  0095               	movwf	21	;volatile
  4937                           
  4938                           ;Communication.c: 68: SSP1CON3 = 0x00;
  4939  033C  0197               	clrf	23	;volatile
  4940                           
  4941                           ;Communication.c: 72: SSP1ADD = 0x03;
  4942  033D  3003               	movlw	3
  4943  033E  0092               	movwf	18	;volatile
  4944                           
  4945                           ;Communication.c: 75: PIR1bits.SSP1IF = 0;
  4946  033F  0020               	movlb	0	; select bank0
  4947  0340  1190               	bcf	16,3	;volatile
  4948                           
  4949                           ;Communication.c: 76: PIR2bits.BCL1IF = 0;
  4950  0341  1191               	bcf	17,3	;volatile
  4951                           
  4952                           ;Communication.c: 79: PIE1bits.SSP1IE = 1;
  4953  0342  0021               	movlb	1	; select bank1
  4954  0343  1590               	bsf	16,3	;volatile
  4955                           
  4956                           ;Communication.c: 80: PIE2bits.BCL1IE = 1;
  4957  0344  1591               	bsf	17,3	;volatile
  4958                           
  4959                           ;Communication.c: 82: do { LATCbits.LATC6 = 1; } while(0);
  4960  0345  0022               	movlb	2	; select bank2
  4961  0346  170E               	bsf	14,6	;volatile
  4962                           
  4963                           ;Communication.c: 83: status = 1;
  4964  0347  0020               	movlb	0	; select bank0
  4965  0348  01D5               	clrf	I2C_Init@status
  4966  0349  0AD5               	incf	I2C_Init@status,f
  4967                           
  4968                           ;Communication.c: 85: return status;
  4969  034A  0855               	movf	I2C_Init@status,w
  4970  034B  0008               	return
  4971  034C                     __end_of_I2C_Init:	
  4972                           
  4973                           	psect	text9
  4974  0200                     __ptext9:	
  4975 ;; *************** function _ADXL345_GetRegisterValue *****************
  4976 ;; Defined at:
  4977 ;;		line 67 in file "ADXL345.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;  registerAddr    1    wreg     unsigned char 
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;  registerAddr    1   17[BANK0 ] unsigned char 
  4982 ;;  dataBuffer      2   18[BANK0 ] unsigned char [2]
  4983 ;;  registerValu    1   20[BANK0 ] unsigned char 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      unsigned char 
  4986 ;; Registers used:
  4987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4994 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4995 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4996 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4997 ;;Total ram usage:        6 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    6
  5000 ;; This function calls:
  5001 ;;		_I2C_Read
  5002 ;;		_I2C_Write
  5003 ;;		_SPI_Read
  5004 ;; This function is called by:
  5005 ;;		_ADXL345_Init
  5006 ;;		_ADXL345_SetPowerMode
  5007 ;;		_ADXL345_SetTapDetection
  5008 ;;		_ADXL345_SetActivityDetection
  5009 ;;		_ADXL345_SetInactivityDetection
  5010 ;;		_ADXL345_SetFreeFallDetection
  5011 ;;		_ADXL345_SetRangeResolution
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           
  5016                           ;psect for function _ADXL345_GetRegisterValue
  5017  0200                     _ADXL345_GetRegisterValue:	
  5018                           
  5019                           ;incstack = 0
  5020                           ; Regs used in _ADXL345_GetRegisterValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5021                           ;ADXL345_GetRegisterValue@registerAddress stored from wreg
  5022  0200  0020               	movlb	0	; select bank0
  5023  0201  00D7               	movwf	ADXL345_GetRegisterValue@registerAddress
  5024                           
  5025                           ;ADXL345.c: 69: unsigned char dataBuffer[2] = {0, 0};
  5026  0202  082C               	movf	ADXL345_GetRegisterValue@F91+1,w
  5027  0203  00D9               	movwf	ADXL345_GetRegisterValue@dataBuffer+1
  5028  0204  082B               	movf	ADXL345_GetRegisterValue@F91,w
  5029  0205  00D8               	movwf	ADXL345_GetRegisterValue@dataBuffer
  5030                           
  5031                           ;ADXL345.c: 70: unsigned char registerValue = 0;
  5032  0206  01DA               	clrf	ADXL345_GetRegisterValue@registerValue
  5033                           
  5034                           ;ADXL345.c: 72: if(communicationType == 0)
  5035  0207  0831               	movf	_communicationType,w
  5036  0208  1D03               	btfss	3,2
  5037  0209  2A22               	goto	l3085
  5038                           
  5039                           ;ADXL345.c: 73: {
  5040                           ;ADXL345.c: 74: dataBuffer[0] = (1 << 7) | registerAddress;
  5041  020A  0857               	movf	ADXL345_GetRegisterValue@registerAddress,w
  5042  020B  3880               	iorlw	128
  5043  020C  00D5               	movwf	??_ADXL345_GetRegisterValue
  5044  020D  0855               	movf	??_ADXL345_GetRegisterValue,w
  5045  020E  00D8               	movwf	ADXL345_GetRegisterValue@dataBuffer
  5046                           
  5047                           ;ADXL345.c: 75: dataBuffer[1] = 0;
  5048  020F  01D9               	clrf	ADXL345_GetRegisterValue@dataBuffer+1
  5049                           
  5050                           ;ADXL345.c: 76: SPI_Read(1, dataBuffer, 2);
  5051  0210  3058               	movlw	(low (ADXL345_GetRegisterValue@dataBuffer| 0))& (0+255)
  5052  0211  00D5               	movwf	??_ADXL345_GetRegisterValue
  5053  0212  0855               	movf	??_ADXL345_GetRegisterValue,w
  5054  0213  00CB               	movwf	SPI_Read@data
  5055  0214  3002               	movlw	2
  5056  0215  00D6               	movwf	??_ADXL345_GetRegisterValue+1
  5057  0216  0856               	movf	??_ADXL345_GetRegisterValue+1,w
  5058  0217  00CC               	movwf	SPI_Read@bytesNumber
  5059  0218  3001               	movlw	1
  5060  0219  3180  209A  3182   	fcall	_SPI_Read
  5061                           
  5062                           ;ADXL345.c: 77: registerValue = dataBuffer[1];
  5063  021C  0020               	movlb	0	; select bank0
  5064  021D  0859               	movf	ADXL345_GetRegisterValue@dataBuffer+1,w
  5065  021E  00D5               	movwf	??_ADXL345_GetRegisterValue
  5066  021F  0855               	movf	??_ADXL345_GetRegisterValue,w
  5067  0220  00DA               	movwf	ADXL345_GetRegisterValue@registerValue
  5068                           
  5069                           ;ADXL345.c: 78: }
  5070  0221  2A39               	goto	l3087
  5071  0222                     l3085:	
  5072                           
  5073                           ;ADXL345.c: 79: else
  5074                           ;ADXL345.c: 80: {
  5075                           ;ADXL345.c: 81: I2C_Write(0x1D,
  5076                           ;ADXL345.c: 82: &registerAddress,
  5077                           ;ADXL345.c: 83: 1,
  5078                           ;ADXL345.c: 84: 0);
  5079  0222  3057               	movlw	(low (ADXL345_GetRegisterValue@registerAddress| 0))& (0+255)
  5080  0223  00D5               	movwf	??_ADXL345_GetRegisterValue
  5081  0224  0855               	movf	??_ADXL345_GetRegisterValue,w
  5082  0225  00CB               	movwf	I2C_Write@dataBuffer
  5083  0226  01CC               	clrf	I2C_Write@bytesNumber
  5084  0227  0ACC               	incf	I2C_Write@bytesNumber,f
  5085  0228  01CD               	clrf	I2C_Write@stopBit
  5086  0229  301D               	movlw	29
  5087  022A  3181  2185  3182   	fcall	_I2C_Write
  5088                           
  5089                           ;ADXL345.c: 85: I2C_Read(0x1D,
  5090                           ;ADXL345.c: 86: &registerValue,
  5091                           ;ADXL345.c: 87: 1,
  5092                           ;ADXL345.c: 88: 1);
  5093  022D  305A               	movlw	(low (ADXL345_GetRegisterValue@registerValue| 0))& (0+255)
  5094  022E  0020               	movlb	0	; select bank0
  5095  022F  00D5               	movwf	??_ADXL345_GetRegisterValue
  5096  0230  0855               	movf	??_ADXL345_GetRegisterValue,w
  5097  0231  00CB               	movwf	I2C_Read@dataBuffer
  5098  0232  01CC               	clrf	I2C_Read@bytesNumber
  5099  0233  0ACC               	incf	I2C_Read@bytesNumber,f
  5100  0234  01CD               	clrf	I2C_Read@stopBit
  5101  0235  0ACD               	incf	I2C_Read@stopBit,f
  5102  0236  301D               	movlw	29
  5103  0237  3180  2044         	fcall	_I2C_Read
  5104  0239                     l3087:	
  5105                           
  5106                           ;ADXL345.c: 89: }
  5107                           ;ADXL345.c: 91: return registerValue;
  5108  0239  0020               	movlb	0	; select bank0
  5109  023A  085A               	movf	ADXL345_GetRegisterValue@registerValue,w
  5110  023B  0008               	return
  5111  023C                     __end_of_ADXL345_GetRegisterValue:	
  5112                           
  5113                           	psect	text10
  5114  009A                     __ptext10:	
  5115 ;; *************** function _SPI_Read *****************
  5116 ;; Defined at:
  5117 ;;		line 261 in file "Communication.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  slaveDeviceI    1    wreg     unsigned char 
  5120 ;;  data            1    5[BANK0 ] PTR unsigned char 
  5121 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@dataBuffer(2), 
  5122 ;;  bytesNumber     1    6[BANK0 ] unsigned char 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  slaveDeviceI    1   13[BANK0 ] unsigned char 
  5125 ;;  writeBuffer     4    9[BANK0 ] unsigned char [4]
  5126 ;;  byte            1   14[BANK0 ] unsigned char 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      unsigned char 
  5129 ;; Registers used:
  5130 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;Total ram usage:       10 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    5
  5143 ;; This function calls:
  5144 ;;		Nothing
  5145 ;; This function is called by:
  5146 ;;		_ADXL345_GetRegisterValue
  5147 ;;		_ADXL345_GetXyz
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           
  5152                           ;psect for function _SPI_Read
  5153  009A                     _SPI_Read:	
  5154                           
  5155                           ;incstack = 0
  5156                           ; Regs used in _SPI_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5157                           ;SPI_Read@slaveDeviceId stored from wreg
  5158  009A  0020               	movlb	0	; select bank0
  5159  009B  00D3               	movwf	SPI_Read@slaveDeviceId
  5160                           
  5161                           ;Communication.c: 265: unsigned char byte = 0;
  5162  009C  01D4               	clrf	SPI_Read@byte
  5163                           
  5164                           ;Communication.c: 266: unsigned char writeBuffer[4] = {0, 0, 0, 0};
  5165  009D  0828               	movf	SPI_Read@F12027+3,w
  5166  009E  00D2               	movwf	SPI_Read@writeBuffer+3
  5167  009F  0827               	movf	SPI_Read@F12027+2,w
  5168  00A0  00D1               	movwf	SPI_Read@writeBuffer+2
  5169  00A1  0826               	movf	SPI_Read@F12027+1,w
  5170  00A2  00D0               	movwf	SPI_Read@writeBuffer+1
  5171  00A3  0825               	movf	SPI_Read@F12027,w
  5172  00A4  00CF               	movwf	SPI_Read@writeBuffer
  5173                           
  5174                           ;Communication.c: 269: SSP1CON1bits.WCOL = 0;
  5175  00A5  0024               	movlb	4	; select bank4
  5176  00A6  1395               	bcf	21,7	;volatile
  5177                           
  5178                           ;Communication.c: 271: for(byte = 0; byte < bytesNumber; byte++)
  5179  00A7  0020               	movlb	0	; select bank0
  5180  00A8  01D4               	clrf	SPI_Read@byte
  5181  00A9                     l2989:	
  5182  00A9  084C               	movf	SPI_Read@bytesNumber,w
  5183  00AA  0254               	subwf	SPI_Read@byte,w
  5184  00AB  1803               	btfsc	3,0
  5185  00AC  28C0               	goto	l2991
  5186                           
  5187                           ;Communication.c: 272: {
  5188                           ;Communication.c: 273: writeBuffer[byte] = data[byte];
  5189  00AD  0854               	movf	SPI_Read@byte,w
  5190  00AE  074B               	addwf	SPI_Read@data,w
  5191  00AF  00CD               	movwf	??_SPI_Read
  5192  00B0  084D               	movf	??_SPI_Read,w
  5193  00B1  0086               	movwf	6
  5194  00B2  0187               	clrf	7
  5195  00B3  0801               	movf	1,w
  5196  00B4  00CE               	movwf	??_SPI_Read+1
  5197  00B5  0854               	movf	SPI_Read@byte,w
  5198  00B6  3E4F               	addlw	(low (SPI_Read@writeBuffer| 0))& (0+255)
  5199  00B7  0086               	movwf	6
  5200  00B8  0187               	clrf	7
  5201  00B9  084E               	movf	??_SPI_Read+1,w
  5202  00BA  0081               	movwf	1
  5203  00BB  3001               	movlw	1
  5204  00BC  00CD               	movwf	??_SPI_Read
  5205  00BD  084D               	movf	??_SPI_Read,w
  5206  00BE  07D4               	addwf	SPI_Read@byte,f
  5207  00BF  28A9               	goto	l2989
  5208  00C0                     l2991:	
  5209                           
  5210                           ;Communication.c: 274: }
  5211                           ;Communication.c: 275: if(slaveDeviceId == 1)
  5212  00C0  0353               	decf	SPI_Read@slaveDeviceId,w
  5213  00C1  1D03               	btfss	3,2
  5214  00C2  28C5               	goto	l2993
  5215                           
  5216                           ;Communication.c: 276: {
  5217                           ;Communication.c: 277: do { LATCbits.LATC6 = 0; } while(0);
  5218  00C3  0022               	movlb	2	; select bank2
  5219  00C4  130E               	bcf	14,6	;volatile
  5220  00C5                     l2993:	
  5221                           
  5222                           ;Communication.c: 278: }
  5223                           ;Communication.c: 279: for(byte = 0; byte < bytesNumber; byte++)
  5224  00C5  0020               	movlb	0	; select bank0
  5225  00C6  01D4               	clrf	SPI_Read@byte
  5226  00C7                     l3001:	
  5227  00C7  084C               	movf	SPI_Read@bytesNumber,w
  5228  00C8  0254               	subwf	SPI_Read@byte,w
  5229  00C9  1803               	btfsc	3,0
  5230  00CA  28E4               	goto	l3003
  5231                           
  5232                           ;Communication.c: 280: {
  5233                           ;Communication.c: 281: SSP1BUF = writeBuffer[byte];
  5234  00CB  0854               	movf	SPI_Read@byte,w
  5235  00CC  3E4F               	addlw	(low (SPI_Read@writeBuffer| 0))& (0+255)
  5236  00CD  0086               	movwf	6
  5237  00CE  0187               	clrf	7
  5238  00CF  0801               	movf	1,w
  5239  00D0  0024               	movlb	4	; select bank4
  5240  00D1  0091               	movwf	17	;volatile
  5241  00D2                     l703:	
  5242                           ;Communication.c: 282: while(SSP1STATbits.BF == 0);
  5243                           
  5244  00D2  1C14               	btfss	20,0	;volatile
  5245  00D3  28D2               	goto	l703
  5246                           
  5247                           ;Communication.c: 283: data[byte] = SSP1BUF;
  5248  00D4  0811               	movf	17,w	;volatile
  5249  00D5  0020               	movlb	0	; select bank0
  5250  00D6  00CD               	movwf	??_SPI_Read
  5251  00D7  0854               	movf	SPI_Read@byte,w
  5252  00D8  074B               	addwf	SPI_Read@data,w
  5253  00D9  00CE               	movwf	??_SPI_Read+1
  5254  00DA  084E               	movf	??_SPI_Read+1,w
  5255  00DB  0086               	movwf	6
  5256  00DC  0187               	clrf	7
  5257  00DD  084D               	movf	??_SPI_Read,w
  5258  00DE  0081               	movwf	1
  5259  00DF  3001               	movlw	1
  5260  00E0  00CD               	movwf	??_SPI_Read
  5261  00E1  084D               	movf	??_SPI_Read,w
  5262  00E2  07D4               	addwf	SPI_Read@byte,f
  5263  00E3  28C7               	goto	l3001
  5264  00E4                     l3003:	
  5265                           
  5266                           ;Communication.c: 284: }
  5267                           ;Communication.c: 286: if(slaveDeviceId == 1)
  5268  00E4  0353               	decf	SPI_Read@slaveDeviceId,w
  5269  00E5  1D03               	btfss	3,2
  5270  00E6  0008               	return
  5271                           
  5272                           ;Communication.c: 287: {
  5273                           ;Communication.c: 288: do { LATCbits.LATC6 = 1; } while(0);
  5274  00E7  0022               	movlb	2	; select bank2
  5275  00E8  170E               	bsf	14,6	;volatile
  5276  00E9  0008               	return
  5277  00EA                     __end_of_SPI_Read:	
  5278                           ;Communication.c: 289: }
  5279                           ;Communication.c: 291: return bytesNumber;
  5280                           ;	Return value of _SPI_Read is never used
  5281                           
  5282                           
  5283                           	psect	text11
  5284  0185                     __ptext11:	
  5285 ;; *************** function _I2C_Write *****************
  5286 ;; Defined at:
  5287 ;;		line 100 in file "Communication.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  slaveAddress    1    wreg     unsigned char 
  5290 ;;  dataBuffer      1    5[BANK0 ] PTR unsigned char 
  5291 ;;		 -> ADXL345_GetXyz@firstRegAddress(1), ADXL345_SetRegisterValue@dataBuffer(2), ADXL345_GetRegisterValue@registerAddr
      +ess(1), 
  5292 ;;  bytesNumber     1    6[BANK0 ] unsigned char 
  5293 ;;  stopBit         1    7[BANK0 ] unsigned char 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  slaveAddress    1   10[BANK0 ] unsigned char 
  5296 ;;  byte            1   12[BANK0 ] unsigned char 
  5297 ;;  acknowledge     1   11[BANK0 ] unsigned char 
  5298 ;;  status          1    9[BANK0 ] unsigned char 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      unsigned char 
  5301 ;; Registers used:
  5302 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5308 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5309 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5310 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5311 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5312 ;;Total ram usage:        8 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; Hardware stack levels required when called:    5
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_ADXL345_GetRegisterValue
  5319 ;;		_ADXL345_SetRegisterValue
  5320 ;;		_ADXL345_GetXyz
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           
  5325                           ;psect for function _I2C_Write
  5326  0185                     _I2C_Write:	
  5327                           
  5328                           ;incstack = 0
  5329                           ; Regs used in _I2C_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  5330                           ;I2C_Write@slaveAddress stored from wreg
  5331  0185  0020               	movlb	0	; select bank0
  5332  0186  00D0               	movwf	I2C_Write@slaveAddress
  5333                           
  5334                           ;Communication.c: 105: unsigned char status = 0;
  5335  0187  01CF               	clrf	I2C_Write@status
  5336                           
  5337                           ;Communication.c: 106: unsigned char acknowledge = 0;
  5338  0188  01D1               	clrf	I2C_Write@acknowledge
  5339                           
  5340                           ;Communication.c: 107: unsigned char byte = 0;
  5341  0189  01D2               	clrf	I2C_Write@byte
  5342                           
  5343                           ;Communication.c: 110: SSP1CON2bits.SEN = 1;
  5344  018A  0024               	movlb	4	; select bank4
  5345  018B  1416               	bsf	22,0	;volatile
  5346  018C                     l642:	
  5347                           ;Communication.c: 111: while(SSP1CON2bits.SEN);
  5348                           
  5349  018C  1816               	btfsc	22,0	;volatile
  5350  018D  298C               	goto	l642
  5351                           
  5352                           ;Communication.c: 112: PIR1bits.SSP1IF = 0;
  5353  018E  0020               	movlb	0	; select bank0
  5354  018F  1190               	bcf	16,3	;volatile
  5355                           
  5356                           ;Communication.c: 114: SSP1BUF = slaveAddress << 1;
  5357  0190  3550               	lslf	I2C_Write@slaveAddress,w
  5358  0191  0024               	movlb	4	; select bank4
  5359  0192  0091               	movwf	17	;volatile
  5360  0193                     l645:	
  5361                           ;Communication.c: 115: while(!PIR1bits.SSP1IF);
  5362                           
  5363  0193  0020               	movlb	0	; select bank0
  5364  0194  1D90               	btfss	16,3	;volatile
  5365  0195  2993               	goto	l645
  5366                           
  5367                           ;Communication.c: 116: PIR1bits.SSP1IF = 0;
  5368  0196  1190               	bcf	16,3	;volatile
  5369                           
  5370                           ;Communication.c: 117: acknowledge = SSP1CON2bits.ACKSTAT;
  5371  0197  3000               	movlw	0
  5372  0198  0024               	movlb	4	; select bank4
  5373  0199  1B16               	btfsc	22,6	;volatile
  5374  019A  3001               	movlw	1
  5375  019B  0020               	movlb	0	; select bank0
  5376  019C  00D1               	movwf	I2C_Write@acknowledge
  5377                           
  5378                           ;Communication.c: 118: if (acknowledge == 0)
  5379  019D  0851               	movf	I2C_Write@acknowledge,w
  5380  019E  1D03               	btfss	3,2
  5381  019F  29B7               	goto	l3023
  5382                           
  5383                           ;Communication.c: 119: {
  5384                           ;Communication.c: 120: for(byte = 0; byte < bytesNumber; byte++)
  5385  01A0  01D2               	clrf	I2C_Write@byte
  5386  01A1                     l3021:	
  5387  01A1  084C               	movf	I2C_Write@bytesNumber,w
  5388  01A2  0252               	subwf	I2C_Write@byte,w
  5389  01A3  1803               	btfsc	3,0
  5390  01A4  29BB               	goto	l3025
  5391                           
  5392                           ;Communication.c: 121: {
  5393                           ;Communication.c: 122: SSP1BUF = dataBuffer[byte];
  5394  01A5  0852               	movf	I2C_Write@byte,w
  5395  01A6  074B               	addwf	I2C_Write@dataBuffer,w
  5396  01A7  00CE               	movwf	??_I2C_Write
  5397  01A8  084E               	movf	??_I2C_Write,w
  5398  01A9  0086               	movwf	6
  5399  01AA  0187               	clrf	7
  5400  01AB  0801               	movf	1,w
  5401  01AC  0024               	movlb	4	; select bank4
  5402  01AD  0091               	movwf	17	;volatile
  5403  01AE                     l651:	
  5404                           ;Communication.c: 123: while(!PIR1bits.SSP1IF);
  5405                           
  5406  01AE  0020               	movlb	0	; select bank0
  5407  01AF  1D90               	btfss	16,3	;volatile
  5408  01B0  29AE               	goto	l651
  5409                           
  5410                           ;Communication.c: 124: PIR1bits.SSP1IF = 0;
  5411  01B1  1190               	bcf	16,3	;volatile
  5412  01B2  3001               	movlw	1
  5413  01B3  00CE               	movwf	??_I2C_Write
  5414  01B4  084E               	movf	??_I2C_Write,w
  5415  01B5  07D2               	addwf	I2C_Write@byte,f
  5416  01B6  29A1               	goto	l3021
  5417  01B7                     l3023:	
  5418                           ;Communication.c: 125: }
  5419                           ;Communication.c: 126: }
  5420                           
  5421                           
  5422                           ;Communication.c: 127: else
  5423                           ;Communication.c: 128: {
  5424                           ;Communication.c: 129: status = 0xFF;
  5425  01B7  30FF               	movlw	255
  5426  01B8  00CE               	movwf	??_I2C_Write
  5427  01B9  084E               	movf	??_I2C_Write,w
  5428  01BA  00CF               	movwf	I2C_Write@status
  5429  01BB                     l3025:	
  5430                           
  5431                           ;Communication.c: 130: }
  5432                           ;Communication.c: 131: if(stopBit)
  5433  01BB  084D               	movf	I2C_Write@stopBit,w
  5434  01BC  1903               	btfsc	3,2
  5435  01BD  0008               	return
  5436                           
  5437                           ;Communication.c: 132: {
  5438                           ;Communication.c: 133: SSP1CON2bits.PEN = 1;
  5439  01BE  0024               	movlb	4	; select bank4
  5440  01BF  1516               	bsf	22,2	;volatile
  5441  01C0                     l657:	
  5442                           ;Communication.c: 134: while(SSP1CON2bits.PEN);
  5443                           
  5444  01C0  1D16               	btfss	22,2	;volatile
  5445  01C1  0008               	return
  5446  01C2  29C0               	goto	l657
  5447  01C3                     __end_of_I2C_Write:	
  5448                           ;Communication.c: 135: }
  5449                           ;Communication.c: 137: return status;
  5450                           ;	Return value of _I2C_Write is never used
  5451                           
  5452                           
  5453                           	psect	text12
  5454  0044                     __ptext12:	
  5455 ;; *************** function _I2C_Read *****************
  5456 ;; Defined at:
  5457 ;;		line 152 in file "Communication.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  slaveAddress    1    wreg     unsigned char 
  5460 ;;  dataBuffer      1    5[BANK0 ] PTR unsigned char 
  5461 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@registerValue(1), 
  5462 ;;  bytesNumber     1    6[BANK0 ] unsigned char 
  5463 ;;  stopBit         1    7[BANK0 ] unsigned char 
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;  slaveAddress    1   11[BANK0 ] unsigned char 
  5466 ;;  byte            1   13[BANK0 ] unsigned char 
  5467 ;;  acknowledge     1   12[BANK0 ] unsigned char 
  5468 ;;  status          1   10[BANK0 ] unsigned char 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  1    wreg      unsigned char 
  5471 ;; Registers used:
  5472 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5478 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5479 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5481 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5482 ;;Total ram usage:        9 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:    5
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_ADXL345_GetRegisterValue
  5489 ;;		_ADXL345_GetXyz
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           
  5494                           ;psect for function _I2C_Read
  5495  0044                     _I2C_Read:	
  5496                           
  5497                           ;incstack = 0
  5498                           ; Regs used in _I2C_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5499                           ;I2C_Read@slaveAddress stored from wreg
  5500  0044  0020               	movlb	0	; select bank0
  5501  0045  00D1               	movwf	I2C_Read@slaveAddress
  5502                           
  5503                           ;Communication.c: 157: unsigned char status = bytesNumber;
  5504  0046  084C               	movf	I2C_Read@bytesNumber,w
  5505  0047  00CE               	movwf	??_I2C_Read
  5506  0048  084E               	movf	??_I2C_Read,w
  5507  0049  00D0               	movwf	I2C_Read@status
  5508                           
  5509                           ;Communication.c: 158: unsigned char acknowledge = 0;
  5510  004A  01D2               	clrf	I2C_Read@acknowledge
  5511                           
  5512                           ;Communication.c: 159: unsigned char byte = 0;
  5513  004B  01D3               	clrf	I2C_Read@byte
  5514                           
  5515                           ;Communication.c: 161: SSP1CON2bits.RSEN = 1;
  5516  004C  0024               	movlb	4	; select bank4
  5517  004D  1496               	bsf	22,1	;volatile
  5518  004E                     l663:	
  5519                           ;Communication.c: 162: while(SSP1CON2bits.RSEN);
  5520                           
  5521  004E  1896               	btfsc	22,1	;volatile
  5522  004F  284E               	goto	l663
  5523                           
  5524                           ;Communication.c: 163: PIR1bits.SSP1IF = 0;
  5525  0050  0020               	movlb	0	; select bank0
  5526  0051  1190               	bcf	16,3	;volatile
  5527                           
  5528                           ;Communication.c: 165: SSP1BUF = (slaveAddress << 1) + 1;
  5529  0052  1403               	setc
  5530  0053  0D51               	rlf	I2C_Read@slaveAddress,w
  5531  0054  0024               	movlb	4	; select bank4
  5532  0055  0091               	movwf	17	;volatile
  5533  0056                     l666:	
  5534                           ;Communication.c: 166: while(!PIR1bits.SSP1IF);
  5535                           
  5536  0056  0020               	movlb	0	; select bank0
  5537  0057  1D90               	btfss	16,3	;volatile
  5538  0058  2856               	goto	l666
  5539                           
  5540                           ;Communication.c: 167: PIR1bits.SSP1IF = 0;
  5541  0059  1190               	bcf	16,3	;volatile
  5542                           
  5543                           ;Communication.c: 168: acknowledge = SSP1CON2bits.ACKSTAT;
  5544  005A  3000               	movlw	0
  5545  005B  0024               	movlb	4	; select bank4
  5546  005C  1B16               	btfsc	22,6	;volatile
  5547  005D  3001               	movlw	1
  5548  005E  0020               	movlb	0	; select bank0
  5549  005F  00D2               	movwf	I2C_Read@acknowledge
  5550                           
  5551                           ;Communication.c: 169: if (acknowledge == 0)
  5552  0060  0852               	movf	I2C_Read@acknowledge,w
  5553  0061  1D03               	btfss	3,2
  5554  0062  2891               	goto	l3055
  5555                           
  5556                           ;Communication.c: 170: {
  5557                           ;Communication.c: 171: for(byte = 0; byte < bytesNumber; byte++)
  5558  0063  01D3               	clrf	I2C_Read@byte
  5559  0064                     l3053:	
  5560  0064  084C               	movf	I2C_Read@bytesNumber,w
  5561  0065  0253               	subwf	I2C_Read@byte,w
  5562  0066  1803               	btfsc	3,0
  5563  0067  2895               	goto	l3057
  5564                           
  5565                           ;Communication.c: 172: {
  5566                           ;Communication.c: 173: SSP1CON2bits.RCEN = 1;
  5567  0068  0024               	movlb	4	; select bank4
  5568  0069  1596               	bsf	22,3	;volatile
  5569  006A                     l672:	
  5570                           ;Communication.c: 174: while(!SSP1STATbits.BF);
  5571                           
  5572  006A  1C14               	btfss	20,0	;volatile
  5573  006B  286A               	goto	l672
  5574                           
  5575                           ;Communication.c: 175: dataBuffer[byte] = SSPBUF;
  5576  006C  0811               	movf	17,w	;volatile
  5577  006D  0020               	movlb	0	; select bank0
  5578  006E  00CE               	movwf	??_I2C_Read
  5579  006F  0853               	movf	I2C_Read@byte,w
  5580  0070  074B               	addwf	I2C_Read@dataBuffer,w
  5581  0071  00CF               	movwf	??_I2C_Read+1
  5582  0072  084F               	movf	??_I2C_Read+1,w
  5583  0073  0086               	movwf	6
  5584  0074  0187               	clrf	7
  5585  0075  084E               	movf	??_I2C_Read,w
  5586  0076  0081               	movwf	1
  5587                           
  5588                           ;Communication.c: 176: if(byte == (bytesNumber - 1))
  5589  0077  084C               	movf	I2C_Read@bytesNumber,w
  5590  0078  3EFF               	addlw	255
  5591  0079  00CE               	movwf	??_I2C_Read
  5592  007A  30FF               	movlw	255
  5593  007B  1803               	skipnc
  5594  007C  3000               	movlw	0
  5595  007D  00CF               	movwf	??_I2C_Read+1
  5596  007E  0853               	movf	I2C_Read@byte,w
  5597  007F  064E               	xorwf	??_I2C_Read,w
  5598  0080  044F               	iorwf	??_I2C_Read+1,w
  5599  0081  1D03               	skipz
  5600  0082  2886               	goto	l675
  5601                           
  5602                           ;Communication.c: 177: {
  5603                           ;Communication.c: 178: SSP1CON2bits.ACKDT = 1;
  5604  0083  0024               	movlb	4	; select bank4
  5605  0084  1696               	bsf	22,5	;volatile
  5606                           
  5607                           ;Communication.c: 179: }
  5608  0085  2888               	goto	l676
  5609  0086                     l675:	
  5610                           
  5611                           ;Communication.c: 180: else
  5612                           ;Communication.c: 181: {
  5613                           ;Communication.c: 182: SSP1CON2bits.ACKDT = 0;
  5614  0086  0024               	movlb	4	; select bank4
  5615  0087  1296               	bcf	22,5	;volatile
  5616  0088                     l676:	
  5617                           
  5618                           ;Communication.c: 183: }
  5619                           ;Communication.c: 184: SSP1CON2bits.ACKEN = 1;
  5620  0088  1616               	bsf	22,4	;volatile
  5621  0089                     l677:	
  5622                           ;Communication.c: 185: while(SSP1CON2bits.ACKEN);
  5623                           
  5624  0089  1A16               	btfsc	22,4	;volatile
  5625  008A  2889               	goto	l677
  5626  008B  3001               	movlw	1
  5627  008C  0020               	movlb	0	; select bank0
  5628  008D  00CE               	movwf	??_I2C_Read
  5629  008E  084E               	movf	??_I2C_Read,w
  5630  008F  07D3               	addwf	I2C_Read@byte,f
  5631  0090  2864               	goto	l3053
  5632  0091                     l3055:	
  5633                           ;Communication.c: 186: }
  5634                           ;Communication.c: 187: }
  5635                           
  5636                           
  5637                           ;Communication.c: 188: else
  5638                           ;Communication.c: 189: {
  5639                           ;Communication.c: 190: status = 0xFF;
  5640  0091  30FF               	movlw	255
  5641  0092  00CE               	movwf	??_I2C_Read
  5642  0093  084E               	movf	??_I2C_Read,w
  5643  0094  00D0               	movwf	I2C_Read@status
  5644  0095                     l3057:	
  5645                           
  5646                           ;Communication.c: 191: }
  5647                           ;Communication.c: 192: SSP1CON2bits.PEN = 1;
  5648  0095  0024               	movlb	4	; select bank4
  5649  0096  1516               	bsf	22,2	;volatile
  5650  0097                     l682:	
  5651                           ;Communication.c: 193: while(SSP1CON2bits.PEN);
  5652                           
  5653  0097  1D16               	btfss	22,2	;volatile
  5654  0098  0008               	return
  5655  0099  2897               	goto	l682
  5656  009A                     __end_of_I2C_Read:	
  5657                           ;Communication.c: 195: return status;
  5658                           ;	Return value of _I2C_Read is never used
  5659                           
  5660                           
  5661                           	psect	intentry
  5662  0004                     __pintentry:	
  5663 ;; *************** function _INTERRUPT_InterruptManager *****************
  5664 ;; Defined at:
  5665 ;;		line 51 in file "interrupt_manager.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;		None
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;		None
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      void 
  5672 ;; Registers used:
  5673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5681 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5683 ;;Total ram usage:        1 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    4
  5686 ;; This function calls:
  5687 ;;		_I2C_BusCollisionISR
  5688 ;;		_PIN_MANAGER_IOC
  5689 ;;		_TMR0_ISR
  5690 ;; This function is called by:
  5691 ;;		Interrupt level 1
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695  0004                     _INTERRUPT_InterruptManager:	
  5696                           
  5697                           ;incstack = 0
  5698  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5699                           
  5700                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5701  0005  3180               	pagesel	$
  5702  0006  0020               	movlb	0	; select bank0
  5703  0007  087F               	movf	127,w
  5704  0008  00CA               	movwf	??_INTERRUPT_InterruptManager
  5705                           
  5706                           ;interrupt_manager.c: 54: if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  5707  0009  198B               	btfsc	11,3	;volatile
  5708  000A  1C0B               	btfss	11,0	;volatile
  5709  000B  2810               	goto	i1l344
  5710                           
  5711                           ;interrupt_manager.c: 55: {
  5712                           ;interrupt_manager.c: 56: PIN_MANAGER_IOC();
  5713  000C  3183  23AC  3180   	fcall	_PIN_MANAGER_IOC
  5714                           
  5715                           ;interrupt_manager.c: 57: }
  5716  000F  282A               	goto	i1l354
  5717  0010                     i1l344:	
  5718                           
  5719                           ;interrupt_manager.c: 58: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  5720  0010  1A8B               	btfsc	11,5	;volatile
  5721  0011  1D0B               	btfss	11,2	;volatile
  5722  0012  2817               	goto	i1l346
  5723                           
  5724                           ;interrupt_manager.c: 59: {
  5725                           ;interrupt_manager.c: 60: TMR0_ISR();
  5726  0013  3183  230B  3180   	fcall	_TMR0_ISR
  5727                           
  5728                           ;interrupt_manager.c: 61: }
  5729  0016  282A               	goto	i1l354
  5730  0017                     i1l346:	
  5731                           
  5732                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1)
  5733  0017  1F0B               	btfss	11,6	;volatile
  5734  0018  282A               	goto	i1l354
  5735                           
  5736                           ;interrupt_manager.c: 63: {
  5737                           ;interrupt_manager.c: 64: if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  5738  0019  0021               	movlb	1	; select bank1
  5739  001A  1D91               	btfss	17,3	;volatile
  5740  001B  2823               	goto	i1l349
  5741  001C  0020               	movlb	0	; select bank0
  5742  001D  1D91               	btfss	17,3	;volatile
  5743  001E  2823               	goto	i1l349
  5744                           
  5745                           ;interrupt_manager.c: 65: {
  5746                           ;interrupt_manager.c: 66: I2C_BusCollisionISR();
  5747  001F  3183  23B7  3180   	fcall	_I2C_BusCollisionISR
  5748                           
  5749                           ;interrupt_manager.c: 67: }
  5750  0022  282A               	goto	i1l354
  5751  0023                     i1l349:	
  5752                           
  5753                           ;interrupt_manager.c: 68: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  5754  0023  0021               	movlb	1	; select bank1
  5755  0024  1D90               	btfss	16,3	;volatile
  5756  0025  282A               	goto	i1l354
  5757  0026  0020               	movlb	0	; select bank0
  5758  0027  1D90               	btfss	16,3	;volatile
  5759  0028  282A               	goto	i1l354
  5760                           
  5761                           ;interrupt_manager.c: 69: {
  5762                           ;interrupt_manager.c: 70: PIR1bits.SSP1IF = 0;
  5763  0029  1190               	bcf	16,3	;volatile
  5764  002A                     i1l354:	
  5765                           ;interrupt_manager.c: 78: else
  5766                           ;interrupt_manager.c: 79: {
  5767                           
  5768                           ;interrupt_manager.c: 76: }
  5769                           ;interrupt_manager.c: 77: }
  5770                           
  5771                           ;interrupt_manager.c: 73: else
  5772                           ;interrupt_manager.c: 74: {
  5773                           
  5774                           ;interrupt_manager.c: 72: }
  5775                           
  5776  002A  0020               	movlb	0	; select bank0
  5777  002B  084A               	movf	??_INTERRUPT_InterruptManager,w
  5778  002C  00FF               	movwf	127
  5779  002D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5780  002E  0009               	retfie
  5781  002F                     __end_of_INTERRUPT_InterruptManager:	
  5782                           
  5783                           	psect	text14
  5784  030B                     __ptext14:	
  5785 ;; *************** function _TMR0_ISR *****************
  5786 ;; Defined at:
  5787 ;;		line 115 in file "tmr0.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;		None
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;		None
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      void 
  5794 ;; Registers used:
  5795 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;Total ram usage:        0 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    3
  5808 ;; This function calls:
  5809 ;;		_TMR0_CallBack
  5810 ;; This function is called by:
  5811 ;;		_INTERRUPT_InterruptManager
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           
  5816                           ;psect for function _TMR0_ISR
  5817  030B                     _TMR0_ISR:	
  5818                           
  5819                           ;tmr0.c: 117: static volatile uint16_t CountCallBack = 0;
  5820                           ;tmr0.c: 120: INTCONbits.TMR0IF = 0;
  5821                           
  5822                           ;incstack = 0
  5823                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5824  030B  110B               	bcf	11,2	;volatile
  5825                           
  5826                           ;tmr0.c: 122: TMR0 = timer0ReloadVal;
  5827  030C  0020               	movlb	0	; select bank0
  5828  030D  0861               	movf	_timer0ReloadVal,w	;volatile
  5829  030E  0095               	movwf	21	;volatile
  5830                           
  5831                           ;tmr0.c: 125: if (++CountCallBack >= 5)
  5832  030F  3001               	movlw	1
  5833  0310  07AD               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  5834  0311  3000               	movlw	0
  5835  0312  3DAE               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  5836  0313  3000               	movlw	0
  5837  0314  022E               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  5838  0315  3005               	movlw	5
  5839  0316  1903               	skipnz
  5840  0317  022D               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  5841  0318  1C03               	skipc
  5842  0319  2B21               	goto	L2
  5843                           
  5844                           ;tmr0.c: 126: {
  5845                           ;tmr0.c: 128: TMR0_CallBack();
  5846  031A  3183  237E  3183   	fcall	_TMR0_CallBack
  5847                           
  5848                           ;tmr0.c: 131: CountCallBack = 0;
  5849  031D  0020               	movlb	0	; select bank0
  5850  031E  01AD               	clrf	TMR0_ISR@CountCallBack	;volatile
  5851  031F  01AE               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  5852                           
  5853                           ;tmr0.c: 132: }
  5854                           ;tmr0.c: 133: do { LATCbits.LATC5 = ~LATCbits.LATC5; } while(0);
  5855  0320  1003               	clrc
  5856  0321                     L2:	
  5857  0321  0022               	movlb	2	; select bank2
  5858  0322  1E8E               	btfss	14,5	;volatile
  5859  0323  1403               	setc
  5860  0324  1C03               	btfss	3,0
  5861  0325  2B29               	goto	u205_20
  5862  0326  0022               	movlb	2	; select bank2
  5863  0327  168E               	bsf	14,5	;volatile
  5864  0328  0008               	return
  5865  0329                     u205_20:	
  5866  0329  0022               	movlb	2	; select bank2
  5867  032A  128E               	bcf	14,5	;volatile
  5868  032B  0008               	return
  5869  032C                     __end_of_TMR0_ISR:	
  5870                           
  5871                           	psect	text15
  5872  037E                     __ptext15:	
  5873 ;; *************** function _TMR0_CallBack *****************
  5874 ;; Defined at:
  5875 ;;		line 138 in file "tmr0.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;  DeviceID        1   13[COMMON] unsigned char 
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5891 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;Total ram usage:        2 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    2
  5896 ;; This function calls:
  5897 ;;		Absolute function
  5898 ;;		_TMR0_DefaultInterruptHandler
  5899 ;;		i1_ADXL345_GetRegisterValue
  5900 ;; This function is called by:
  5901 ;;		_TMR0_ISR
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           
  5906                           ;psect for function _TMR0_CallBack
  5907  037E                     _TMR0_CallBack:	
  5908                           
  5909                           ;tmr0.c: 141: unsigned char DeviceID;
  5910                           ;tmr0.c: 142: DeviceID = ADXL345_GetRegisterValue(0x00);
  5911                           
  5912                           ;incstack = 0
  5913                           ; Regs used in _TMR0_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5914  037E  3000               	movlw	0
  5915  037F  3182  2278  3183   	fcall	i1_ADXL345_GetRegisterValue
  5916  0382  00FC               	movwf	??_TMR0_CallBack
  5917  0383  087C               	movf	??_TMR0_CallBack,w
  5918  0384  00FD               	movwf	TMR0_CallBack@DeviceID
  5919                           
  5920                           ;tmr0.c: 143: if(TMR0_InterruptHandler)
  5921  0385  0020               	movlb	0	; select bank0
  5922  0386  085F               	movf	_TMR0_InterruptHandler,w
  5923  0387  0460               	iorwf	_TMR0_InterruptHandler+1,w
  5924  0388  1903               	btfsc	3,2
  5925  0389  0008               	return
  5926                           
  5927                           ;tmr0.c: 144: {
  5928                           ;tmr0.c: 145: TMR0_InterruptHandler();
  5929  038A  0860               	movf	_TMR0_InterruptHandler+1,w
  5930  038B  008A               	movwf	10
  5931  038C  085F               	movf	_TMR0_InterruptHandler,w
  5932  038D  000A               	callw
  5933  038E  3183               	pagesel	$
  5934  038F  0008               	return
  5935  0390                     __end_of_TMR0_CallBack:	
  5936                           
  5937                           	psect	text16
  5938  0278                     __ptext16:	
  5939 ;; *************** function i1_ADXL345_GetRegisterValue *****************
  5940 ;; Defined at:
  5941 ;;		line 67 in file "ADXL345.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  registerAddr    1    wreg     unsigned char 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;  registerAddr    1    2[BANK0 ] unsigned char 
  5946 ;;  ADXL345_GetR    2    0[BANK0 ] unsigned char [2]
  5947 ;;  ADXL345_GetR    1    3[BANK0 ] unsigned char 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      unsigned char 
  5950 ;; Registers used:
  5951 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5958 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5959 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;Total ram usage:        6 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    1
  5964 ;; This function calls:
  5965 ;;		i1_I2C_Read
  5966 ;;		i1_I2C_Write
  5967 ;;		i1_SPI_Read
  5968 ;; This function is called by:
  5969 ;;		_TMR0_CallBack
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           
  5974                           ;psect for function i1_ADXL345_GetRegisterValue
  5975  0278                     i1_ADXL345_GetRegisterValue:	
  5976                           
  5977                           ;incstack = 0
  5978                           ; Regs used in i1_ADXL345_GetRegisterValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5979                           ;i1ADXL345_GetRegisterValue@registerAddress stored from wreg
  5980  0278  0020               	movlb	0	; select bank0
  5981  0279  00C8               	movwf	i1ADXL345_GetRegisterValue@registerAddress
  5982                           
  5983                           ;ADXL345.c: 69: unsigned char dataBuffer[2] = {0, 0};
  5984  027A  082C               	movf	ADXL345_GetRegisterValue@F91+1,w
  5985  027B  00C7               	movwf	i1ADXL345_GetRegisterValue@dataBuffer+1
  5986  027C  082B               	movf	ADXL345_GetRegisterValue@F91,w
  5987  027D  00C6               	movwf	i1ADXL345_GetRegisterValue@dataBuffer
  5988                           
  5989                           ;ADXL345.c: 70: unsigned char registerValue = 0;
  5990  027E  01C9               	clrf	i1ADXL345_GetRegisterValue@registerValue
  5991                           
  5992                           ;ADXL345.c: 72: if(communicationType == 0)
  5993  027F  0831               	movf	_communicationType,w
  5994  0280  1D03               	btfss	3,2
  5995  0281  2A9A               	goto	i1l2261
  5996                           
  5997                           ;ADXL345.c: 73: {
  5998                           ;ADXL345.c: 74: dataBuffer[0] = (1 << 7) | registerAddress;
  5999  0282  0848               	movf	i1ADXL345_GetRegisterValue@registerAddress,w
  6000  0283  3880               	iorlw	128
  6001  0284  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  6002  0285  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  6003  0286  00C6               	movwf	i1ADXL345_GetRegisterValue@dataBuffer
  6004                           
  6005                           ;ADXL345.c: 75: dataBuffer[1] = 0;
  6006  0287  01C7               	clrf	i1ADXL345_GetRegisterValue@dataBuffer+1
  6007                           
  6008                           ;ADXL345.c: 76: SPI_Read(1, dataBuffer, 2);
  6009  0288  3046               	movlw	(low (i1ADXL345_GetRegisterValue@dataBuffer| 0))& (0+255)
  6010  0289  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  6011  028A  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  6012  028B  00F0               	movwf	i1SPI_Read@data
  6013  028C  3002               	movlw	2
  6014  028D  00FB               	movwf	??i1_ADXL345_GetRegisterValue+1
  6015  028E  087B               	movf	??i1_ADXL345_GetRegisterValue+1,w
  6016  028F  00F1               	movwf	i1SPI_Read@bytesNumber
  6017  0290  3001               	movlw	1
  6018  0291  3181  2138  3182   	fcall	i1_SPI_Read
  6019                           
  6020                           ;ADXL345.c: 77: registerValue = dataBuffer[1];
  6021  0294  0020               	movlb	0	; select bank0
  6022  0295  0847               	movf	i1ADXL345_GetRegisterValue@dataBuffer+1,w
  6023  0296  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  6024  0297  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  6025  0298  00C9               	movwf	i1ADXL345_GetRegisterValue@registerValue
  6026                           
  6027                           ;ADXL345.c: 78: }
  6028  0299  2AB0               	goto	i1l2263
  6029  029A                     i1l2261:	
  6030                           
  6031                           ;ADXL345.c: 79: else
  6032                           ;ADXL345.c: 80: {
  6033                           ;ADXL345.c: 81: I2C_Write(0x1D,
  6034                           ;ADXL345.c: 82: &registerAddress,
  6035                           ;ADXL345.c: 83: 1,
  6036                           ;ADXL345.c: 84: 0);
  6037  029A  3048               	movlw	(low (i1ADXL345_GetRegisterValue@registerAddress| 0))& (0+255)
  6038  029B  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  6039  029C  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  6040  029D  00F0               	movwf	i1I2C_Write@dataBuffer
  6041  029E  01F1               	clrf	i1I2C_Write@bytesNumber
  6042  029F  0AF1               	incf	i1I2C_Write@bytesNumber,f
  6043  02A0  01F2               	clrf	i1I2C_Write@stopBit
  6044  02A1  301D               	movlw	29
  6045  02A2  3182  223C  3182   	fcall	i1_I2C_Write
  6046                           
  6047                           ;ADXL345.c: 85: I2C_Read(0x1D,
  6048                           ;ADXL345.c: 86: &registerValue,
  6049                           ;ADXL345.c: 87: 1,
  6050                           ;ADXL345.c: 88: 1);
  6051  02A5  3049               	movlw	(low (i1ADXL345_GetRegisterValue@registerValue| 0))& (0+255)
  6052  02A6  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  6053  02A7  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  6054  02A8  00F0               	movwf	i1I2C_Read@dataBuffer
  6055  02A9  01F1               	clrf	i1I2C_Read@bytesNumber
  6056  02AA  0AF1               	incf	i1I2C_Read@bytesNumber,f
  6057  02AB  01F2               	clrf	i1I2C_Read@stopBit
  6058  02AC  0AF2               	incf	i1I2C_Read@stopBit,f
  6059  02AD  301D               	movlw	29
  6060  02AE  3180  20EA         	fcall	i1_I2C_Read
  6061  02B0                     i1l2263:	
  6062                           
  6063                           ;ADXL345.c: 89: }
  6064                           ;ADXL345.c: 91: return registerValue;
  6065  02B0  0020               	movlb	0	; select bank0
  6066  02B1  0849               	movf	i1ADXL345_GetRegisterValue@registerValue,w
  6067  02B2  0008               	return
  6068  02B3                     __end_ofi1_ADXL345_GetRegisterValue:	
  6069                           
  6070                           	psect	text17
  6071  0138                     __ptext17:	
  6072 ;; *************** function i1_SPI_Read *****************
  6073 ;; Defined at:
  6074 ;;		line 261 in file "Communication.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  slaveDeviceI    1    wreg     unsigned char 
  6077 ;;  data            1    0[COMMON] PTR unsigned char 
  6078 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@dataBuffer(2), 
  6079 ;;  bytesNumber     1    1[COMMON] unsigned char 
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;  slaveDeviceI    1    8[COMMON] unsigned char 
  6082 ;;  SPI_Read        4    4[COMMON] unsigned char [4]
  6083 ;;  SPI_Read        1    9[COMMON] unsigned char 
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  1    wreg      unsigned char 
  6086 ;; Registers used:
  6087 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6094 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6095 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6096 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6097 ;;Total ram usage:       10 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		i1_ADXL345_GetRegisterValue
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           
  6107                           ;psect for function i1_SPI_Read
  6108  0138                     i1_SPI_Read:	
  6109                           
  6110                           ;incstack = 0
  6111                           ; Regs used in i1_SPI_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6112                           ;i1SPI_Read@slaveDeviceId stored from wreg
  6113  0138  00F8               	movwf	i1SPI_Read@slaveDeviceId
  6114                           
  6115                           ;Communication.c: 265: unsigned char byte = 0;
  6116  0139  01F9               	clrf	i1SPI_Read@byte
  6117                           
  6118                           ;Communication.c: 266: unsigned char writeBuffer[4] = {0, 0, 0, 0};
  6119  013A  0020               	movlb	0	; select bank0
  6120  013B  0828               	movf	SPI_Read@F12027+3,w
  6121  013C  00F7               	movwf	i1SPI_Read@writeBuffer+3
  6122  013D  0827               	movf	SPI_Read@F12027+2,w
  6123  013E  00F6               	movwf	i1SPI_Read@writeBuffer+2
  6124  013F  0826               	movf	SPI_Read@F12027+1,w
  6125  0140  00F5               	movwf	i1SPI_Read@writeBuffer+1
  6126  0141  0825               	movf	SPI_Read@F12027,w
  6127  0142  00F4               	movwf	i1SPI_Read@writeBuffer
  6128                           
  6129                           ;Communication.c: 269: SSP1CON1bits.WCOL = 0;
  6130  0143  0024               	movlb	4	; select bank4
  6131  0144  1395               	bcf	21,7	;volatile
  6132                           
  6133                           ;Communication.c: 271: for(byte = 0; byte < bytesNumber; byte++)
  6134  0145  01F9               	clrf	i1SPI_Read@byte
  6135  0146                     i1l2147:	
  6136  0146  0871               	movf	i1SPI_Read@bytesNumber,w
  6137  0147  0279               	subwf	i1SPI_Read@byte,w
  6138  0148  1803               	btfsc	3,0
  6139  0149  295D               	goto	i1l2149
  6140                           
  6141                           ;Communication.c: 272: {
  6142                           ;Communication.c: 273: writeBuffer[byte] = data[byte];
  6143  014A  0879               	movf	i1SPI_Read@byte,w
  6144  014B  0770               	addwf	i1SPI_Read@data,w
  6145  014C  00F2               	movwf	??i1_SPI_Read
  6146  014D  0872               	movf	??i1_SPI_Read,w
  6147  014E  0086               	movwf	6
  6148  014F  0187               	clrf	7
  6149  0150  0801               	movf	1,w
  6150  0151  00F3               	movwf	??i1_SPI_Read+1
  6151  0152  0879               	movf	i1SPI_Read@byte,w
  6152  0153  3E74               	addlw	(low (i1SPI_Read@writeBuffer| 0))& (0+255)
  6153  0154  0086               	movwf	6
  6154  0155  0187               	clrf	7
  6155  0156  0873               	movf	??i1_SPI_Read+1,w
  6156  0157  0081               	movwf	1
  6157  0158  3001               	movlw	1
  6158  0159  00F2               	movwf	??i1_SPI_Read
  6159  015A  0872               	movf	??i1_SPI_Read,w
  6160  015B  07F9               	addwf	i1SPI_Read@byte,f
  6161  015C  2946               	goto	i1l2147
  6162  015D                     i1l2149:	
  6163                           
  6164                           ;Communication.c: 274: }
  6165                           ;Communication.c: 275: if(slaveDeviceId == 1)
  6166  015D  0378               	decf	i1SPI_Read@slaveDeviceId,w
  6167  015E  1D03               	btfss	3,2
  6168  015F  2962               	goto	i1l2151
  6169                           
  6170                           ;Communication.c: 276: {
  6171                           ;Communication.c: 277: do { LATCbits.LATC6 = 0; } while(0);
  6172  0160  0022               	movlb	2	; select bank2
  6173  0161  130E               	bcf	14,6	;volatile
  6174  0162                     i1l2151:	
  6175                           
  6176                           ;Communication.c: 278: }
  6177                           ;Communication.c: 279: for(byte = 0; byte < bytesNumber; byte++)
  6178  0162  01F9               	clrf	i1SPI_Read@byte
  6179  0163                     i1l2159:	
  6180  0163  0871               	movf	i1SPI_Read@bytesNumber,w
  6181  0164  0279               	subwf	i1SPI_Read@byte,w
  6182  0165  1803               	btfsc	3,0
  6183  0166  297F               	goto	i1l2161
  6184                           
  6185                           ;Communication.c: 280: {
  6186                           ;Communication.c: 281: SSP1BUF = writeBuffer[byte];
  6187  0167  0879               	movf	i1SPI_Read@byte,w
  6188  0168  3E74               	addlw	(low (i1SPI_Read@writeBuffer| 0))& (0+255)
  6189  0169  0086               	movwf	6
  6190  016A  0187               	clrf	7
  6191  016B  0801               	movf	1,w
  6192  016C  0024               	movlb	4	; select bank4
  6193  016D  0091               	movwf	17	;volatile
  6194  016E                     i1l703:	
  6195                           ;Communication.c: 282: while(SSP1STATbits.BF == 0);
  6196                           
  6197  016E  1C14               	btfss	20,0	;volatile
  6198  016F  296E               	goto	i1l703
  6199                           
  6200                           ;Communication.c: 283: data[byte] = SSP1BUF;
  6201  0170  0811               	movf	17,w	;volatile
  6202  0171  00F2               	movwf	??i1_SPI_Read
  6203  0172  0879               	movf	i1SPI_Read@byte,w
  6204  0173  0770               	addwf	i1SPI_Read@data,w
  6205  0174  00F3               	movwf	??i1_SPI_Read+1
  6206  0175  0873               	movf	??i1_SPI_Read+1,w
  6207  0176  0086               	movwf	6
  6208  0177  0187               	clrf	7
  6209  0178  0872               	movf	??i1_SPI_Read,w
  6210  0179  0081               	movwf	1
  6211  017A  3001               	movlw	1
  6212  017B  00F2               	movwf	??i1_SPI_Read
  6213  017C  0872               	movf	??i1_SPI_Read,w
  6214  017D  07F9               	addwf	i1SPI_Read@byte,f
  6215  017E  2963               	goto	i1l2159
  6216  017F                     i1l2161:	
  6217                           
  6218                           ;Communication.c: 284: }
  6219                           ;Communication.c: 286: if(slaveDeviceId == 1)
  6220  017F  0378               	decf	i1SPI_Read@slaveDeviceId,w
  6221  0180  1D03               	btfss	3,2
  6222  0181  0008               	return
  6223                           
  6224                           ;Communication.c: 287: {
  6225                           ;Communication.c: 288: do { LATCbits.LATC6 = 1; } while(0);
  6226  0182  0022               	movlb	2	; select bank2
  6227  0183  170E               	bsf	14,6	;volatile
  6228  0184  0008               	return
  6229  0185                     __end_ofi1_SPI_Read:	
  6230                           ;Communication.c: 289: }
  6231                           ;Communication.c: 291: return bytesNumber;
  6232                           ;	Return value of i1_SPI_Read is never used
  6233                           
  6234                           
  6235                           	psect	text18
  6236  023C                     __ptext18:	
  6237 ;; *************** function i1_I2C_Write *****************
  6238 ;; Defined at:
  6239 ;;		line 100 in file "Communication.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;  slaveAddress    1    wreg     unsigned char 
  6242 ;;  dataBuffer      1    0[COMMON] PTR unsigned char 
  6243 ;;		 -> ADXL345_GetXyz@firstRegAddress(1), ADXL345_SetRegisterValue@dataBuffer(2), ADXL345_GetRegisterValue@registerAddr
      +ess(1), 
  6244 ;;  bytesNumber     1    1[COMMON] unsigned char 
  6245 ;;  stopBit         1    2[COMMON] unsigned char 
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  slaveAddress    1    5[COMMON] unsigned char 
  6248 ;;  I2C_Write       1    7[COMMON] unsigned char 
  6249 ;;  I2C_Write       1    6[COMMON] unsigned char 
  6250 ;;  I2C_Write       1    4[COMMON] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      unsigned char 
  6253 ;; Registers used:
  6254 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6260 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6264 ;;Total ram usage:        8 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; This function calls:
  6267 ;;		Nothing
  6268 ;; This function is called by:
  6269 ;;		i1_ADXL345_GetRegisterValue
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273                           
  6274                           ;psect for function i1_I2C_Write
  6275  023C                     i1_I2C_Write:	
  6276                           
  6277                           ;incstack = 0
  6278                           ; Regs used in i1_I2C_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  6279                           ;i1I2C_Write@slaveAddress stored from wreg
  6280  023C  00F5               	movwf	i1I2C_Write@slaveAddress
  6281                           
  6282                           ;Communication.c: 105: unsigned char status = 0;
  6283  023D  01F4               	clrf	i1I2C_Write@status
  6284                           
  6285                           ;Communication.c: 106: unsigned char acknowledge = 0;
  6286  023E  01F6               	clrf	i1I2C_Write@acknowledge
  6287                           
  6288                           ;Communication.c: 107: unsigned char byte = 0;
  6289  023F  01F7               	clrf	i1I2C_Write@byte
  6290                           
  6291                           ;Communication.c: 110: SSP1CON2bits.SEN = 1;
  6292  0240  0024               	movlb	4	; select bank4
  6293  0241  1416               	bsf	22,0	;volatile
  6294  0242                     i1l642:	
  6295                           ;Communication.c: 111: while(SSP1CON2bits.SEN);
  6296                           
  6297  0242  1816               	btfsc	22,0	;volatile
  6298  0243  2A42               	goto	i1l642
  6299                           
  6300                           ;Communication.c: 112: PIR1bits.SSP1IF = 0;
  6301  0244  0020               	movlb	0	; select bank0
  6302  0245  1190               	bcf	16,3	;volatile
  6303                           
  6304                           ;Communication.c: 114: SSP1BUF = slaveAddress << 1;
  6305  0246  3575               	lslf	i1I2C_Write@slaveAddress,w
  6306  0247  0024               	movlb	4	; select bank4
  6307  0248  0091               	movwf	17	;volatile
  6308  0249                     i1l645:	
  6309                           ;Communication.c: 115: while(!PIR1bits.SSP1IF);
  6310                           
  6311  0249  0020               	movlb	0	; select bank0
  6312  024A  1D90               	btfss	16,3	;volatile
  6313  024B  2A49               	goto	i1l645
  6314                           
  6315                           ;Communication.c: 116: PIR1bits.SSP1IF = 0;
  6316  024C  1190               	bcf	16,3	;volatile
  6317                           
  6318                           ;Communication.c: 117: acknowledge = SSP1CON2bits.ACKSTAT;
  6319  024D  3000               	movlw	0
  6320  024E  0024               	movlb	4	; select bank4
  6321  024F  1B16               	btfsc	22,6	;volatile
  6322  0250  3001               	movlw	1
  6323  0251  00F6               	movwf	i1I2C_Write@acknowledge
  6324                           
  6325                           ;Communication.c: 118: if (acknowledge == 0)
  6326  0252  0876               	movf	i1I2C_Write@acknowledge,w
  6327  0253  1D03               	btfss	3,2
  6328  0254  2A6C               	goto	i1l2099
  6329                           
  6330                           ;Communication.c: 119: {
  6331                           ;Communication.c: 120: for(byte = 0; byte < bytesNumber; byte++)
  6332  0255  01F7               	clrf	i1I2C_Write@byte
  6333  0256                     i1l2097:	
  6334  0256  0871               	movf	i1I2C_Write@bytesNumber,w
  6335  0257  0277               	subwf	i1I2C_Write@byte,w
  6336  0258  1803               	btfsc	3,0
  6337  0259  2A70               	goto	i1l2101
  6338                           
  6339                           ;Communication.c: 121: {
  6340                           ;Communication.c: 122: SSP1BUF = dataBuffer[byte];
  6341  025A  0877               	movf	i1I2C_Write@byte,w
  6342  025B  0770               	addwf	i1I2C_Write@dataBuffer,w
  6343  025C  00F3               	movwf	??i1_I2C_Write
  6344  025D  0873               	movf	??i1_I2C_Write,w
  6345  025E  0086               	movwf	6
  6346  025F  0187               	clrf	7
  6347  0260  0801               	movf	1,w
  6348  0261  0024               	movlb	4	; select bank4
  6349  0262  0091               	movwf	17	;volatile
  6350  0263                     i1l651:	
  6351                           ;Communication.c: 123: while(!PIR1bits.SSP1IF);
  6352                           
  6353  0263  0020               	movlb	0	; select bank0
  6354  0264  1D90               	btfss	16,3	;volatile
  6355  0265  2A63               	goto	i1l651
  6356                           
  6357                           ;Communication.c: 124: PIR1bits.SSP1IF = 0;
  6358  0266  1190               	bcf	16,3	;volatile
  6359  0267  3001               	movlw	1
  6360  0268  00F3               	movwf	??i1_I2C_Write
  6361  0269  0873               	movf	??i1_I2C_Write,w
  6362  026A  07F7               	addwf	i1I2C_Write@byte,f
  6363  026B  2A56               	goto	i1l2097
  6364  026C                     i1l2099:	
  6365                           ;Communication.c: 125: }
  6366                           ;Communication.c: 126: }
  6367                           
  6368                           
  6369                           ;Communication.c: 127: else
  6370                           ;Communication.c: 128: {
  6371                           ;Communication.c: 129: status = 0xFF;
  6372  026C  30FF               	movlw	255
  6373  026D  00F3               	movwf	??i1_I2C_Write
  6374  026E  0873               	movf	??i1_I2C_Write,w
  6375  026F  00F4               	movwf	i1I2C_Write@status
  6376  0270                     i1l2101:	
  6377                           
  6378                           ;Communication.c: 130: }
  6379                           ;Communication.c: 131: if(stopBit)
  6380  0270  0872               	movf	i1I2C_Write@stopBit,w
  6381  0271  1903               	btfsc	3,2
  6382  0272  0008               	return
  6383                           
  6384                           ;Communication.c: 132: {
  6385                           ;Communication.c: 133: SSP1CON2bits.PEN = 1;
  6386  0273  0024               	movlb	4	; select bank4
  6387  0274  1516               	bsf	22,2	;volatile
  6388  0275                     i1l657:	
  6389                           ;Communication.c: 134: while(SSP1CON2bits.PEN);
  6390                           
  6391  0275  1D16               	btfss	22,2	;volatile
  6392  0276  0008               	return
  6393  0277  2A75               	goto	i1l657
  6394  0278                     __end_ofi1_I2C_Write:	
  6395                           ;Communication.c: 135: }
  6396                           ;Communication.c: 137: return status;
  6397                           ;	Return value of i1_I2C_Write is never used
  6398                           
  6399                           
  6400                           	psect	text19
  6401  00EA                     __ptext19:	
  6402 ;; *************** function i1_I2C_Read *****************
  6403 ;; Defined at:
  6404 ;;		line 152 in file "Communication.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  slaveAddress    1    wreg     unsigned char 
  6407 ;;  dataBuffer      1    0[COMMON] PTR unsigned char 
  6408 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@registerValue(1), 
  6409 ;;  bytesNumber     1    1[COMMON] unsigned char 
  6410 ;;  stopBit         1    2[COMMON] unsigned char 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  slaveAddress    1    6[COMMON] unsigned char 
  6413 ;;  I2C_Read        1    8[COMMON] unsigned char 
  6414 ;;  I2C_Read        1    7[COMMON] unsigned char 
  6415 ;;  I2C_Read        1    5[COMMON] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      unsigned char 
  6418 ;; Registers used:
  6419 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6425 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;Total ram usage:        9 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; This function calls:
  6432 ;;		Nothing
  6433 ;; This function is called by:
  6434 ;;		i1_ADXL345_GetRegisterValue
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           
  6439                           ;psect for function i1_I2C_Read
  6440  00EA                     i1_I2C_Read:	
  6441                           
  6442                           ;incstack = 0
  6443                           ; Regs used in i1_I2C_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6444                           ;i1I2C_Read@slaveAddress stored from wreg
  6445  00EA  00F6               	movwf	i1I2C_Read@slaveAddress
  6446                           
  6447                           ;Communication.c: 157: unsigned char status = bytesNumber;
  6448  00EB  0871               	movf	i1I2C_Read@bytesNumber,w
  6449  00EC  00F3               	movwf	??i1_I2C_Read
  6450  00ED  0873               	movf	??i1_I2C_Read,w
  6451  00EE  00F5               	movwf	i1I2C_Read@status
  6452                           
  6453                           ;Communication.c: 158: unsigned char acknowledge = 0;
  6454  00EF  01F7               	clrf	i1I2C_Read@acknowledge
  6455                           
  6456                           ;Communication.c: 159: unsigned char byte = 0;
  6457  00F0  01F8               	clrf	i1I2C_Read@byte
  6458                           
  6459                           ;Communication.c: 161: SSP1CON2bits.RSEN = 1;
  6460  00F1  0024               	movlb	4	; select bank4
  6461  00F2  1496               	bsf	22,1	;volatile
  6462  00F3                     i1l663:	
  6463                           ;Communication.c: 162: while(SSP1CON2bits.RSEN);
  6464                           
  6465  00F3  1896               	btfsc	22,1	;volatile
  6466  00F4  28F3               	goto	i1l663
  6467                           
  6468                           ;Communication.c: 163: PIR1bits.SSP1IF = 0;
  6469  00F5  0020               	movlb	0	; select bank0
  6470  00F6  1190               	bcf	16,3	;volatile
  6471                           
  6472                           ;Communication.c: 165: SSP1BUF = (slaveAddress << 1) + 1;
  6473  00F7  1403               	setc
  6474  00F8  0D76               	rlf	i1I2C_Read@slaveAddress,w
  6475  00F9  0024               	movlb	4	; select bank4
  6476  00FA  0091               	movwf	17	;volatile
  6477  00FB                     i1l666:	
  6478                           ;Communication.c: 166: while(!PIR1bits.SSP1IF);
  6479                           
  6480  00FB  0020               	movlb	0	; select bank0
  6481  00FC  1D90               	btfss	16,3	;volatile
  6482  00FD  28FB               	goto	i1l666
  6483                           
  6484                           ;Communication.c: 167: PIR1bits.SSP1IF = 0;
  6485  00FE  1190               	bcf	16,3	;volatile
  6486                           
  6487                           ;Communication.c: 168: acknowledge = SSP1CON2bits.ACKSTAT;
  6488  00FF  3000               	movlw	0
  6489  0100  0024               	movlb	4	; select bank4
  6490  0101  1B16               	btfsc	22,6	;volatile
  6491  0102  3001               	movlw	1
  6492  0103  00F7               	movwf	i1I2C_Read@acknowledge
  6493                           
  6494                           ;Communication.c: 169: if (acknowledge == 0)
  6495  0104  0877               	movf	i1I2C_Read@acknowledge,w
  6496  0105  1D03               	btfss	3,2
  6497  0106  2930               	goto	i1l2131
  6498                           
  6499                           ;Communication.c: 170: {
  6500                           ;Communication.c: 171: for(byte = 0; byte < bytesNumber; byte++)
  6501  0107  01F8               	clrf	i1I2C_Read@byte
  6502  0108                     i1l2129:	
  6503  0108  0871               	movf	i1I2C_Read@bytesNumber,w
  6504  0109  0278               	subwf	i1I2C_Read@byte,w
  6505  010A  1803               	btfsc	3,0
  6506  010B  2934               	goto	i1l2133
  6507                           
  6508                           ;Communication.c: 172: {
  6509                           ;Communication.c: 173: SSP1CON2bits.RCEN = 1;
  6510  010C  1596               	bsf	22,3	;volatile
  6511  010D                     i1l672:	
  6512                           ;Communication.c: 174: while(!SSP1STATbits.BF);
  6513                           
  6514  010D  1C14               	btfss	20,0	;volatile
  6515  010E  290D               	goto	i1l672
  6516                           
  6517                           ;Communication.c: 175: dataBuffer[byte] = SSPBUF;
  6518  010F  0811               	movf	17,w	;volatile
  6519  0110  00F3               	movwf	??i1_I2C_Read
  6520  0111  0878               	movf	i1I2C_Read@byte,w
  6521  0112  0770               	addwf	i1I2C_Read@dataBuffer,w
  6522  0113  00F4               	movwf	??i1_I2C_Read+1
  6523  0114  0874               	movf	??i1_I2C_Read+1,w
  6524  0115  0086               	movwf	6
  6525  0116  0187               	clrf	7
  6526  0117  0873               	movf	??i1_I2C_Read,w
  6527  0118  0081               	movwf	1
  6528                           
  6529                           ;Communication.c: 176: if(byte == (bytesNumber - 1))
  6530  0119  0871               	movf	i1I2C_Read@bytesNumber,w
  6531  011A  3EFF               	addlw	255
  6532  011B  00F3               	movwf	??i1_I2C_Read
  6533  011C  30FF               	movlw	255
  6534  011D  1803               	skipnc
  6535  011E  3000               	movlw	0
  6536  011F  00F4               	movwf	??i1_I2C_Read+1
  6537  0120  0878               	movf	i1I2C_Read@byte,w
  6538  0121  0673               	xorwf	??i1_I2C_Read,w
  6539  0122  0474               	iorwf	??i1_I2C_Read+1,w
  6540  0123  1D03               	skipz
  6541  0124  2927               	goto	i1l675
  6542                           
  6543                           ;Communication.c: 177: {
  6544                           ;Communication.c: 178: SSP1CON2bits.ACKDT = 1;
  6545  0125  1696               	bsf	22,5	;volatile
  6546                           
  6547                           ;Communication.c: 179: }
  6548  0126  2928               	goto	i1l676
  6549  0127                     i1l675:	
  6550                           
  6551                           ;Communication.c: 180: else
  6552                           ;Communication.c: 181: {
  6553                           ;Communication.c: 182: SSP1CON2bits.ACKDT = 0;
  6554  0127  1296               	bcf	22,5	;volatile
  6555  0128                     i1l676:	
  6556                           
  6557                           ;Communication.c: 183: }
  6558                           ;Communication.c: 184: SSP1CON2bits.ACKEN = 1;
  6559  0128  1616               	bsf	22,4	;volatile
  6560  0129                     i1l677:	
  6561                           ;Communication.c: 185: while(SSP1CON2bits.ACKEN);
  6562                           
  6563  0129  1A16               	btfsc	22,4	;volatile
  6564  012A  2929               	goto	i1l677
  6565  012B  3001               	movlw	1
  6566  012C  00F3               	movwf	??i1_I2C_Read
  6567  012D  0873               	movf	??i1_I2C_Read,w
  6568  012E  07F8               	addwf	i1I2C_Read@byte,f
  6569  012F  2908               	goto	i1l2129
  6570  0130                     i1l2131:	
  6571                           ;Communication.c: 186: }
  6572                           ;Communication.c: 187: }
  6573                           
  6574                           
  6575                           ;Communication.c: 188: else
  6576                           ;Communication.c: 189: {
  6577                           ;Communication.c: 190: status = 0xFF;
  6578  0130  30FF               	movlw	255
  6579  0131  00F3               	movwf	??i1_I2C_Read
  6580  0132  0873               	movf	??i1_I2C_Read,w
  6581  0133  00F5               	movwf	i1I2C_Read@status
  6582  0134                     i1l2133:	
  6583                           
  6584                           ;Communication.c: 191: }
  6585                           ;Communication.c: 192: SSP1CON2bits.PEN = 1;
  6586  0134  1516               	bsf	22,2	;volatile
  6587  0135                     i1l682:	
  6588                           ;Communication.c: 193: while(SSP1CON2bits.PEN);
  6589                           
  6590  0135  1D16               	btfss	22,2	;volatile
  6591  0136  0008               	return
  6592  0137  2935               	goto	i1l682
  6593  0138                     __end_ofi1_I2C_Read:	
  6594                           ;Communication.c: 195: return status;
  6595                           ;	Return value of i1_I2C_Read is never used
  6596                           
  6597                           
  6598                           	psect	text20
  6599  03BA                     __ptext20:	
  6600 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6601 ;; Defined at:
  6602 ;;		line 153 in file "tmr0.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;		None
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;		None
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  1    wreg      void 
  6609 ;; Registers used:
  6610 ;;		None
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6620 ;;Total ram usage:        0 bytes
  6621 ;; Hardware stack levels used:    1
  6622 ;; This function calls:
  6623 ;;		Nothing
  6624 ;; This function is called by:
  6625 ;;		_TMR0_Initialize
  6626 ;;		_TMR0_CallBack
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           
  6631                           ;psect for function _TMR0_DefaultInterruptHandler
  6632  03BA                     _TMR0_DefaultInterruptHandler:	
  6633                           
  6634                           ;incstack = 0
  6635                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6636  03BA  0008               	return
  6637  03BB                     __end_of_TMR0_DefaultInterruptHandler:	
  6638                           
  6639                           	psect	text21
  6640  03AC                     __ptext21:	
  6641 ;; *************** function _PIN_MANAGER_IOC *****************
  6642 ;; Defined at:
  6643 ;;		line 112 in file "pin_manager.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;		None
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;		None
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      void 
  6650 ;; Registers used:
  6651 ;;		status,2, status,0, pclath, cstack
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6661 ;;Total ram usage:        0 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; Hardware stack levels required when called:    1
  6664 ;; This function calls:
  6665 ;;		_IOCAF2_ISR
  6666 ;; This function is called by:
  6667 ;;		_INTERRUPT_InterruptManager
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           
  6672                           ;psect for function _PIN_MANAGER_IOC
  6673  03AC                     _PIN_MANAGER_IOC:	
  6674                           
  6675                           ;pin_manager.c: 115: if(IOCAFbits.IOCAF2 == 1)
  6676                           
  6677                           ;incstack = 0
  6678                           ; Regs used in _PIN_MANAGER_IOC: [status,2+status,0+pclath+cstack]
  6679  03AC  0027               	movlb	7	; select bank7
  6680  03AD  1D13               	btfss	19,2	;volatile
  6681  03AE  0008               	return
  6682                           
  6683                           ;pin_manager.c: 116: {
  6684                           ;pin_manager.c: 117: IOCAF2_ISR();
  6685  03AF  3183  23B2         	fcall	_IOCAF2_ISR
  6686  03B1  0008               	return
  6687  03B2                     __end_of_PIN_MANAGER_IOC:	
  6688                           
  6689                           	psect	text22
  6690  03B2                     __ptext22:	
  6691 ;; *************** function _IOCAF2_ISR *****************
  6692 ;; Defined at:
  6693 ;;		line 124 in file "pin_manager.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;		None
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;		None
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  1    wreg      void 
  6700 ;; Registers used:
  6701 ;;		None
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;Total ram usage:        0 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; This function calls:
  6714 ;;		Nothing
  6715 ;; This function is called by:
  6716 ;;		_PIN_MANAGER_IOC
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           
  6721                           ;psect for function _IOCAF2_ISR
  6722  03B2                     _IOCAF2_ISR:	
  6723                           
  6724                           ;incstack = 0
  6725                           ; Regs used in _IOCAF2_ISR: []
  6726                           ;pin_manager.c: 127: do { LATAbits.LATA5 = 1; } while(0);
  6727  03B2  0022               	movlb	2	; select bank2
  6728  03B3  168C               	bsf	12,5	;volatile
  6729                           
  6730                           ;pin_manager.c: 128: IOCAFbits.IOCAF2 = 0;
  6731  03B4  0027               	movlb	7	; select bank7
  6732  03B5  1113               	bcf	19,2	;volatile
  6733  03B6  0008               	return
  6734  03B7                     __end_of_IOCAF2_ISR:	
  6735                           
  6736                           	psect	text23
  6737  03B7                     __ptext23:	
  6738 ;; *************** function _I2C_BusCollisionISR *****************
  6739 ;; Defined at:
  6740 ;;		line 728 in file "i2c.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;		None
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;		None
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      void 
  6747 ;; Registers used:
  6748 ;;		None
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;Total ram usage:        0 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; This function calls:
  6761 ;;		Nothing
  6762 ;; This function is called by:
  6763 ;;		_INTERRUPT_InterruptManager
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           
  6768                           ;psect for function _I2C_BusCollisionISR
  6769  03B7                     _I2C_BusCollisionISR:	
  6770                           
  6771                           ;i2c.c: 731: PIR2bits.BCL1IF = 0;
  6772                           
  6773                           ;incstack = 0
  6774                           ; Regs used in _I2C_BusCollisionISR: []
  6775  03B7  0020               	movlb	0	; select bank0
  6776  03B8  1191               	bcf	17,3	;volatile
  6777  03B9  0008               	return
  6778  03BA                     __end_of_I2C_BusCollisionISR:	
  6779  007E                     btemp	set	126	;btemp
  6780  007E                     int$flags	set	126
  6781  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         45
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      66
    BANK1            80     14      21
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_tr_queue.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    SPI_Read@data	PTR unsigned char  size(1) Largest target is 7
		 -> ADXL345_GetXyz@readBuffer(COMMON[7]), ADXL345_GetRegisterValue@dataBuffer(BANK0[2]), 

    I2C_Read@dataBuffer	PTR unsigned char  size(1) Largest target is 7
		 -> ADXL345_GetXyz@readBuffer(COMMON[7]), ADXL345_GetRegisterValue@registerValue(BANK0[1]), 

    I2C_Write@dataBuffer	PTR unsigned char  size(1) Largest target is 2
		 -> ADXL345_GetXyz@firstRegAddress(COMMON[1]), ADXL345_SetRegisterValue@dataBuffer(COMMON[2]), ADXL345_GetRegisterValue@registerAddress(BANK0[1]), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_object.pTrTail.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    F12099.pbuffer	PTR unsigned char  size(1) Largest target is 0

    F12094.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    S644$pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c_current.pbuffer	PTR unsigned char  size(1) Largest target is 0

    S656$pTrFlag	PTR enum E11987 size(1) Largest target is 0

    p_i2c_current.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    S656$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    p_i2c_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    p_i2c_current	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S667$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    i2c_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    S667$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    i2c_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_TMR0_CallBack
    _TMR0_CallBack->i1_ADXL345_GetRegisterValue
    i1_ADXL345_GetRegisterValue->i1_SPI_Read

Critical Paths under _main in BANK0

    _main->_ADXL345_Init
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _ADXL345_Init->_ADXL345_GetRegisterValue
    _ADXL345_GetRegisterValue->_SPI_Read

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_CallBack->i1_ADXL345_GetRegisterValue

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0    3468
                                             24 BANK0      1     1      0
                                              0 BANK1     14    14      0
                       _ADXL345_Init
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     108
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     108
                                              7 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     108
                                              5 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADXL345_Init                                         3     3      0    3336
                                             21 BANK0      3     3      0
           _ADXL345_GetRegisterValue
                           _I2C_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                            14     8      6     336
                                              5 BANK0     13     7      6
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                            11     7      4     120
                                              5 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (2) _ADXL345_GetRegisterValue                             6     6      0    2775
                                             15 BANK0      6     6      0
                           _I2C_Read
                          _I2C_Write
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                            10     8      2     785
                                              5 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            8     5      3     938
                                              5 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             9     6      3     769
                                              5 BANK0      9     6      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0    1065
                                              4 BANK0      1     1      0
                _I2C_BusCollisionISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0    1065
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        2     2      0    1065
                                             12 COMMON     2     2      0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
         i1_ADXL345_GetRegisterValue
 ---------------------------------------------------------------------------------
 (7) i1_ADXL345_GetRegisterValue                           6     6      0    1064
                                             10 COMMON     2     2      0
                                              0 BANK0      4     4      0
                         i1_I2C_Read
                        i1_I2C_Write
                         i1_SPI_Read
 ---------------------------------------------------------------------------------
 (8) i1_SPI_Read                                          10     8      2     372
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (8) i1_I2C_Write                                          8     5      3     245
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (8) i1_I2C_Read                                           9     6      3     289
                                              0 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF2_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCAF2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADXL345_Init
     _ADXL345_GetRegisterValue
       _I2C_Read
       _I2C_Write
       _SPI_Read
     _I2C_Init
     _SPI_Init
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _I2C_BusCollisionISR
   _PIN_MANAGER_IOC
     _IOCAF2_ISR
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       i1_ADXL345_GetRegisterValue *
         i1_I2C_Read
         i1_I2C_Write
         i1_SPI_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      42       5       82.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      E      15       7       26.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      65      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      65      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 02 18:34:14 2018

         __end_of_ADXL345_GetRegisterValue 023C               ??i1_ADXL345_GetRegisterValue 007A  
                    I2C_ISR@i2c_bytes_left 0033                                __CFG_CP$OFF 0000  
                       __size_of_I2C_Write 003E                                         l25 0368  
                          _timer0ReloadVal 0061                                ?i1_I2C_Read 0070  
                         SPI_Init@brgValue 0055                                __CFG_LVP$ON 0000  
                         SPI_Init@clockEdg 0050                                        l703 00D2  
                                      l642 018C                                        l546 01F8  
                                      l651 01AE                                        l645 0193  
                                      l663 004E                                        l672 006A  
                                      l657 01C0                                        l682 0097  
                                      l666 0056                                        l675 0086  
                                      l676 0088                                        l677 0089  
                         SPI_Init@clockPol 004F                       I2C_Read@slaveAddress 0051  
                             __CFG_BORV$LO 0000                                        wreg 0009  
                             __CFG_IESO$ON 0000                           SPI_Init@lsbFirst 0070  
                             __CFG_ZCD$OFF 0000                      __size_of_ADXL345_Init 003D  
                             ?i1_I2C_Write 0070                                       l3001 00C7  
                    i1SPI_Read@bytesNumber 0071                                       l3003 00E4  
                                     l3021 01A1                                       l3023 01B7  
                                     l3025 01BB                                       l3053 0064  
                                     l3055 0091                                       l3057 0095  
                                     l3085 0222                                       l3087 0239  
                                     l3193 01DD                                       l2991 00C0  
                                     l2993 00C5                                       l2989 00A9  
                        SPI_Init@clockFreq 004B                              main@i2cStatus 00AC  
                                     _LATA 010C                                       _LATB 010D  
                                     _LATC 010E                                main@counter 00AD  
                                     _TMR0 0015                                       _WPUA 020C  
                                     _WPUB 020D                                       _WPUC 020E  
                             __CFG_WRT$OFF 0000                              __CFG_FCMEN$ON 0000  
                                     _main 034C        __size_ofi1_ADXL345_GetRegisterValue 003B  
                         __end_of_I2C_Init 034C                           __end_of_I2C_Read 009A  
                                     fsr0h 0005                                       fsr1h 0007  
                                     indf0 0000                                       fsr0l 0004  
                                     indf1 0001                                       fsr1l 0006  
                                     btemp 007E                              __CFG_BOREN$ON 0000  
                                     start 002F                              __CFG_MCLRE$ON 0000  
                              ?i1_SPI_Read 0070                       i1I2C_Read@dataBuffer 0070  
                  __end_of_TMR0_Initialize 037E                              __CFG_PLLEN$ON 0000  
           ??_TMR0_DefaultInterruptHandler 0070             __size_of_OSCILLATOR_Initialize 0007  
                      __size_of_IOCAF2_ISR 0005              __end_of_OSCILLATOR_Initialize 03A0  
                                    ?_main 0070                              __CFG_WDTE$OFF 0000  
                            _i2c_trb_count 0037                                      i1l344 0010  
                                    i1l346 0017                                      i1l354 002A  
                                    i1l349 0023                                      i1l703 016E  
                                    i1l642 0242                                      i1l651 0263  
                                    i1l645 0249                                      i1l663 00F3  
                             _ADXL345_Init 01C3                                      i1l672 010D  
                                    i1l657 0275                                      i1l682 0135  
                                    i1l666 00FB                                      i1l675 0127  
                                    i1l676 0128                                      i1l677 0129  
                                    _TRISA 008C                                      _TRISB 008D  
                                    _TRISC 008E                                      _RXPPS 0E24  
        __size_of_TMR0_SetInterruptHandler 0006                  ?_TMR0_SetInterruptHandler 004B  
                         __end_of_TMR0_ISR 032C                    __end_of_PIN_MANAGER_IOC 03B2  
                         __end_of_SPI_Init 030B                           __end_of_SPI_Read 00EA  
                        __end_of_I2C_Write 01C3                                      pclath 000A  
                                    status 0003                                      wtemp0 007E  
                      __size_ofi1_I2C_Read 004E                               SPI_Read@data 004B  
                             SPI_Read@byte 0054                                 _i2c_object 0020  
                          __initialization 0031                         ADXL345_GetXyz@F107 00AE  
                             __end_of_main 0369                             __CFG_LPBOR$OFF 0000  
              ?_INTERRUPT_InterruptManager 0070                   _ADXL345_GetRegisterValue 0200  
                                   ??_main 005E                      i1I2C_Read@acknowledge 0077  
                                   _ANSELA 018C                                     _ANSELB 018D  
                                   _ANSELC 018E                                     _BORCON 0116  
                                   _RC1REG 0199                                     _RC1STA 019D  
                                   _RB4PPS 0E9C                                     _RB6PPS 0E9E  
                                   i1l2101 0270                                     i1l2131 0130  
                                   _RB7PPS 0E9F                                     i1l2133 0134  
                                   i1l2151 0162                                     i1l2129 0108  
                                   i1l2161 017F                                     _ODCONA 028C  
                                   _ODCONB 028D                                     i1l2147 0146  
                                   _ODCONC 028E                                     i1l2149 015D  
                                   i1l2261 029A                                     i1l2159 0163  
                                   i1l2263 02B0                                     i1l2097 0256  
                                   i1l2099 026C                        __size_ofi1_SPI_Read 004D  
                                   u205_20 0329                                     _OSCCON 0099  
                                   _SPBRGH 019C                                     _SPBRGL 019B  
                                   _TX1REG 019A                                     _TX1STA 019E  
                      SPI_Init@pbFrequency 0051                                     _SSPBUF 0211  
                    i1I2C_Write@dataBuffer 0070                             __CFG_PWRTE$OFF 0000  
       __end_ofi1_ADXL345_GetRegisterValue 02B3                 i1_ADXL345_GetRegisterValue 0278  
                           i1SPI_Read@data 0070                             i1SPI_Read@byte 0079  
                           __CFG_STVREN$ON 0000                           ?_TMR0_Initialize 0070  
                       ADXL345_Init@status 005D                                  ?_I2C_Init 004B  
                                ?_I2C_Read 004B                      __end_of_TMR0_CallBack 0390  
 TMR0_SetInterruptHandler@InterruptHandler 004B                           ?_PIN_MANAGER_IOC 0070  
                             ??_IOCAF2_ISR 0070                            I2C_Write@status 004F  
                        _SYSTEM_Initialize 0390                    __end_of__initialization 0040  
                     __size_ofi1_I2C_Write 003C                         ?_SYSTEM_Initialize 0070  
                           __pcstackCOMMON 0070                        ??_SYSTEM_Initialize 004E  
                                ?_TMR0_ISR 0070                                  ?_SPI_Init 004B  
                                ?_SPI_Read 004B                               ??i1_I2C_Read 0073  
                       __end_of_IOCAF2_ISR 03B7                          i1I2C_Read@stopBit 0072  
                               ??_I2C_Init 004F                             _OPTION_REGbits 0095  
                               ??_I2C_Read 004E                      TMR0_ISR@CountCallBack 002D  
                    TMR0_CallBack@DeviceID 007D                      i1SPI_Read@writeBuffer 0074  
                __end_of_SYSTEM_Initialize 0399                           I2C_Init@brgValue 0053  
                               __pbssBANK0 0020                                 __pbssBANK1 00AE  
             __size_of_I2C_BusCollisionISR 0003                         __end_ofi1_I2C_Read 0138  
                               __pmaintext 034C                               I2C_Read@byte 0053  
         __end_of_TMR0_SetInterruptHandler 03AC                             I2C_Init@status 0055  
                               ??_TMR0_ISR 007E                            __CFG_PPS1WAY$ON 0000  
                             ??i1_SPI_Read 0072                                 __pintentry 0004  
                       I2C_Read@dataBuffer 004B                             I2C_Read@status 0050  
                               ??_SPI_Init 0051                                 ??_SPI_Read 004D  
                          __CFG_WDTCCS$SWC 0000                                    _OSCTUNE 0098  
                    i1I2C_Read@bytesNumber 0071                                    _SSP1ADD 0212  
                                  _SSP1BUF 0211                         __end_ofi1_SPI_Read 0185  
                   i1I2C_Write@acknowledge 0076                                  _I2C_Write 0185  
                        _fullResolutionSet 002F                 ??_ADXL345_GetRegisterValue 0055  
                  i1I2C_Write@slaveAddress 0075                             i1I2C_Read@byte 0078  
                                  __ptext1 0390                                    __ptext2 0369  
                                  __ptext3 03A6                                    __ptext4 02B3  
                                  __ptext5 0399                                    __ptext6 01C3  
                                  __ptext7 02E5                                    __ptext8 032C  
                                  __ptext9 0200                      _OSCILLATOR_Initialize 0399  
                 ??_PIN_MANAGER_Initialize 004B                                  _IOCAFbits 0393  
                                _IOCANbits 0392                                  _IOCAPbits 0391  
               __size_of_SYSTEM_Initialize 0009                                    clrloop0 03A1  
                     end_of_initialization 0040                   ADXL345_Init@commProtocol 005C  
                     I2C_Write@acknowledge 0051                                 ?_I2C_Write 004B  
              ?i1_ADXL345_GetRegisterValue 0070                             SPI_Read@F12027 0025  
                 _TMR0_SetInterruptHandler 03A6                         I2C_ISR@i2c_address 0044  
                                _SSPDATPPS 0E21                                  _SSPCLKPPS 0E20  
                         I2C_Write@stopBit 004D                           __CFG_FOSC$INTOSC 0000  
                               main@AccelX 00A0                                 main@AccelY 00A2  
                               main@AccelZ 00A4                          __size_of_I2C_Init 0020  
                        __size_of_I2C_Read 0056    ADXL345_GetRegisterValue@registerAddress 0057  
i1ADXL345_GetRegisterValue@registerAddress 0048           I2C_ISR@i2c_10bit_address_restart 0032  
                      I2C_Init@pbFrequency 004F                             SPI_Init@status 0057  
                        _p_i2c_trb_current 0036                      I2C_Write@slaveAddress 0050  
                             _i2c_tr_queue 0041                          __size_of_TMR0_ISR 0021  
                   ?_OSCILLATOR_Initialize 0070                          __size_of_SPI_Init 0026  
                        __size_of_SPI_Read 0050                        _I2C_BusCollisionISR 03B7  
                      start_initialization 0031                   __size_of_TMR0_Initialize 0015  
          __size_of_PIN_MANAGER_Initialize 0032                                  _i2c_state 0038  
                            ??i1_I2C_Write 0073                        SPI_Read@bytesNumber 004C  
                              ??_I2C_Write 004E                       ?_I2C_BusCollisionISR 0070  
                 __size_of_PIN_MANAGER_IOC 0006                     i1I2C_Write@bytesNumber 0071  
                   __size_of_TMR0_CallBack 0012                    i1SPI_Read@slaveDeviceId 0078  
                            ?_ADXL345_Init 0070                          I2C_Init@clockFreq 004B  
                            _selectedRange 0030                                  ___latbits 0002  
                            __pcstackBANK0 0046                              __pcstackBANK1 00A0  
                         i1I2C_Read@status 0075                          _communicationType 0031  
                    ??_I2C_BusCollisionISR 0070                      _TMR0_InterruptHandler 005F  
                                __pnvBANK0 005F                        __end_ofi1_I2C_Write 0278  
                     I2C_Write@bytesNumber 004C                     _PIN_MANAGER_Initialize 02B3  
                       i1I2C_Write@stopBit 0072               ??_INTERRUPT_InterruptManager 004A  
                           ??_ADXL345_Init 005B                                   _BAUD1CON 019F  
                                 _I2C_Init 032C                                   _I2C_Read 0044  
                          I2C_Read@stopBit 004D                        I2C_Read@acknowledge 0052  
                            _TMR0_CallBack 037E                              _p_i2c_current 0035  
                        ??_TMR0_Initialize 004D                                   _LATAbits 010C  
                                 _LATCbits 010E                                  clear_ram0 03A0  
                      I2C_Write@dataBuffer 004B                                   _PIE1bits 0090  
                                 _PIE2bits 0091        __size_of_INTERRUPT_InterruptManager 002B  
               ??_TMR0_SetInterruptHandler 004D                                   _PIR1bits 0010  
                                 _PIR2bits 0011                       __CFG_WDTCPS$WDTCPS1F 0000  
                                 _SSP1CON1 0215                                   _SSP1CON3 0217  
                                 _TMR0_ISR 030B                        I2C_ISR@pi2c_buf_ptr 0034  
                                 _SSP1STAT 0214                          ??_PIN_MANAGER_IOC 0070  
                                 _SPI_Init 02E5                                   _SPI_Read 009A  
                    SPI_Read@slaveDeviceId 0053          __size_of_ADXL345_GetRegisterValue 003C  
                ?_ADXL345_GetRegisterValue 0070                             ?_TMR0_CallBack 0070  
                              i1_I2C_Write 023C         ADXL345_GetRegisterValue@dataBuffer 0058  
     i1ADXL345_GetRegisterValue@dataBuffer 0046                ADXL345_GetRegisterValue@F91 002B  
              ADXL345_SetRegisterValue@F96 0029                    ??_OSCILLATOR_Initialize 004B  
                            I2C_Write@byte 0052                                   __ptext10 009A  
                                 __ptext11 0185                                   __ptext20 03BA  
                                 __ptext12 0044                                   __ptext21 03AC  
                                 __ptext22 03B2                                   __ptext14 030B  
                                 __ptext23 03B7                                   __ptext15 037E  
                                 __ptext16 0278                                   __ptext17 0138  
                                 __ptext18 023C                                   __ptext19 00EA  
                      SPI_Read@writeBuffer 004F                          i1I2C_Write@status 0074  
                             _SSP1CON1bits 0215                               _SSP1CON2bits 0216  
                               _IOCAF2_ISR 03B2                              __size_of_main 001D  
                     __end_of_ADXL345_Init 0200       __end_of_TMR0_DefaultInterruptHandler 03BB  
    __size_of_TMR0_DefaultInterruptHandler 0001               _TMR0_DefaultInterruptHandler 03BA  
                     __CFG_WDTCWS$WDTCWSSW 0000                                 _RC1STAbits 019D  
                                 int$flags 007E         __end_of_INTERRUPT_InterruptManager 002F  
               _INTERRUPT_InterruptManager 0004                               _SSP1STATbits 0214  
                               i1_I2C_Read 00EA                                 _INTCONbits 000B  
                          ??_TMR0_CallBack 007C                        I2C_Read@bytesNumber 004C  
                                 intlevel1 0000                    ?_PIN_MANAGER_Initialize 0070  
                    I2C_MasterRead@trBlock 0039                          __CFG_CLKOUTEN$OFF 0000  
            ?_TMR0_DefaultInterruptHandler 0070      ADXL345_GetRegisterValue@registerValue 005A  
  i1ADXL345_GetRegisterValue@registerValue 0049                                 i1_SPI_Read 0138  
                   i1I2C_Read@slaveAddress 0076                     I2C_MasterWrite@trBlock 003D  
                               _OPTION_REG 0095                            i1I2C_Write@byte 0077  
                          _TMR0_Initialize 0369                             main@AccelXtemp 00A6  
                           main@AccelYtemp 00A8                             main@AccelZtemp 00AA  
              __end_of_I2C_BusCollisionISR 03BA                                ?_IOCAF2_ISR 0070  
           __end_of_PIN_MANAGER_Initialize 02E5                            _PIN_MANAGER_IOC 03AC  
