

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 04 15:05:21 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1619 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0113                     	;# 
   129  0114                     	;# 
   130  0115                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  0118                     	;# 
   134  0119                     	;# 
   135  011C                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  018E                     	;# 
   139  0191                     	;# 
   140  0191                     	;# 
   141  0192                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0194                     	;# 
   145  0195                     	;# 
   146  0196                     	;# 
   147  0197                     	;# 
   148  0199                     	;# 
   149  0199                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019A                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019D                     	;# 
   163  019D                     	;# 
   164  019D                     	;# 
   165  019E                     	;# 
   166  019E                     	;# 
   167  019E                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  020C                     	;# 
   174  020D                     	;# 
   175  020E                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  028C                     	;# 
   193  028D                     	;# 
   194  028E                     	;# 
   195  0291                     	;# 
   196  0291                     	;# 
   197  0292                     	;# 
   198  0293                     	;# 
   199  0294                     	;# 
   200  0298                     	;# 
   201  0298                     	;# 
   202  0299                     	;# 
   203  029A                     	;# 
   204  029B                     	;# 
   205  029E                     	;# 
   206  030C                     	;# 
   207  030D                     	;# 
   208  030E                     	;# 
   209  038C                     	;# 
   210  038D                     	;# 
   211  038E                     	;# 
   212  0391                     	;# 
   213  0392                     	;# 
   214  0393                     	;# 
   215  0394                     	;# 
   216  0395                     	;# 
   217  0396                     	;# 
   218  0397                     	;# 
   219  0398                     	;# 
   220  0399                     	;# 
   221  040E                     	;# 
   222  0413                     	;# 
   223  0413                     	;# 
   224  0414                     	;# 
   225  0414                     	;# 
   226  0415                     	;# 
   227  0416                     	;# 
   228  0417                     	;# 
   229  0418                     	;# 
   230  041A                     	;# 
   231  041A                     	;# 
   232  041B                     	;# 
   233  041B                     	;# 
   234  041C                     	;# 
   235  041D                     	;# 
   236  041E                     	;# 
   237  041F                     	;# 
   238  0493                     	;# 
   239  0494                     	;# 
   240  0495                     	;# 
   241  0496                     	;# 
   242  049A                     	;# 
   243  049B                     	;# 
   244  049C                     	;# 
   245  049D                     	;# 
   246  058C                     	;# 
   247  058C                     	;# 
   248  058D                     	;# 
   249  058E                     	;# 
   250  058E                     	;# 
   251  058F                     	;# 
   252  0590                     	;# 
   253  0590                     	;# 
   254  0591                     	;# 
   255  0592                     	;# 
   256  0592                     	;# 
   257  0593                     	;# 
   258  0594                     	;# 
   259  0594                     	;# 
   260  0595                     	;# 
   261  0596                     	;# 
   262  0596                     	;# 
   263  0597                     	;# 
   264  0598                     	;# 
   265  0599                     	;# 
   266  059A                     	;# 
   267  059B                     	;# 
   268  059B                     	;# 
   269  059C                     	;# 
   270  059D                     	;# 
   271  060C                     	;# 
   272  060C                     	;# 
   273  060D                     	;# 
   274  060E                     	;# 
   275  060F                     	;# 
   276  060F                     	;# 
   277  0610                     	;# 
   278  0611                     	;# 
   279  0612                     	;# 
   280  0613                     	;# 
   281  0614                     	;# 
   282  0617                     	;# 
   283  0618                     	;# 
   284  0619                     	;# 
   285  061A                     	;# 
   286  061B                     	;# 
   287  061C                     	;# 
   288  0691                     	;# 
   289  0692                     	;# 
   290  0693                     	;# 
   291  0694                     	;# 
   292  0695                     	;# 
   293  0696                     	;# 
   294  0697                     	;# 
   295  0699                     	;# 
   296  069A                     	;# 
   297  0711                     	;# 
   298  0712                     	;# 
   299  0713                     	;# 
   300  0714                     	;# 
   301  0715                     	;# 
   302  0718                     	;# 
   303  0718                     	;# 
   304  0719                     	;# 
   305  071A                     	;# 
   306  071A                     	;# 
   307  071B                     	;# 
   308  071C                     	;# 
   309  071D                     	;# 
   310  0791                     	;# 
   311  0791                     	;# 
   312  0792                     	;# 
   313  0793                     	;# 
   314  0793                     	;# 
   315  0794                     	;# 
   316  0795                     	;# 
   317  0795                     	;# 
   318  0796                     	;# 
   319  0797                     	;# 
   320  0797                     	;# 
   321  0798                     	;# 
   322  0799                     	;# 
   323  079A                     	;# 
   324  080C                     	;# 
   325  080C                     	;# 
   326  080D                     	;# 
   327  080E                     	;# 
   328  080E                     	;# 
   329  080F                     	;# 
   330  0810                     	;# 
   331  0810                     	;# 
   332  0811                     	;# 
   333  0812                     	;# 
   334  0812                     	;# 
   335  0813                     	;# 
   336  0814                     	;# 
   337  0815                     	;# 
   338  0816                     	;# 
   339  0817                     	;# 
   340  0818                     	;# 
   341  0819                     	;# 
   342  081A                     	;# 
   343  081A                     	;# 
   344  081B                     	;# 
   345  081C                     	;# 
   346  081C                     	;# 
   347  081D                     	;# 
   348  088C                     	;# 
   349  088D                     	;# 
   350  088E                     	;# 
   351  088F                     	;# 
   352  088F                     	;# 
   353  0890                     	;# 
   354  0891                     	;# 
   355  0892                     	;# 
   356  0893                     	;# 
   357  0893                     	;# 
   358  0894                     	;# 
   359  0895                     	;# 
   360  0896                     	;# 
   361  0897                     	;# 
   362  0897                     	;# 
   363  0898                     	;# 
   364  0899                     	;# 
   365  0D8C                     	;# 
   366  0D8C                     	;# 
   367  0D8D                     	;# 
   368  0D8E                     	;# 
   369  0D8F                     	;# 
   370  0D8F                     	;# 
   371  0D90                     	;# 
   372  0D91                     	;# 
   373  0D92                     	;# 
   374  0D92                     	;# 
   375  0D93                     	;# 
   376  0D94                     	;# 
   377  0D95                     	;# 
   378  0D95                     	;# 
   379  0D96                     	;# 
   380  0D97                     	;# 
   381  0D98                     	;# 
   382  0D99                     	;# 
   383  0D9A                     	;# 
   384  0D9B                     	;# 
   385  0D9C                     	;# 
   386  0D9D                     	;# 
   387  0D9E                     	;# 
   388  0D9E                     	;# 
   389  0D9F                     	;# 
   390  0DA0                     	;# 
   391  0DA1                     	;# 
   392  0DA1                     	;# 
   393  0DA2                     	;# 
   394  0DA3                     	;# 
   395  0DA4                     	;# 
   396  0DA4                     	;# 
   397  0DA5                     	;# 
   398  0DA6                     	;# 
   399  0DA7                     	;# 
   400  0DA7                     	;# 
   401  0DA8                     	;# 
   402  0DA9                     	;# 
   403  0DAA                     	;# 
   404  0DAB                     	;# 
   405  0DAC                     	;# 
   406  0DAD                     	;# 
   407  0DAE                     	;# 
   408  0DAF                     	;# 
   409  0E0F                     	;# 
   410  0E10                     	;# 
   411  0E11                     	;# 
   412  0E12                     	;# 
   413  0E13                     	;# 
   414  0E14                     	;# 
   415  0E15                     	;# 
   416  0E16                     	;# 
   417  0E17                     	;# 
   418  0E18                     	;# 
   419  0E19                     	;# 
   420  0E1A                     	;# 
   421  0E1B                     	;# 
   422  0E1C                     	;# 
   423  0E1D                     	;# 
   424  0E1E                     	;# 
   425  0E1F                     	;# 
   426  0E20                     	;# 
   427  0E21                     	;# 
   428  0E22                     	;# 
   429  0E23                     	;# 
   430  0E24                     	;# 
   431  0E25                     	;# 
   432  0E26                     	;# 
   433  0E27                     	;# 
   434  0E28                     	;# 
   435  0E29                     	;# 
   436  0E2A                     	;# 
   437  0E2B                     	;# 
   438  0E2C                     	;# 
   439  0E2D                     	;# 
   440  0E2E                     	;# 
   441  0E90                     	;# 
   442  0E91                     	;# 
   443  0E92                     	;# 
   444  0E94                     	;# 
   445  0E95                     	;# 
   446  0E9C                     	;# 
   447  0E9D                     	;# 
   448  0E9E                     	;# 
   449  0E9F                     	;# 
   450  0EA0                     	;# 
   451  0EA1                     	;# 
   452  0EA2                     	;# 
   453  0EA3                     	;# 
   454  0EA4                     	;# 
   455  0EA5                     	;# 
   456  0EA6                     	;# 
   457  0EA7                     	;# 
   458  0F0F                     	;# 
   459  0F10                     	;# 
   460  0F11                     	;# 
   461  0F12                     	;# 
   462  0F13                     	;# 
   463  0F14                     	;# 
   464  0F15                     	;# 
   465  0F16                     	;# 
   466  0F17                     	;# 
   467  0F18                     	;# 
   468  0F19                     	;# 
   469  0F1A                     	;# 
   470  0F1B                     	;# 
   471  0F1C                     	;# 
   472  0F1D                     	;# 
   473  0F1E                     	;# 
   474  0F1F                     	;# 
   475  0F20                     	;# 
   476  0F21                     	;# 
   477  0F22                     	;# 
   478  0F23                     	;# 
   479  0F24                     	;# 
   480  0F25                     	;# 
   481  0F26                     	;# 
   482  0F27                     	;# 
   483  0F28                     	;# 
   484  0F29                     	;# 
   485  0F2A                     	;# 
   486  0F2B                     	;# 
   487  0F2C                     	;# 
   488  0F2D                     	;# 
   489  0F2E                     	;# 
   490  0F2F                     	;# 
   491  0F30                     	;# 
   492  0F31                     	;# 
   493  0F32                     	;# 
   494  0F33                     	;# 
   495  0F34                     	;# 
   496  0F35                     	;# 
   497  0F36                     	;# 
   498  0F37                     	;# 
   499  0FE4                     	;# 
   500  0FE5                     	;# 
   501  0FE6                     	;# 
   502  0FE7                     	;# 
   503  0FE8                     	;# 
   504  0FE9                     	;# 
   505  0FEA                     	;# 
   506  0FEB                     	;# 
   507  0FED                     	;# 
   508  0FEE                     	;# 
   509  0FEF                     	;# 
   510  0000                     	;# 
   511  0001                     	;# 
   512  0002                     	;# 
   513  0003                     	;# 
   514  0004                     	;# 
   515  0005                     	;# 
   516  0006                     	;# 
   517  0007                     	;# 
   518  0008                     	;# 
   519  0009                     	;# 
   520  000A                     	;# 
   521  000B                     	;# 
   522  000C                     	;# 
   523  000D                     	;# 
   524  000E                     	;# 
   525  0010                     	;# 
   526  0011                     	;# 
   527  0012                     	;# 
   528  0013                     	;# 
   529  0014                     	;# 
   530  0015                     	;# 
   531  0016                     	;# 
   532  0016                     	;# 
   533  0017                     	;# 
   534  0018                     	;# 
   535  0019                     	;# 
   536  001A                     	;# 
   537  001A                     	;# 
   538  001B                     	;# 
   539  001B                     	;# 
   540  001C                     	;# 
   541  001D                     	;# 
   542  001E                     	;# 
   543  001F                     	;# 
   544  008C                     	;# 
   545  008D                     	;# 
   546  008E                     	;# 
   547  0090                     	;# 
   548  0091                     	;# 
   549  0092                     	;# 
   550  0093                     	;# 
   551  0094                     	;# 
   552  0095                     	;# 
   553  0096                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009A                     	;# 
   557  009B                     	;# 
   558  009B                     	;# 
   559  009C                     	;# 
   560  009D                     	;# 
   561  009E                     	;# 
   562  009F                     	;# 
   563  010C                     	;# 
   564  010D                     	;# 
   565  010E                     	;# 
   566  0111                     	;# 
   567  0112                     	;# 
   568  0113                     	;# 
   569  0114                     	;# 
   570  0115                     	;# 
   571  0116                     	;# 
   572  0117                     	;# 
   573  0118                     	;# 
   574  0119                     	;# 
   575  011C                     	;# 
   576  018C                     	;# 
   577  018D                     	;# 
   578  018E                     	;# 
   579  0191                     	;# 
   580  0191                     	;# 
   581  0192                     	;# 
   582  0193                     	;# 
   583  0193                     	;# 
   584  0194                     	;# 
   585  0195                     	;# 
   586  0196                     	;# 
   587  0197                     	;# 
   588  0199                     	;# 
   589  0199                     	;# 
   590  0199                     	;# 
   591  019A                     	;# 
   592  019A                     	;# 
   593  019A                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019C                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019D                     	;# 
   603  019D                     	;# 
   604  019D                     	;# 
   605  019E                     	;# 
   606  019E                     	;# 
   607  019E                     	;# 
   608  019F                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  020C                     	;# 
   614  020D                     	;# 
   615  020E                     	;# 
   616  0211                     	;# 
   617  0211                     	;# 
   618  0212                     	;# 
   619  0212                     	;# 
   620  0213                     	;# 
   621  0213                     	;# 
   622  0214                     	;# 
   623  0214                     	;# 
   624  0215                     	;# 
   625  0215                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0216                     	;# 
   629  0216                     	;# 
   630  0217                     	;# 
   631  0217                     	;# 
   632  028C                     	;# 
   633  028D                     	;# 
   634  028E                     	;# 
   635  0291                     	;# 
   636  0291                     	;# 
   637  0292                     	;# 
   638  0293                     	;# 
   639  0294                     	;# 
   640  0298                     	;# 
   641  0298                     	;# 
   642  0299                     	;# 
   643  029A                     	;# 
   644  029B                     	;# 
   645  029E                     	;# 
   646  030C                     	;# 
   647  030D                     	;# 
   648  030E                     	;# 
   649  038C                     	;# 
   650  038D                     	;# 
   651  038E                     	;# 
   652  0391                     	;# 
   653  0392                     	;# 
   654  0393                     	;# 
   655  0394                     	;# 
   656  0395                     	;# 
   657  0396                     	;# 
   658  0397                     	;# 
   659  0398                     	;# 
   660  0399                     	;# 
   661  040E                     	;# 
   662  0413                     	;# 
   663  0413                     	;# 
   664  0414                     	;# 
   665  0414                     	;# 
   666  0415                     	;# 
   667  0416                     	;# 
   668  0417                     	;# 
   669  0418                     	;# 
   670  041A                     	;# 
   671  041A                     	;# 
   672  041B                     	;# 
   673  041B                     	;# 
   674  041C                     	;# 
   675  041D                     	;# 
   676  041E                     	;# 
   677  041F                     	;# 
   678  0493                     	;# 
   679  0494                     	;# 
   680  0495                     	;# 
   681  0496                     	;# 
   682  049A                     	;# 
   683  049B                     	;# 
   684  049C                     	;# 
   685  049D                     	;# 
   686  058C                     	;# 
   687  058C                     	;# 
   688  058D                     	;# 
   689  058E                     	;# 
   690  058E                     	;# 
   691  058F                     	;# 
   692  0590                     	;# 
   693  0590                     	;# 
   694  0591                     	;# 
   695  0592                     	;# 
   696  0592                     	;# 
   697  0593                     	;# 
   698  0594                     	;# 
   699  0594                     	;# 
   700  0595                     	;# 
   701  0596                     	;# 
   702  0596                     	;# 
   703  0597                     	;# 
   704  0598                     	;# 
   705  0599                     	;# 
   706  059A                     	;# 
   707  059B                     	;# 
   708  059B                     	;# 
   709  059C                     	;# 
   710  059D                     	;# 
   711  060C                     	;# 
   712  060C                     	;# 
   713  060D                     	;# 
   714  060E                     	;# 
   715  060F                     	;# 
   716  060F                     	;# 
   717  0610                     	;# 
   718  0611                     	;# 
   719  0612                     	;# 
   720  0613                     	;# 
   721  0614                     	;# 
   722  0617                     	;# 
   723  0618                     	;# 
   724  0619                     	;# 
   725  061A                     	;# 
   726  061B                     	;# 
   727  061C                     	;# 
   728  0691                     	;# 
   729  0692                     	;# 
   730  0693                     	;# 
   731  0694                     	;# 
   732  0695                     	;# 
   733  0696                     	;# 
   734  0697                     	;# 
   735  0699                     	;# 
   736  069A                     	;# 
   737  0711                     	;# 
   738  0712                     	;# 
   739  0713                     	;# 
   740  0714                     	;# 
   741  0715                     	;# 
   742  0718                     	;# 
   743  0718                     	;# 
   744  0719                     	;# 
   745  071A                     	;# 
   746  071A                     	;# 
   747  071B                     	;# 
   748  071C                     	;# 
   749  071D                     	;# 
   750  0791                     	;# 
   751  0791                     	;# 
   752  0792                     	;# 
   753  0793                     	;# 
   754  0793                     	;# 
   755  0794                     	;# 
   756  0795                     	;# 
   757  0795                     	;# 
   758  0796                     	;# 
   759  0797                     	;# 
   760  0797                     	;# 
   761  0798                     	;# 
   762  0799                     	;# 
   763  079A                     	;# 
   764  080C                     	;# 
   765  080C                     	;# 
   766  080D                     	;# 
   767  080E                     	;# 
   768  080E                     	;# 
   769  080F                     	;# 
   770  0810                     	;# 
   771  0810                     	;# 
   772  0811                     	;# 
   773  0812                     	;# 
   774  0812                     	;# 
   775  0813                     	;# 
   776  0814                     	;# 
   777  0815                     	;# 
   778  0816                     	;# 
   779  0817                     	;# 
   780  0818                     	;# 
   781  0819                     	;# 
   782  081A                     	;# 
   783  081A                     	;# 
   784  081B                     	;# 
   785  081C                     	;# 
   786  081C                     	;# 
   787  081D                     	;# 
   788  088C                     	;# 
   789  088D                     	;# 
   790  088E                     	;# 
   791  088F                     	;# 
   792  088F                     	;# 
   793  0890                     	;# 
   794  0891                     	;# 
   795  0892                     	;# 
   796  0893                     	;# 
   797  0893                     	;# 
   798  0894                     	;# 
   799  0895                     	;# 
   800  0896                     	;# 
   801  0897                     	;# 
   802  0897                     	;# 
   803  0898                     	;# 
   804  0899                     	;# 
   805  0D8C                     	;# 
   806  0D8C                     	;# 
   807  0D8D                     	;# 
   808  0D8E                     	;# 
   809  0D8F                     	;# 
   810  0D8F                     	;# 
   811  0D90                     	;# 
   812  0D91                     	;# 
   813  0D92                     	;# 
   814  0D92                     	;# 
   815  0D93                     	;# 
   816  0D94                     	;# 
   817  0D95                     	;# 
   818  0D95                     	;# 
   819  0D96                     	;# 
   820  0D97                     	;# 
   821  0D98                     	;# 
   822  0D99                     	;# 
   823  0D9A                     	;# 
   824  0D9B                     	;# 
   825  0D9C                     	;# 
   826  0D9D                     	;# 
   827  0D9E                     	;# 
   828  0D9E                     	;# 
   829  0D9F                     	;# 
   830  0DA0                     	;# 
   831  0DA1                     	;# 
   832  0DA1                     	;# 
   833  0DA2                     	;# 
   834  0DA3                     	;# 
   835  0DA4                     	;# 
   836  0DA4                     	;# 
   837  0DA5                     	;# 
   838  0DA6                     	;# 
   839  0DA7                     	;# 
   840  0DA7                     	;# 
   841  0DA8                     	;# 
   842  0DA9                     	;# 
   843  0DAA                     	;# 
   844  0DAB                     	;# 
   845  0DAC                     	;# 
   846  0DAD                     	;# 
   847  0DAE                     	;# 
   848  0DAF                     	;# 
   849  0E0F                     	;# 
   850  0E10                     	;# 
   851  0E11                     	;# 
   852  0E12                     	;# 
   853  0E13                     	;# 
   854  0E14                     	;# 
   855  0E15                     	;# 
   856  0E16                     	;# 
   857  0E17                     	;# 
   858  0E18                     	;# 
   859  0E19                     	;# 
   860  0E1A                     	;# 
   861  0E1B                     	;# 
   862  0E1C                     	;# 
   863  0E1D                     	;# 
   864  0E1E                     	;# 
   865  0E1F                     	;# 
   866  0E20                     	;# 
   867  0E21                     	;# 
   868  0E22                     	;# 
   869  0E23                     	;# 
   870  0E24                     	;# 
   871  0E25                     	;# 
   872  0E26                     	;# 
   873  0E27                     	;# 
   874  0E28                     	;# 
   875  0E29                     	;# 
   876  0E2A                     	;# 
   877  0E2B                     	;# 
   878  0E2C                     	;# 
   879  0E2D                     	;# 
   880  0E2E                     	;# 
   881  0E90                     	;# 
   882  0E91                     	;# 
   883  0E92                     	;# 
   884  0E94                     	;# 
   885  0E95                     	;# 
   886  0E9C                     	;# 
   887  0E9D                     	;# 
   888  0E9E                     	;# 
   889  0E9F                     	;# 
   890  0EA0                     	;# 
   891  0EA1                     	;# 
   892  0EA2                     	;# 
   893  0EA3                     	;# 
   894  0EA4                     	;# 
   895  0EA5                     	;# 
   896  0EA6                     	;# 
   897  0EA7                     	;# 
   898  0F0F                     	;# 
   899  0F10                     	;# 
   900  0F11                     	;# 
   901  0F12                     	;# 
   902  0F13                     	;# 
   903  0F14                     	;# 
   904  0F15                     	;# 
   905  0F16                     	;# 
   906  0F17                     	;# 
   907  0F18                     	;# 
   908  0F19                     	;# 
   909  0F1A                     	;# 
   910  0F1B                     	;# 
   911  0F1C                     	;# 
   912  0F1D                     	;# 
   913  0F1E                     	;# 
   914  0F1F                     	;# 
   915  0F20                     	;# 
   916  0F21                     	;# 
   917  0F22                     	;# 
   918  0F23                     	;# 
   919  0F24                     	;# 
   920  0F25                     	;# 
   921  0F26                     	;# 
   922  0F27                     	;# 
   923  0F28                     	;# 
   924  0F29                     	;# 
   925  0F2A                     	;# 
   926  0F2B                     	;# 
   927  0F2C                     	;# 
   928  0F2D                     	;# 
   929  0F2E                     	;# 
   930  0F2F                     	;# 
   931  0F30                     	;# 
   932  0F31                     	;# 
   933  0F32                     	;# 
   934  0F33                     	;# 
   935  0F34                     	;# 
   936  0F35                     	;# 
   937  0F36                     	;# 
   938  0F37                     	;# 
   939  0FE4                     	;# 
   940  0FE5                     	;# 
   941  0FE6                     	;# 
   942  0FE7                     	;# 
   943  0FE8                     	;# 
   944  0FE9                     	;# 
   945  0FEA                     	;# 
   946  0FEB                     	;# 
   947  0FED                     	;# 
   948  0FEE                     	;# 
   949  0FEF                     	;# 
   950  0000                     	;# 
   951  0001                     	;# 
   952  0002                     	;# 
   953  0003                     	;# 
   954  0004                     	;# 
   955  0005                     	;# 
   956  0006                     	;# 
   957  0007                     	;# 
   958  0008                     	;# 
   959  0009                     	;# 
   960  000A                     	;# 
   961  000B                     	;# 
   962  000C                     	;# 
   963  000D                     	;# 
   964  000E                     	;# 
   965  0010                     	;# 
   966  0011                     	;# 
   967  0012                     	;# 
   968  0013                     	;# 
   969  0014                     	;# 
   970  0015                     	;# 
   971  0016                     	;# 
   972  0016                     	;# 
   973  0017                     	;# 
   974  0018                     	;# 
   975  0019                     	;# 
   976  001A                     	;# 
   977  001A                     	;# 
   978  001B                     	;# 
   979  001B                     	;# 
   980  001C                     	;# 
   981  001D                     	;# 
   982  001E                     	;# 
   983  001F                     	;# 
   984  008C                     	;# 
   985  008D                     	;# 
   986  008E                     	;# 
   987  0090                     	;# 
   988  0091                     	;# 
   989  0092                     	;# 
   990  0093                     	;# 
   991  0094                     	;# 
   992  0095                     	;# 
   993  0096                     	;# 
   994  0098                     	;# 
   995  0099                     	;# 
   996  009A                     	;# 
   997  009B                     	;# 
   998  009B                     	;# 
   999  009C                     	;# 
  1000  009D                     	;# 
  1001  009E                     	;# 
  1002  009F                     	;# 
  1003  010C                     	;# 
  1004  010D                     	;# 
  1005  010E                     	;# 
  1006  0111                     	;# 
  1007  0112                     	;# 
  1008  0113                     	;# 
  1009  0114                     	;# 
  1010  0115                     	;# 
  1011  0116                     	;# 
  1012  0117                     	;# 
  1013  0118                     	;# 
  1014  0119                     	;# 
  1015  011C                     	;# 
  1016  018C                     	;# 
  1017  018D                     	;# 
  1018  018E                     	;# 
  1019  0191                     	;# 
  1020  0191                     	;# 
  1021  0192                     	;# 
  1022  0193                     	;# 
  1023  0193                     	;# 
  1024  0194                     	;# 
  1025  0195                     	;# 
  1026  0196                     	;# 
  1027  0197                     	;# 
  1028  0199                     	;# 
  1029  0199                     	;# 
  1030  0199                     	;# 
  1031  019A                     	;# 
  1032  019A                     	;# 
  1033  019A                     	;# 
  1034  019B                     	;# 
  1035  019B                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019B                     	;# 
  1039  019C                     	;# 
  1040  019C                     	;# 
  1041  019C                     	;# 
  1042  019D                     	;# 
  1043  019D                     	;# 
  1044  019D                     	;# 
  1045  019E                     	;# 
  1046  019E                     	;# 
  1047  019E                     	;# 
  1048  019F                     	;# 
  1049  019F                     	;# 
  1050  019F                     	;# 
  1051  019F                     	;# 
  1052  019F                     	;# 
  1053  020C                     	;# 
  1054  020D                     	;# 
  1055  020E                     	;# 
  1056  0211                     	;# 
  1057  0211                     	;# 
  1058  0212                     	;# 
  1059  0212                     	;# 
  1060  0213                     	;# 
  1061  0213                     	;# 
  1062  0214                     	;# 
  1063  0214                     	;# 
  1064  0215                     	;# 
  1065  0215                     	;# 
  1066  0215                     	;# 
  1067  0215                     	;# 
  1068  0216                     	;# 
  1069  0216                     	;# 
  1070  0217                     	;# 
  1071  0217                     	;# 
  1072  028C                     	;# 
  1073  028D                     	;# 
  1074  028E                     	;# 
  1075  0291                     	;# 
  1076  0291                     	;# 
  1077  0292                     	;# 
  1078  0293                     	;# 
  1079  0294                     	;# 
  1080  0298                     	;# 
  1081  0298                     	;# 
  1082  0299                     	;# 
  1083  029A                     	;# 
  1084  029B                     	;# 
  1085  029E                     	;# 
  1086  030C                     	;# 
  1087  030D                     	;# 
  1088  030E                     	;# 
  1089  038C                     	;# 
  1090  038D                     	;# 
  1091  038E                     	;# 
  1092  0391                     	;# 
  1093  0392                     	;# 
  1094  0393                     	;# 
  1095  0394                     	;# 
  1096  0395                     	;# 
  1097  0396                     	;# 
  1098  0397                     	;# 
  1099  0398                     	;# 
  1100  0399                     	;# 
  1101  040E                     	;# 
  1102  0413                     	;# 
  1103  0413                     	;# 
  1104  0414                     	;# 
  1105  0414                     	;# 
  1106  0415                     	;# 
  1107  0416                     	;# 
  1108  0417                     	;# 
  1109  0418                     	;# 
  1110  041A                     	;# 
  1111  041A                     	;# 
  1112  041B                     	;# 
  1113  041B                     	;# 
  1114  041C                     	;# 
  1115  041D                     	;# 
  1116  041E                     	;# 
  1117  041F                     	;# 
  1118  0493                     	;# 
  1119  0494                     	;# 
  1120  0495                     	;# 
  1121  0496                     	;# 
  1122  049A                     	;# 
  1123  049B                     	;# 
  1124  049C                     	;# 
  1125  049D                     	;# 
  1126  058C                     	;# 
  1127  058C                     	;# 
  1128  058D                     	;# 
  1129  058E                     	;# 
  1130  058E                     	;# 
  1131  058F                     	;# 
  1132  0590                     	;# 
  1133  0590                     	;# 
  1134  0591                     	;# 
  1135  0592                     	;# 
  1136  0592                     	;# 
  1137  0593                     	;# 
  1138  0594                     	;# 
  1139  0594                     	;# 
  1140  0595                     	;# 
  1141  0596                     	;# 
  1142  0596                     	;# 
  1143  0597                     	;# 
  1144  0598                     	;# 
  1145  0599                     	;# 
  1146  059A                     	;# 
  1147  059B                     	;# 
  1148  059B                     	;# 
  1149  059C                     	;# 
  1150  059D                     	;# 
  1151  060C                     	;# 
  1152  060C                     	;# 
  1153  060D                     	;# 
  1154  060E                     	;# 
  1155  060F                     	;# 
  1156  060F                     	;# 
  1157  0610                     	;# 
  1158  0611                     	;# 
  1159  0612                     	;# 
  1160  0613                     	;# 
  1161  0614                     	;# 
  1162  0617                     	;# 
  1163  0618                     	;# 
  1164  0619                     	;# 
  1165  061A                     	;# 
  1166  061B                     	;# 
  1167  061C                     	;# 
  1168  0691                     	;# 
  1169  0692                     	;# 
  1170  0693                     	;# 
  1171  0694                     	;# 
  1172  0695                     	;# 
  1173  0696                     	;# 
  1174  0697                     	;# 
  1175  0699                     	;# 
  1176  069A                     	;# 
  1177  0711                     	;# 
  1178  0712                     	;# 
  1179  0713                     	;# 
  1180  0714                     	;# 
  1181  0715                     	;# 
  1182  0718                     	;# 
  1183  0718                     	;# 
  1184  0719                     	;# 
  1185  071A                     	;# 
  1186  071A                     	;# 
  1187  071B                     	;# 
  1188  071C                     	;# 
  1189  071D                     	;# 
  1190  0791                     	;# 
  1191  0791                     	;# 
  1192  0792                     	;# 
  1193  0793                     	;# 
  1194  0793                     	;# 
  1195  0794                     	;# 
  1196  0795                     	;# 
  1197  0795                     	;# 
  1198  0796                     	;# 
  1199  0797                     	;# 
  1200  0797                     	;# 
  1201  0798                     	;# 
  1202  0799                     	;# 
  1203  079A                     	;# 
  1204  080C                     	;# 
  1205  080C                     	;# 
  1206  080D                     	;# 
  1207  080E                     	;# 
  1208  080E                     	;# 
  1209  080F                     	;# 
  1210  0810                     	;# 
  1211  0810                     	;# 
  1212  0811                     	;# 
  1213  0812                     	;# 
  1214  0812                     	;# 
  1215  0813                     	;# 
  1216  0814                     	;# 
  1217  0815                     	;# 
  1218  0816                     	;# 
  1219  0817                     	;# 
  1220  0818                     	;# 
  1221  0819                     	;# 
  1222  081A                     	;# 
  1223  081A                     	;# 
  1224  081B                     	;# 
  1225  081C                     	;# 
  1226  081C                     	;# 
  1227  081D                     	;# 
  1228  088C                     	;# 
  1229  088D                     	;# 
  1230  088E                     	;# 
  1231  088F                     	;# 
  1232  088F                     	;# 
  1233  0890                     	;# 
  1234  0891                     	;# 
  1235  0892                     	;# 
  1236  0893                     	;# 
  1237  0893                     	;# 
  1238  0894                     	;# 
  1239  0895                     	;# 
  1240  0896                     	;# 
  1241  0897                     	;# 
  1242  0897                     	;# 
  1243  0898                     	;# 
  1244  0899                     	;# 
  1245  0D8C                     	;# 
  1246  0D8C                     	;# 
  1247  0D8D                     	;# 
  1248  0D8E                     	;# 
  1249  0D8F                     	;# 
  1250  0D8F                     	;# 
  1251  0D90                     	;# 
  1252  0D91                     	;# 
  1253  0D92                     	;# 
  1254  0D92                     	;# 
  1255  0D93                     	;# 
  1256  0D94                     	;# 
  1257  0D95                     	;# 
  1258  0D95                     	;# 
  1259  0D96                     	;# 
  1260  0D97                     	;# 
  1261  0D98                     	;# 
  1262  0D99                     	;# 
  1263  0D9A                     	;# 
  1264  0D9B                     	;# 
  1265  0D9C                     	;# 
  1266  0D9D                     	;# 
  1267  0D9E                     	;# 
  1268  0D9E                     	;# 
  1269  0D9F                     	;# 
  1270  0DA0                     	;# 
  1271  0DA1                     	;# 
  1272  0DA1                     	;# 
  1273  0DA2                     	;# 
  1274  0DA3                     	;# 
  1275  0DA4                     	;# 
  1276  0DA4                     	;# 
  1277  0DA5                     	;# 
  1278  0DA6                     	;# 
  1279  0DA7                     	;# 
  1280  0DA7                     	;# 
  1281  0DA8                     	;# 
  1282  0DA9                     	;# 
  1283  0DAA                     	;# 
  1284  0DAB                     	;# 
  1285  0DAC                     	;# 
  1286  0DAD                     	;# 
  1287  0DAE                     	;# 
  1288  0DAF                     	;# 
  1289  0E0F                     	;# 
  1290  0E10                     	;# 
  1291  0E11                     	;# 
  1292  0E12                     	;# 
  1293  0E13                     	;# 
  1294  0E14                     	;# 
  1295  0E15                     	;# 
  1296  0E16                     	;# 
  1297  0E17                     	;# 
  1298  0E18                     	;# 
  1299  0E19                     	;# 
  1300  0E1A                     	;# 
  1301  0E1B                     	;# 
  1302  0E1C                     	;# 
  1303  0E1D                     	;# 
  1304  0E1E                     	;# 
  1305  0E1F                     	;# 
  1306  0E20                     	;# 
  1307  0E21                     	;# 
  1308  0E22                     	;# 
  1309  0E23                     	;# 
  1310  0E24                     	;# 
  1311  0E25                     	;# 
  1312  0E26                     	;# 
  1313  0E27                     	;# 
  1314  0E28                     	;# 
  1315  0E29                     	;# 
  1316  0E2A                     	;# 
  1317  0E2B                     	;# 
  1318  0E2C                     	;# 
  1319  0E2D                     	;# 
  1320  0E2E                     	;# 
  1321  0E90                     	;# 
  1322  0E91                     	;# 
  1323  0E92                     	;# 
  1324  0E94                     	;# 
  1325  0E95                     	;# 
  1326  0E9C                     	;# 
  1327  0E9D                     	;# 
  1328  0E9E                     	;# 
  1329  0E9F                     	;# 
  1330  0EA0                     	;# 
  1331  0EA1                     	;# 
  1332  0EA2                     	;# 
  1333  0EA3                     	;# 
  1334  0EA4                     	;# 
  1335  0EA5                     	;# 
  1336  0EA6                     	;# 
  1337  0EA7                     	;# 
  1338  0F0F                     	;# 
  1339  0F10                     	;# 
  1340  0F11                     	;# 
  1341  0F12                     	;# 
  1342  0F13                     	;# 
  1343  0F14                     	;# 
  1344  0F15                     	;# 
  1345  0F16                     	;# 
  1346  0F17                     	;# 
  1347  0F18                     	;# 
  1348  0F19                     	;# 
  1349  0F1A                     	;# 
  1350  0F1B                     	;# 
  1351  0F1C                     	;# 
  1352  0F1D                     	;# 
  1353  0F1E                     	;# 
  1354  0F1F                     	;# 
  1355  0F20                     	;# 
  1356  0F21                     	;# 
  1357  0F22                     	;# 
  1358  0F23                     	;# 
  1359  0F24                     	;# 
  1360  0F25                     	;# 
  1361  0F26                     	;# 
  1362  0F27                     	;# 
  1363  0F28                     	;# 
  1364  0F29                     	;# 
  1365  0F2A                     	;# 
  1366  0F2B                     	;# 
  1367  0F2C                     	;# 
  1368  0F2D                     	;# 
  1369  0F2E                     	;# 
  1370  0F2F                     	;# 
  1371  0F30                     	;# 
  1372  0F31                     	;# 
  1373  0F32                     	;# 
  1374  0F33                     	;# 
  1375  0F34                     	;# 
  1376  0F35                     	;# 
  1377  0F36                     	;# 
  1378  0F37                     	;# 
  1379  0FE4                     	;# 
  1380  0FE5                     	;# 
  1381  0FE6                     	;# 
  1382  0FE7                     	;# 
  1383  0FE8                     	;# 
  1384  0FE9                     	;# 
  1385  0FEA                     	;# 
  1386  0FEB                     	;# 
  1387  0FED                     	;# 
  1388  0FEE                     	;# 
  1389  0FEF                     	;# 
  1390  0000                     	;# 
  1391  0001                     	;# 
  1392  0002                     	;# 
  1393  0003                     	;# 
  1394  0004                     	;# 
  1395  0005                     	;# 
  1396  0006                     	;# 
  1397  0007                     	;# 
  1398  0008                     	;# 
  1399  0009                     	;# 
  1400  000A                     	;# 
  1401  000B                     	;# 
  1402  000C                     	;# 
  1403  000D                     	;# 
  1404  000E                     	;# 
  1405  0010                     	;# 
  1406  0011                     	;# 
  1407  0012                     	;# 
  1408  0013                     	;# 
  1409  0014                     	;# 
  1410  0015                     	;# 
  1411  0016                     	;# 
  1412  0016                     	;# 
  1413  0017                     	;# 
  1414  0018                     	;# 
  1415  0019                     	;# 
  1416  001A                     	;# 
  1417  001A                     	;# 
  1418  001B                     	;# 
  1419  001B                     	;# 
  1420  001C                     	;# 
  1421  001D                     	;# 
  1422  001E                     	;# 
  1423  001F                     	;# 
  1424  008C                     	;# 
  1425  008D                     	;# 
  1426  008E                     	;# 
  1427  0090                     	;# 
  1428  0091                     	;# 
  1429  0092                     	;# 
  1430  0093                     	;# 
  1431  0094                     	;# 
  1432  0095                     	;# 
  1433  0096                     	;# 
  1434  0098                     	;# 
  1435  0099                     	;# 
  1436  009A                     	;# 
  1437  009B                     	;# 
  1438  009B                     	;# 
  1439  009C                     	;# 
  1440  009D                     	;# 
  1441  009E                     	;# 
  1442  009F                     	;# 
  1443  010C                     	;# 
  1444  010D                     	;# 
  1445  010E                     	;# 
  1446  0111                     	;# 
  1447  0112                     	;# 
  1448  0113                     	;# 
  1449  0114                     	;# 
  1450  0115                     	;# 
  1451  0116                     	;# 
  1452  0117                     	;# 
  1453  0118                     	;# 
  1454  0119                     	;# 
  1455  011C                     	;# 
  1456  018C                     	;# 
  1457  018D                     	;# 
  1458  018E                     	;# 
  1459  0191                     	;# 
  1460  0191                     	;# 
  1461  0192                     	;# 
  1462  0193                     	;# 
  1463  0193                     	;# 
  1464  0194                     	;# 
  1465  0195                     	;# 
  1466  0196                     	;# 
  1467  0197                     	;# 
  1468  0199                     	;# 
  1469  0199                     	;# 
  1470  0199                     	;# 
  1471  019A                     	;# 
  1472  019A                     	;# 
  1473  019A                     	;# 
  1474  019B                     	;# 
  1475  019B                     	;# 
  1476  019B                     	;# 
  1477  019B                     	;# 
  1478  019B                     	;# 
  1479  019C                     	;# 
  1480  019C                     	;# 
  1481  019C                     	;# 
  1482  019D                     	;# 
  1483  019D                     	;# 
  1484  019D                     	;# 
  1485  019E                     	;# 
  1486  019E                     	;# 
  1487  019E                     	;# 
  1488  019F                     	;# 
  1489  019F                     	;# 
  1490  019F                     	;# 
  1491  019F                     	;# 
  1492  019F                     	;# 
  1493  020C                     	;# 
  1494  020D                     	;# 
  1495  020E                     	;# 
  1496  0211                     	;# 
  1497  0211                     	;# 
  1498  0212                     	;# 
  1499  0212                     	;# 
  1500  0213                     	;# 
  1501  0213                     	;# 
  1502  0214                     	;# 
  1503  0214                     	;# 
  1504  0215                     	;# 
  1505  0215                     	;# 
  1506  0215                     	;# 
  1507  0215                     	;# 
  1508  0216                     	;# 
  1509  0216                     	;# 
  1510  0217                     	;# 
  1511  0217                     	;# 
  1512  028C                     	;# 
  1513  028D                     	;# 
  1514  028E                     	;# 
  1515  0291                     	;# 
  1516  0291                     	;# 
  1517  0292                     	;# 
  1518  0293                     	;# 
  1519  0294                     	;# 
  1520  0298                     	;# 
  1521  0298                     	;# 
  1522  0299                     	;# 
  1523  029A                     	;# 
  1524  029B                     	;# 
  1525  029E                     	;# 
  1526  030C                     	;# 
  1527  030D                     	;# 
  1528  030E                     	;# 
  1529  038C                     	;# 
  1530  038D                     	;# 
  1531  038E                     	;# 
  1532  0391                     	;# 
  1533  0392                     	;# 
  1534  0393                     	;# 
  1535  0394                     	;# 
  1536  0395                     	;# 
  1537  0396                     	;# 
  1538  0397                     	;# 
  1539  0398                     	;# 
  1540  0399                     	;# 
  1541  040E                     	;# 
  1542  0413                     	;# 
  1543  0413                     	;# 
  1544  0414                     	;# 
  1545  0414                     	;# 
  1546  0415                     	;# 
  1547  0416                     	;# 
  1548  0417                     	;# 
  1549  0418                     	;# 
  1550  041A                     	;# 
  1551  041A                     	;# 
  1552  041B                     	;# 
  1553  041B                     	;# 
  1554  041C                     	;# 
  1555  041D                     	;# 
  1556  041E                     	;# 
  1557  041F                     	;# 
  1558  0493                     	;# 
  1559  0494                     	;# 
  1560  0495                     	;# 
  1561  0496                     	;# 
  1562  049A                     	;# 
  1563  049B                     	;# 
  1564  049C                     	;# 
  1565  049D                     	;# 
  1566  058C                     	;# 
  1567  058C                     	;# 
  1568  058D                     	;# 
  1569  058E                     	;# 
  1570  058E                     	;# 
  1571  058F                     	;# 
  1572  0590                     	;# 
  1573  0590                     	;# 
  1574  0591                     	;# 
  1575  0592                     	;# 
  1576  0592                     	;# 
  1577  0593                     	;# 
  1578  0594                     	;# 
  1579  0594                     	;# 
  1580  0595                     	;# 
  1581  0596                     	;# 
  1582  0596                     	;# 
  1583  0597                     	;# 
  1584  0598                     	;# 
  1585  0599                     	;# 
  1586  059A                     	;# 
  1587  059B                     	;# 
  1588  059B                     	;# 
  1589  059C                     	;# 
  1590  059D                     	;# 
  1591  060C                     	;# 
  1592  060C                     	;# 
  1593  060D                     	;# 
  1594  060E                     	;# 
  1595  060F                     	;# 
  1596  060F                     	;# 
  1597  0610                     	;# 
  1598  0611                     	;# 
  1599  0612                     	;# 
  1600  0613                     	;# 
  1601  0614                     	;# 
  1602  0617                     	;# 
  1603  0618                     	;# 
  1604  0619                     	;# 
  1605  061A                     	;# 
  1606  061B                     	;# 
  1607  061C                     	;# 
  1608  0691                     	;# 
  1609  0692                     	;# 
  1610  0693                     	;# 
  1611  0694                     	;# 
  1612  0695                     	;# 
  1613  0696                     	;# 
  1614  0697                     	;# 
  1615  0699                     	;# 
  1616  069A                     	;# 
  1617  0711                     	;# 
  1618  0712                     	;# 
  1619  0713                     	;# 
  1620  0714                     	;# 
  1621  0715                     	;# 
  1622  0718                     	;# 
  1623  0718                     	;# 
  1624  0719                     	;# 
  1625  071A                     	;# 
  1626  071A                     	;# 
  1627  071B                     	;# 
  1628  071C                     	;# 
  1629  071D                     	;# 
  1630  0791                     	;# 
  1631  0791                     	;# 
  1632  0792                     	;# 
  1633  0793                     	;# 
  1634  0793                     	;# 
  1635  0794                     	;# 
  1636  0795                     	;# 
  1637  0795                     	;# 
  1638  0796                     	;# 
  1639  0797                     	;# 
  1640  0797                     	;# 
  1641  0798                     	;# 
  1642  0799                     	;# 
  1643  079A                     	;# 
  1644  080C                     	;# 
  1645  080C                     	;# 
  1646  080D                     	;# 
  1647  080E                     	;# 
  1648  080E                     	;# 
  1649  080F                     	;# 
  1650  0810                     	;# 
  1651  0810                     	;# 
  1652  0811                     	;# 
  1653  0812                     	;# 
  1654  0812                     	;# 
  1655  0813                     	;# 
  1656  0814                     	;# 
  1657  0815                     	;# 
  1658  0816                     	;# 
  1659  0817                     	;# 
  1660  0818                     	;# 
  1661  0819                     	;# 
  1662  081A                     	;# 
  1663  081A                     	;# 
  1664  081B                     	;# 
  1665  081C                     	;# 
  1666  081C                     	;# 
  1667  081D                     	;# 
  1668  088C                     	;# 
  1669  088D                     	;# 
  1670  088E                     	;# 
  1671  088F                     	;# 
  1672  088F                     	;# 
  1673  0890                     	;# 
  1674  0891                     	;# 
  1675  0892                     	;# 
  1676  0893                     	;# 
  1677  0893                     	;# 
  1678  0894                     	;# 
  1679  0895                     	;# 
  1680  0896                     	;# 
  1681  0897                     	;# 
  1682  0897                     	;# 
  1683  0898                     	;# 
  1684  0899                     	;# 
  1685  0D8C                     	;# 
  1686  0D8C                     	;# 
  1687  0D8D                     	;# 
  1688  0D8E                     	;# 
  1689  0D8F                     	;# 
  1690  0D8F                     	;# 
  1691  0D90                     	;# 
  1692  0D91                     	;# 
  1693  0D92                     	;# 
  1694  0D92                     	;# 
  1695  0D93                     	;# 
  1696  0D94                     	;# 
  1697  0D95                     	;# 
  1698  0D95                     	;# 
  1699  0D96                     	;# 
  1700  0D97                     	;# 
  1701  0D98                     	;# 
  1702  0D99                     	;# 
  1703  0D9A                     	;# 
  1704  0D9B                     	;# 
  1705  0D9C                     	;# 
  1706  0D9D                     	;# 
  1707  0D9E                     	;# 
  1708  0D9E                     	;# 
  1709  0D9F                     	;# 
  1710  0DA0                     	;# 
  1711  0DA1                     	;# 
  1712  0DA1                     	;# 
  1713  0DA2                     	;# 
  1714  0DA3                     	;# 
  1715  0DA4                     	;# 
  1716  0DA4                     	;# 
  1717  0DA5                     	;# 
  1718  0DA6                     	;# 
  1719  0DA7                     	;# 
  1720  0DA7                     	;# 
  1721  0DA8                     	;# 
  1722  0DA9                     	;# 
  1723  0DAA                     	;# 
  1724  0DAB                     	;# 
  1725  0DAC                     	;# 
  1726  0DAD                     	;# 
  1727  0DAE                     	;# 
  1728  0DAF                     	;# 
  1729  0E0F                     	;# 
  1730  0E10                     	;# 
  1731  0E11                     	;# 
  1732  0E12                     	;# 
  1733  0E13                     	;# 
  1734  0E14                     	;# 
  1735  0E15                     	;# 
  1736  0E16                     	;# 
  1737  0E17                     	;# 
  1738  0E18                     	;# 
  1739  0E19                     	;# 
  1740  0E1A                     	;# 
  1741  0E1B                     	;# 
  1742  0E1C                     	;# 
  1743  0E1D                     	;# 
  1744  0E1E                     	;# 
  1745  0E1F                     	;# 
  1746  0E20                     	;# 
  1747  0E21                     	;# 
  1748  0E22                     	;# 
  1749  0E23                     	;# 
  1750  0E24                     	;# 
  1751  0E25                     	;# 
  1752  0E26                     	;# 
  1753  0E27                     	;# 
  1754  0E28                     	;# 
  1755  0E29                     	;# 
  1756  0E2A                     	;# 
  1757  0E2B                     	;# 
  1758  0E2C                     	;# 
  1759  0E2D                     	;# 
  1760  0E2E                     	;# 
  1761  0E90                     	;# 
  1762  0E91                     	;# 
  1763  0E92                     	;# 
  1764  0E94                     	;# 
  1765  0E95                     	;# 
  1766  0E9C                     	;# 
  1767  0E9D                     	;# 
  1768  0E9E                     	;# 
  1769  0E9F                     	;# 
  1770  0EA0                     	;# 
  1771  0EA1                     	;# 
  1772  0EA2                     	;# 
  1773  0EA3                     	;# 
  1774  0EA4                     	;# 
  1775  0EA5                     	;# 
  1776  0EA6                     	;# 
  1777  0EA7                     	;# 
  1778  0F0F                     	;# 
  1779  0F10                     	;# 
  1780  0F11                     	;# 
  1781  0F12                     	;# 
  1782  0F13                     	;# 
  1783  0F14                     	;# 
  1784  0F15                     	;# 
  1785  0F16                     	;# 
  1786  0F17                     	;# 
  1787  0F18                     	;# 
  1788  0F19                     	;# 
  1789  0F1A                     	;# 
  1790  0F1B                     	;# 
  1791  0F1C                     	;# 
  1792  0F1D                     	;# 
  1793  0F1E                     	;# 
  1794  0F1F                     	;# 
  1795  0F20                     	;# 
  1796  0F21                     	;# 
  1797  0F22                     	;# 
  1798  0F23                     	;# 
  1799  0F24                     	;# 
  1800  0F25                     	;# 
  1801  0F26                     	;# 
  1802  0F27                     	;# 
  1803  0F28                     	;# 
  1804  0F29                     	;# 
  1805  0F2A                     	;# 
  1806  0F2B                     	;# 
  1807  0F2C                     	;# 
  1808  0F2D                     	;# 
  1809  0F2E                     	;# 
  1810  0F2F                     	;# 
  1811  0F30                     	;# 
  1812  0F31                     	;# 
  1813  0F32                     	;# 
  1814  0F33                     	;# 
  1815  0F34                     	;# 
  1816  0F35                     	;# 
  1817  0F36                     	;# 
  1818  0F37                     	;# 
  1819  0FE4                     	;# 
  1820  0FE5                     	;# 
  1821  0FE6                     	;# 
  1822  0FE7                     	;# 
  1823  0FE8                     	;# 
  1824  0FE9                     	;# 
  1825  0FEA                     	;# 
  1826  0FEB                     	;# 
  1827  0FED                     	;# 
  1828  0FEE                     	;# 
  1829  0FEF                     	;# 
  1830  0000                     	;# 
  1831  0001                     	;# 
  1832  0002                     	;# 
  1833  0003                     	;# 
  1834  0004                     	;# 
  1835  0005                     	;# 
  1836  0006                     	;# 
  1837  0007                     	;# 
  1838  0008                     	;# 
  1839  0009                     	;# 
  1840  000A                     	;# 
  1841  000B                     	;# 
  1842  000C                     	;# 
  1843  000D                     	;# 
  1844  000E                     	;# 
  1845  0010                     	;# 
  1846  0011                     	;# 
  1847  0012                     	;# 
  1848  0013                     	;# 
  1849  0014                     	;# 
  1850  0015                     	;# 
  1851  0016                     	;# 
  1852  0016                     	;# 
  1853  0017                     	;# 
  1854  0018                     	;# 
  1855  0019                     	;# 
  1856  001A                     	;# 
  1857  001A                     	;# 
  1858  001B                     	;# 
  1859  001B                     	;# 
  1860  001C                     	;# 
  1861  001D                     	;# 
  1862  001E                     	;# 
  1863  001F                     	;# 
  1864  008C                     	;# 
  1865  008D                     	;# 
  1866  008E                     	;# 
  1867  0090                     	;# 
  1868  0091                     	;# 
  1869  0092                     	;# 
  1870  0093                     	;# 
  1871  0094                     	;# 
  1872  0095                     	;# 
  1873  0096                     	;# 
  1874  0098                     	;# 
  1875  0099                     	;# 
  1876  009A                     	;# 
  1877  009B                     	;# 
  1878  009B                     	;# 
  1879  009C                     	;# 
  1880  009D                     	;# 
  1881  009E                     	;# 
  1882  009F                     	;# 
  1883  010C                     	;# 
  1884  010D                     	;# 
  1885  010E                     	;# 
  1886  0111                     	;# 
  1887  0112                     	;# 
  1888  0113                     	;# 
  1889  0114                     	;# 
  1890  0115                     	;# 
  1891  0116                     	;# 
  1892  0117                     	;# 
  1893  0118                     	;# 
  1894  0119                     	;# 
  1895  011C                     	;# 
  1896  018C                     	;# 
  1897  018D                     	;# 
  1898  018E                     	;# 
  1899  0191                     	;# 
  1900  0191                     	;# 
  1901  0192                     	;# 
  1902  0193                     	;# 
  1903  0193                     	;# 
  1904  0194                     	;# 
  1905  0195                     	;# 
  1906  0196                     	;# 
  1907  0197                     	;# 
  1908  0199                     	;# 
  1909  0199                     	;# 
  1910  0199                     	;# 
  1911  019A                     	;# 
  1912  019A                     	;# 
  1913  019A                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019B                     	;# 
  1917  019B                     	;# 
  1918  019B                     	;# 
  1919  019C                     	;# 
  1920  019C                     	;# 
  1921  019C                     	;# 
  1922  019D                     	;# 
  1923  019D                     	;# 
  1924  019D                     	;# 
  1925  019E                     	;# 
  1926  019E                     	;# 
  1927  019E                     	;# 
  1928  019F                     	;# 
  1929  019F                     	;# 
  1930  019F                     	;# 
  1931  019F                     	;# 
  1932  019F                     	;# 
  1933  020C                     	;# 
  1934  020D                     	;# 
  1935  020E                     	;# 
  1936  0211                     	;# 
  1937  0211                     	;# 
  1938  0212                     	;# 
  1939  0212                     	;# 
  1940  0213                     	;# 
  1941  0213                     	;# 
  1942  0214                     	;# 
  1943  0214                     	;# 
  1944  0215                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0216                     	;# 
  1949  0216                     	;# 
  1950  0217                     	;# 
  1951  0217                     	;# 
  1952  028C                     	;# 
  1953  028D                     	;# 
  1954  028E                     	;# 
  1955  0291                     	;# 
  1956  0291                     	;# 
  1957  0292                     	;# 
  1958  0293                     	;# 
  1959  0294                     	;# 
  1960  0298                     	;# 
  1961  0298                     	;# 
  1962  0299                     	;# 
  1963  029A                     	;# 
  1964  029B                     	;# 
  1965  029E                     	;# 
  1966  030C                     	;# 
  1967  030D                     	;# 
  1968  030E                     	;# 
  1969  038C                     	;# 
  1970  038D                     	;# 
  1971  038E                     	;# 
  1972  0391                     	;# 
  1973  0392                     	;# 
  1974  0393                     	;# 
  1975  0394                     	;# 
  1976  0395                     	;# 
  1977  0396                     	;# 
  1978  0397                     	;# 
  1979  0398                     	;# 
  1980  0399                     	;# 
  1981  040E                     	;# 
  1982  0413                     	;# 
  1983  0413                     	;# 
  1984  0414                     	;# 
  1985  0414                     	;# 
  1986  0415                     	;# 
  1987  0416                     	;# 
  1988  0417                     	;# 
  1989  0418                     	;# 
  1990  041A                     	;# 
  1991  041A                     	;# 
  1992  041B                     	;# 
  1993  041B                     	;# 
  1994  041C                     	;# 
  1995  041D                     	;# 
  1996  041E                     	;# 
  1997  041F                     	;# 
  1998  0493                     	;# 
  1999  0494                     	;# 
  2000  0495                     	;# 
  2001  0496                     	;# 
  2002  049A                     	;# 
  2003  049B                     	;# 
  2004  049C                     	;# 
  2005  049D                     	;# 
  2006  058C                     	;# 
  2007  058C                     	;# 
  2008  058D                     	;# 
  2009  058E                     	;# 
  2010  058E                     	;# 
  2011  058F                     	;# 
  2012  0590                     	;# 
  2013  0590                     	;# 
  2014  0591                     	;# 
  2015  0592                     	;# 
  2016  0592                     	;# 
  2017  0593                     	;# 
  2018  0594                     	;# 
  2019  0594                     	;# 
  2020  0595                     	;# 
  2021  0596                     	;# 
  2022  0596                     	;# 
  2023  0597                     	;# 
  2024  0598                     	;# 
  2025  0599                     	;# 
  2026  059A                     	;# 
  2027  059B                     	;# 
  2028  059B                     	;# 
  2029  059C                     	;# 
  2030  059D                     	;# 
  2031  060C                     	;# 
  2032  060C                     	;# 
  2033  060D                     	;# 
  2034  060E                     	;# 
  2035  060F                     	;# 
  2036  060F                     	;# 
  2037  0610                     	;# 
  2038  0611                     	;# 
  2039  0612                     	;# 
  2040  0613                     	;# 
  2041  0614                     	;# 
  2042  0617                     	;# 
  2043  0618                     	;# 
  2044  0619                     	;# 
  2045  061A                     	;# 
  2046  061B                     	;# 
  2047  061C                     	;# 
  2048  0691                     	;# 
  2049  0692                     	;# 
  2050  0693                     	;# 
  2051  0694                     	;# 
  2052  0695                     	;# 
  2053  0696                     	;# 
  2054  0697                     	;# 
  2055  0699                     	;# 
  2056  069A                     	;# 
  2057  0711                     	;# 
  2058  0712                     	;# 
  2059  0713                     	;# 
  2060  0714                     	;# 
  2061  0715                     	;# 
  2062  0718                     	;# 
  2063  0718                     	;# 
  2064  0719                     	;# 
  2065  071A                     	;# 
  2066  071A                     	;# 
  2067  071B                     	;# 
  2068  071C                     	;# 
  2069  071D                     	;# 
  2070  0791                     	;# 
  2071  0791                     	;# 
  2072  0792                     	;# 
  2073  0793                     	;# 
  2074  0793                     	;# 
  2075  0794                     	;# 
  2076  0795                     	;# 
  2077  0795                     	;# 
  2078  0796                     	;# 
  2079  0797                     	;# 
  2080  0797                     	;# 
  2081  0798                     	;# 
  2082  0799                     	;# 
  2083  079A                     	;# 
  2084  080C                     	;# 
  2085  080C                     	;# 
  2086  080D                     	;# 
  2087  080E                     	;# 
  2088  080E                     	;# 
  2089  080F                     	;# 
  2090  0810                     	;# 
  2091  0810                     	;# 
  2092  0811                     	;# 
  2093  0812                     	;# 
  2094  0812                     	;# 
  2095  0813                     	;# 
  2096  0814                     	;# 
  2097  0815                     	;# 
  2098  0816                     	;# 
  2099  0817                     	;# 
  2100  0818                     	;# 
  2101  0819                     	;# 
  2102  081A                     	;# 
  2103  081A                     	;# 
  2104  081B                     	;# 
  2105  081C                     	;# 
  2106  081C                     	;# 
  2107  081D                     	;# 
  2108  088C                     	;# 
  2109  088D                     	;# 
  2110  088E                     	;# 
  2111  088F                     	;# 
  2112  088F                     	;# 
  2113  0890                     	;# 
  2114  0891                     	;# 
  2115  0892                     	;# 
  2116  0893                     	;# 
  2117  0893                     	;# 
  2118  0894                     	;# 
  2119  0895                     	;# 
  2120  0896                     	;# 
  2121  0897                     	;# 
  2122  0897                     	;# 
  2123  0898                     	;# 
  2124  0899                     	;# 
  2125  0D8C                     	;# 
  2126  0D8C                     	;# 
  2127  0D8D                     	;# 
  2128  0D8E                     	;# 
  2129  0D8F                     	;# 
  2130  0D8F                     	;# 
  2131  0D90                     	;# 
  2132  0D91                     	;# 
  2133  0D92                     	;# 
  2134  0D92                     	;# 
  2135  0D93                     	;# 
  2136  0D94                     	;# 
  2137  0D95                     	;# 
  2138  0D95                     	;# 
  2139  0D96                     	;# 
  2140  0D97                     	;# 
  2141  0D98                     	;# 
  2142  0D99                     	;# 
  2143  0D9A                     	;# 
  2144  0D9B                     	;# 
  2145  0D9C                     	;# 
  2146  0D9D                     	;# 
  2147  0D9E                     	;# 
  2148  0D9E                     	;# 
  2149  0D9F                     	;# 
  2150  0DA0                     	;# 
  2151  0DA1                     	;# 
  2152  0DA1                     	;# 
  2153  0DA2                     	;# 
  2154  0DA3                     	;# 
  2155  0DA4                     	;# 
  2156  0DA4                     	;# 
  2157  0DA5                     	;# 
  2158  0DA6                     	;# 
  2159  0DA7                     	;# 
  2160  0DA7                     	;# 
  2161  0DA8                     	;# 
  2162  0DA9                     	;# 
  2163  0DAA                     	;# 
  2164  0DAB                     	;# 
  2165  0DAC                     	;# 
  2166  0DAD                     	;# 
  2167  0DAE                     	;# 
  2168  0DAF                     	;# 
  2169  0E0F                     	;# 
  2170  0E10                     	;# 
  2171  0E11                     	;# 
  2172  0E12                     	;# 
  2173  0E13                     	;# 
  2174  0E14                     	;# 
  2175  0E15                     	;# 
  2176  0E16                     	;# 
  2177  0E17                     	;# 
  2178  0E18                     	;# 
  2179  0E19                     	;# 
  2180  0E1A                     	;# 
  2181  0E1B                     	;# 
  2182  0E1C                     	;# 
  2183  0E1D                     	;# 
  2184  0E1E                     	;# 
  2185  0E1F                     	;# 
  2186  0E20                     	;# 
  2187  0E21                     	;# 
  2188  0E22                     	;# 
  2189  0E23                     	;# 
  2190  0E24                     	;# 
  2191  0E25                     	;# 
  2192  0E26                     	;# 
  2193  0E27                     	;# 
  2194  0E28                     	;# 
  2195  0E29                     	;# 
  2196  0E2A                     	;# 
  2197  0E2B                     	;# 
  2198  0E2C                     	;# 
  2199  0E2D                     	;# 
  2200  0E2E                     	;# 
  2201  0E90                     	;# 
  2202  0E91                     	;# 
  2203  0E92                     	;# 
  2204  0E94                     	;# 
  2205  0E95                     	;# 
  2206  0E9C                     	;# 
  2207  0E9D                     	;# 
  2208  0E9E                     	;# 
  2209  0E9F                     	;# 
  2210  0EA0                     	;# 
  2211  0EA1                     	;# 
  2212  0EA2                     	;# 
  2213  0EA3                     	;# 
  2214  0EA4                     	;# 
  2215  0EA5                     	;# 
  2216  0EA6                     	;# 
  2217  0EA7                     	;# 
  2218  0F0F                     	;# 
  2219  0F10                     	;# 
  2220  0F11                     	;# 
  2221  0F12                     	;# 
  2222  0F13                     	;# 
  2223  0F14                     	;# 
  2224  0F15                     	;# 
  2225  0F16                     	;# 
  2226  0F17                     	;# 
  2227  0F18                     	;# 
  2228  0F19                     	;# 
  2229  0F1A                     	;# 
  2230  0F1B                     	;# 
  2231  0F1C                     	;# 
  2232  0F1D                     	;# 
  2233  0F1E                     	;# 
  2234  0F1F                     	;# 
  2235  0F20                     	;# 
  2236  0F21                     	;# 
  2237  0F22                     	;# 
  2238  0F23                     	;# 
  2239  0F24                     	;# 
  2240  0F25                     	;# 
  2241  0F26                     	;# 
  2242  0F27                     	;# 
  2243  0F28                     	;# 
  2244  0F29                     	;# 
  2245  0F2A                     	;# 
  2246  0F2B                     	;# 
  2247  0F2C                     	;# 
  2248  0F2D                     	;# 
  2249  0F2E                     	;# 
  2250  0F2F                     	;# 
  2251  0F30                     	;# 
  2252  0F31                     	;# 
  2253  0F32                     	;# 
  2254  0F33                     	;# 
  2255  0F34                     	;# 
  2256  0F35                     	;# 
  2257  0F36                     	;# 
  2258  0F37                     	;# 
  2259  0FE4                     	;# 
  2260  0FE5                     	;# 
  2261  0FE6                     	;# 
  2262  0FE7                     	;# 
  2263  0FE8                     	;# 
  2264  0FE9                     	;# 
  2265  0FEA                     	;# 
  2266  0FEB                     	;# 
  2267  0FED                     	;# 
  2268  0FEE                     	;# 
  2269  0FEF                     	;# 
  2270  0000                     	;# 
  2271  0001                     	;# 
  2272  0002                     	;# 
  2273  0003                     	;# 
  2274  0004                     	;# 
  2275  0005                     	;# 
  2276  0006                     	;# 
  2277  0007                     	;# 
  2278  0008                     	;# 
  2279  0009                     	;# 
  2280  000A                     	;# 
  2281  000B                     	;# 
  2282  000C                     	;# 
  2283  000D                     	;# 
  2284  000E                     	;# 
  2285  0010                     	;# 
  2286  0011                     	;# 
  2287  0012                     	;# 
  2288  0013                     	;# 
  2289  0014                     	;# 
  2290  0015                     	;# 
  2291  0016                     	;# 
  2292  0016                     	;# 
  2293  0017                     	;# 
  2294  0018                     	;# 
  2295  0019                     	;# 
  2296  001A                     	;# 
  2297  001A                     	;# 
  2298  001B                     	;# 
  2299  001B                     	;# 
  2300  001C                     	;# 
  2301  001D                     	;# 
  2302  001E                     	;# 
  2303  001F                     	;# 
  2304  008C                     	;# 
  2305  008D                     	;# 
  2306  008E                     	;# 
  2307  0090                     	;# 
  2308  0091                     	;# 
  2309  0092                     	;# 
  2310  0093                     	;# 
  2311  0094                     	;# 
  2312  0095                     	;# 
  2313  0096                     	;# 
  2314  0098                     	;# 
  2315  0099                     	;# 
  2316  009A                     	;# 
  2317  009B                     	;# 
  2318  009B                     	;# 
  2319  009C                     	;# 
  2320  009D                     	;# 
  2321  009E                     	;# 
  2322  009F                     	;# 
  2323  010C                     	;# 
  2324  010D                     	;# 
  2325  010E                     	;# 
  2326  0111                     	;# 
  2327  0112                     	;# 
  2328  0113                     	;# 
  2329  0114                     	;# 
  2330  0115                     	;# 
  2331  0116                     	;# 
  2332  0117                     	;# 
  2333  0118                     	;# 
  2334  0119                     	;# 
  2335  011C                     	;# 
  2336  018C                     	;# 
  2337  018D                     	;# 
  2338  018E                     	;# 
  2339  0191                     	;# 
  2340  0191                     	;# 
  2341  0192                     	;# 
  2342  0193                     	;# 
  2343  0193                     	;# 
  2344  0194                     	;# 
  2345  0195                     	;# 
  2346  0196                     	;# 
  2347  0197                     	;# 
  2348  0199                     	;# 
  2349  0199                     	;# 
  2350  0199                     	;# 
  2351  019A                     	;# 
  2352  019A                     	;# 
  2353  019A                     	;# 
  2354  019B                     	;# 
  2355  019B                     	;# 
  2356  019B                     	;# 
  2357  019B                     	;# 
  2358  019B                     	;# 
  2359  019C                     	;# 
  2360  019C                     	;# 
  2361  019C                     	;# 
  2362  019D                     	;# 
  2363  019D                     	;# 
  2364  019D                     	;# 
  2365  019E                     	;# 
  2366  019E                     	;# 
  2367  019E                     	;# 
  2368  019F                     	;# 
  2369  019F                     	;# 
  2370  019F                     	;# 
  2371  019F                     	;# 
  2372  019F                     	;# 
  2373  020C                     	;# 
  2374  020D                     	;# 
  2375  020E                     	;# 
  2376  0211                     	;# 
  2377  0211                     	;# 
  2378  0212                     	;# 
  2379  0212                     	;# 
  2380  0213                     	;# 
  2381  0213                     	;# 
  2382  0214                     	;# 
  2383  0214                     	;# 
  2384  0215                     	;# 
  2385  0215                     	;# 
  2386  0215                     	;# 
  2387  0215                     	;# 
  2388  0216                     	;# 
  2389  0216                     	;# 
  2390  0217                     	;# 
  2391  0217                     	;# 
  2392  028C                     	;# 
  2393  028D                     	;# 
  2394  028E                     	;# 
  2395  0291                     	;# 
  2396  0291                     	;# 
  2397  0292                     	;# 
  2398  0293                     	;# 
  2399  0294                     	;# 
  2400  0298                     	;# 
  2401  0298                     	;# 
  2402  0299                     	;# 
  2403  029A                     	;# 
  2404  029B                     	;# 
  2405  029E                     	;# 
  2406  030C                     	;# 
  2407  030D                     	;# 
  2408  030E                     	;# 
  2409  038C                     	;# 
  2410  038D                     	;# 
  2411  038E                     	;# 
  2412  0391                     	;# 
  2413  0392                     	;# 
  2414  0393                     	;# 
  2415  0394                     	;# 
  2416  0395                     	;# 
  2417  0396                     	;# 
  2418  0397                     	;# 
  2419  0398                     	;# 
  2420  0399                     	;# 
  2421  040E                     	;# 
  2422  0413                     	;# 
  2423  0413                     	;# 
  2424  0414                     	;# 
  2425  0414                     	;# 
  2426  0415                     	;# 
  2427  0416                     	;# 
  2428  0417                     	;# 
  2429  0418                     	;# 
  2430  041A                     	;# 
  2431  041A                     	;# 
  2432  041B                     	;# 
  2433  041B                     	;# 
  2434  041C                     	;# 
  2435  041D                     	;# 
  2436  041E                     	;# 
  2437  041F                     	;# 
  2438  0493                     	;# 
  2439  0494                     	;# 
  2440  0495                     	;# 
  2441  0496                     	;# 
  2442  049A                     	;# 
  2443  049B                     	;# 
  2444  049C                     	;# 
  2445  049D                     	;# 
  2446  058C                     	;# 
  2447  058C                     	;# 
  2448  058D                     	;# 
  2449  058E                     	;# 
  2450  058E                     	;# 
  2451  058F                     	;# 
  2452  0590                     	;# 
  2453  0590                     	;# 
  2454  0591                     	;# 
  2455  0592                     	;# 
  2456  0592                     	;# 
  2457  0593                     	;# 
  2458  0594                     	;# 
  2459  0594                     	;# 
  2460  0595                     	;# 
  2461  0596                     	;# 
  2462  0596                     	;# 
  2463  0597                     	;# 
  2464  0598                     	;# 
  2465  0599                     	;# 
  2466  059A                     	;# 
  2467  059B                     	;# 
  2468  059B                     	;# 
  2469  059C                     	;# 
  2470  059D                     	;# 
  2471  060C                     	;# 
  2472  060C                     	;# 
  2473  060D                     	;# 
  2474  060E                     	;# 
  2475  060F                     	;# 
  2476  060F                     	;# 
  2477  0610                     	;# 
  2478  0611                     	;# 
  2479  0612                     	;# 
  2480  0613                     	;# 
  2481  0614                     	;# 
  2482  0617                     	;# 
  2483  0618                     	;# 
  2484  0619                     	;# 
  2485  061A                     	;# 
  2486  061B                     	;# 
  2487  061C                     	;# 
  2488  0691                     	;# 
  2489  0692                     	;# 
  2490  0693                     	;# 
  2491  0694                     	;# 
  2492  0695                     	;# 
  2493  0696                     	;# 
  2494  0697                     	;# 
  2495  0699                     	;# 
  2496  069A                     	;# 
  2497  0711                     	;# 
  2498  0712                     	;# 
  2499  0713                     	;# 
  2500  0714                     	;# 
  2501  0715                     	;# 
  2502  0718                     	;# 
  2503  0718                     	;# 
  2504  0719                     	;# 
  2505  071A                     	;# 
  2506  071A                     	;# 
  2507  071B                     	;# 
  2508  071C                     	;# 
  2509  071D                     	;# 
  2510  0791                     	;# 
  2511  0791                     	;# 
  2512  0792                     	;# 
  2513  0793                     	;# 
  2514  0793                     	;# 
  2515  0794                     	;# 
  2516  0795                     	;# 
  2517  0795                     	;# 
  2518  0796                     	;# 
  2519  0797                     	;# 
  2520  0797                     	;# 
  2521  0798                     	;# 
  2522  0799                     	;# 
  2523  079A                     	;# 
  2524  080C                     	;# 
  2525  080C                     	;# 
  2526  080D                     	;# 
  2527  080E                     	;# 
  2528  080E                     	;# 
  2529  080F                     	;# 
  2530  0810                     	;# 
  2531  0810                     	;# 
  2532  0811                     	;# 
  2533  0812                     	;# 
  2534  0812                     	;# 
  2535  0813                     	;# 
  2536  0814                     	;# 
  2537  0815                     	;# 
  2538  0816                     	;# 
  2539  0817                     	;# 
  2540  0818                     	;# 
  2541  0819                     	;# 
  2542  081A                     	;# 
  2543  081A                     	;# 
  2544  081B                     	;# 
  2545  081C                     	;# 
  2546  081C                     	;# 
  2547  081D                     	;# 
  2548  088C                     	;# 
  2549  088D                     	;# 
  2550  088E                     	;# 
  2551  088F                     	;# 
  2552  088F                     	;# 
  2553  0890                     	;# 
  2554  0891                     	;# 
  2555  0892                     	;# 
  2556  0893                     	;# 
  2557  0893                     	;# 
  2558  0894                     	;# 
  2559  0895                     	;# 
  2560  0896                     	;# 
  2561  0897                     	;# 
  2562  0897                     	;# 
  2563  0898                     	;# 
  2564  0899                     	;# 
  2565  0D8C                     	;# 
  2566  0D8C                     	;# 
  2567  0D8D                     	;# 
  2568  0D8E                     	;# 
  2569  0D8F                     	;# 
  2570  0D8F                     	;# 
  2571  0D90                     	;# 
  2572  0D91                     	;# 
  2573  0D92                     	;# 
  2574  0D92                     	;# 
  2575  0D93                     	;# 
  2576  0D94                     	;# 
  2577  0D95                     	;# 
  2578  0D95                     	;# 
  2579  0D96                     	;# 
  2580  0D97                     	;# 
  2581  0D98                     	;# 
  2582  0D99                     	;# 
  2583  0D9A                     	;# 
  2584  0D9B                     	;# 
  2585  0D9C                     	;# 
  2586  0D9D                     	;# 
  2587  0D9E                     	;# 
  2588  0D9E                     	;# 
  2589  0D9F                     	;# 
  2590  0DA0                     	;# 
  2591  0DA1                     	;# 
  2592  0DA1                     	;# 
  2593  0DA2                     	;# 
  2594  0DA3                     	;# 
  2595  0DA4                     	;# 
  2596  0DA4                     	;# 
  2597  0DA5                     	;# 
  2598  0DA6                     	;# 
  2599  0DA7                     	;# 
  2600  0DA7                     	;# 
  2601  0DA8                     	;# 
  2602  0DA9                     	;# 
  2603  0DAA                     	;# 
  2604  0DAB                     	;# 
  2605  0DAC                     	;# 
  2606  0DAD                     	;# 
  2607  0DAE                     	;# 
  2608  0DAF                     	;# 
  2609  0E0F                     	;# 
  2610  0E10                     	;# 
  2611  0E11                     	;# 
  2612  0E12                     	;# 
  2613  0E13                     	;# 
  2614  0E14                     	;# 
  2615  0E15                     	;# 
  2616  0E16                     	;# 
  2617  0E17                     	;# 
  2618  0E18                     	;# 
  2619  0E19                     	;# 
  2620  0E1A                     	;# 
  2621  0E1B                     	;# 
  2622  0E1C                     	;# 
  2623  0E1D                     	;# 
  2624  0E1E                     	;# 
  2625  0E1F                     	;# 
  2626  0E20                     	;# 
  2627  0E21                     	;# 
  2628  0E22                     	;# 
  2629  0E23                     	;# 
  2630  0E24                     	;# 
  2631  0E25                     	;# 
  2632  0E26                     	;# 
  2633  0E27                     	;# 
  2634  0E28                     	;# 
  2635  0E29                     	;# 
  2636  0E2A                     	;# 
  2637  0E2B                     	;# 
  2638  0E2C                     	;# 
  2639  0E2D                     	;# 
  2640  0E2E                     	;# 
  2641  0E90                     	;# 
  2642  0E91                     	;# 
  2643  0E92                     	;# 
  2644  0E94                     	;# 
  2645  0E95                     	;# 
  2646  0E9C                     	;# 
  2647  0E9D                     	;# 
  2648  0E9E                     	;# 
  2649  0E9F                     	;# 
  2650  0EA0                     	;# 
  2651  0EA1                     	;# 
  2652  0EA2                     	;# 
  2653  0EA3                     	;# 
  2654  0EA4                     	;# 
  2655  0EA5                     	;# 
  2656  0EA6                     	;# 
  2657  0EA7                     	;# 
  2658  0F0F                     	;# 
  2659  0F10                     	;# 
  2660  0F11                     	;# 
  2661  0F12                     	;# 
  2662  0F13                     	;# 
  2663  0F14                     	;# 
  2664  0F15                     	;# 
  2665  0F16                     	;# 
  2666  0F17                     	;# 
  2667  0F18                     	;# 
  2668  0F19                     	;# 
  2669  0F1A                     	;# 
  2670  0F1B                     	;# 
  2671  0F1C                     	;# 
  2672  0F1D                     	;# 
  2673  0F1E                     	;# 
  2674  0F1F                     	;# 
  2675  0F20                     	;# 
  2676  0F21                     	;# 
  2677  0F22                     	;# 
  2678  0F23                     	;# 
  2679  0F24                     	;# 
  2680  0F25                     	;# 
  2681  0F26                     	;# 
  2682  0F27                     	;# 
  2683  0F28                     	;# 
  2684  0F29                     	;# 
  2685  0F2A                     	;# 
  2686  0F2B                     	;# 
  2687  0F2C                     	;# 
  2688  0F2D                     	;# 
  2689  0F2E                     	;# 
  2690  0F2F                     	;# 
  2691  0F30                     	;# 
  2692  0F31                     	;# 
  2693  0F32                     	;# 
  2694  0F33                     	;# 
  2695  0F34                     	;# 
  2696  0F35                     	;# 
  2697  0F36                     	;# 
  2698  0F37                     	;# 
  2699  0FE4                     	;# 
  2700  0FE5                     	;# 
  2701  0FE6                     	;# 
  2702  0FE7                     	;# 
  2703  0FE8                     	;# 
  2704  0FE9                     	;# 
  2705  0FEA                     	;# 
  2706  0FEB                     	;# 
  2707  0FED                     	;# 
  2708  0FEE                     	;# 
  2709  0FEF                     	;# 
  2710  0000                     	;# 
  2711  0001                     	;# 
  2712  0002                     	;# 
  2713  0003                     	;# 
  2714  0004                     	;# 
  2715  0005                     	;# 
  2716  0006                     	;# 
  2717  0007                     	;# 
  2718  0008                     	;# 
  2719  0009                     	;# 
  2720  000A                     	;# 
  2721  000B                     	;# 
  2722  000C                     	;# 
  2723  000D                     	;# 
  2724  000E                     	;# 
  2725  0010                     	;# 
  2726  0011                     	;# 
  2727  0012                     	;# 
  2728  0013                     	;# 
  2729  0014                     	;# 
  2730  0015                     	;# 
  2731  0016                     	;# 
  2732  0016                     	;# 
  2733  0017                     	;# 
  2734  0018                     	;# 
  2735  0019                     	;# 
  2736  001A                     	;# 
  2737  001A                     	;# 
  2738  001B                     	;# 
  2739  001B                     	;# 
  2740  001C                     	;# 
  2741  001D                     	;# 
  2742  001E                     	;# 
  2743  001F                     	;# 
  2744  008C                     	;# 
  2745  008D                     	;# 
  2746  008E                     	;# 
  2747  0090                     	;# 
  2748  0091                     	;# 
  2749  0092                     	;# 
  2750  0093                     	;# 
  2751  0094                     	;# 
  2752  0095                     	;# 
  2753  0096                     	;# 
  2754  0098                     	;# 
  2755  0099                     	;# 
  2756  009A                     	;# 
  2757  009B                     	;# 
  2758  009B                     	;# 
  2759  009C                     	;# 
  2760  009D                     	;# 
  2761  009E                     	;# 
  2762  009F                     	;# 
  2763  010C                     	;# 
  2764  010D                     	;# 
  2765  010E                     	;# 
  2766  0111                     	;# 
  2767  0112                     	;# 
  2768  0113                     	;# 
  2769  0114                     	;# 
  2770  0115                     	;# 
  2771  0116                     	;# 
  2772  0117                     	;# 
  2773  0118                     	;# 
  2774  0119                     	;# 
  2775  011C                     	;# 
  2776  018C                     	;# 
  2777  018D                     	;# 
  2778  018E                     	;# 
  2779  0191                     	;# 
  2780  0191                     	;# 
  2781  0192                     	;# 
  2782  0193                     	;# 
  2783  0193                     	;# 
  2784  0194                     	;# 
  2785  0195                     	;# 
  2786  0196                     	;# 
  2787  0197                     	;# 
  2788  0199                     	;# 
  2789  0199                     	;# 
  2790  0199                     	;# 
  2791  019A                     	;# 
  2792  019A                     	;# 
  2793  019A                     	;# 
  2794  019B                     	;# 
  2795  019B                     	;# 
  2796  019B                     	;# 
  2797  019B                     	;# 
  2798  019B                     	;# 
  2799  019C                     	;# 
  2800  019C                     	;# 
  2801  019C                     	;# 
  2802  019D                     	;# 
  2803  019D                     	;# 
  2804  019D                     	;# 
  2805  019E                     	;# 
  2806  019E                     	;# 
  2807  019E                     	;# 
  2808  019F                     	;# 
  2809  019F                     	;# 
  2810  019F                     	;# 
  2811  019F                     	;# 
  2812  019F                     	;# 
  2813  020C                     	;# 
  2814  020D                     	;# 
  2815  020E                     	;# 
  2816  0211                     	;# 
  2817  0211                     	;# 
  2818  0212                     	;# 
  2819  0212                     	;# 
  2820  0213                     	;# 
  2821  0213                     	;# 
  2822  0214                     	;# 
  2823  0214                     	;# 
  2824  0215                     	;# 
  2825  0215                     	;# 
  2826  0215                     	;# 
  2827  0215                     	;# 
  2828  0216                     	;# 
  2829  0216                     	;# 
  2830  0217                     	;# 
  2831  0217                     	;# 
  2832  028C                     	;# 
  2833  028D                     	;# 
  2834  028E                     	;# 
  2835  0291                     	;# 
  2836  0291                     	;# 
  2837  0292                     	;# 
  2838  0293                     	;# 
  2839  0294                     	;# 
  2840  0298                     	;# 
  2841  0298                     	;# 
  2842  0299                     	;# 
  2843  029A                     	;# 
  2844  029B                     	;# 
  2845  029E                     	;# 
  2846  030C                     	;# 
  2847  030D                     	;# 
  2848  030E                     	;# 
  2849  038C                     	;# 
  2850  038D                     	;# 
  2851  038E                     	;# 
  2852  0391                     	;# 
  2853  0392                     	;# 
  2854  0393                     	;# 
  2855  0394                     	;# 
  2856  0395                     	;# 
  2857  0396                     	;# 
  2858  0397                     	;# 
  2859  0398                     	;# 
  2860  0399                     	;# 
  2861  040E                     	;# 
  2862  0413                     	;# 
  2863  0413                     	;# 
  2864  0414                     	;# 
  2865  0414                     	;# 
  2866  0415                     	;# 
  2867  0416                     	;# 
  2868  0417                     	;# 
  2869  0418                     	;# 
  2870  041A                     	;# 
  2871  041A                     	;# 
  2872  041B                     	;# 
  2873  041B                     	;# 
  2874  041C                     	;# 
  2875  041D                     	;# 
  2876  041E                     	;# 
  2877  041F                     	;# 
  2878  0493                     	;# 
  2879  0494                     	;# 
  2880  0495                     	;# 
  2881  0496                     	;# 
  2882  049A                     	;# 
  2883  049B                     	;# 
  2884  049C                     	;# 
  2885  049D                     	;# 
  2886  058C                     	;# 
  2887  058C                     	;# 
  2888  058D                     	;# 
  2889  058E                     	;# 
  2890  058E                     	;# 
  2891  058F                     	;# 
  2892  0590                     	;# 
  2893  0590                     	;# 
  2894  0591                     	;# 
  2895  0592                     	;# 
  2896  0592                     	;# 
  2897  0593                     	;# 
  2898  0594                     	;# 
  2899  0594                     	;# 
  2900  0595                     	;# 
  2901  0596                     	;# 
  2902  0596                     	;# 
  2903  0597                     	;# 
  2904  0598                     	;# 
  2905  0599                     	;# 
  2906  059A                     	;# 
  2907  059B                     	;# 
  2908  059B                     	;# 
  2909  059C                     	;# 
  2910  059D                     	;# 
  2911  060C                     	;# 
  2912  060C                     	;# 
  2913  060D                     	;# 
  2914  060E                     	;# 
  2915  060F                     	;# 
  2916  060F                     	;# 
  2917  0610                     	;# 
  2918  0611                     	;# 
  2919  0612                     	;# 
  2920  0613                     	;# 
  2921  0614                     	;# 
  2922  0617                     	;# 
  2923  0618                     	;# 
  2924  0619                     	;# 
  2925  061A                     	;# 
  2926  061B                     	;# 
  2927  061C                     	;# 
  2928  0691                     	;# 
  2929  0692                     	;# 
  2930  0693                     	;# 
  2931  0694                     	;# 
  2932  0695                     	;# 
  2933  0696                     	;# 
  2934  0697                     	;# 
  2935  0699                     	;# 
  2936  069A                     	;# 
  2937  0711                     	;# 
  2938  0712                     	;# 
  2939  0713                     	;# 
  2940  0714                     	;# 
  2941  0715                     	;# 
  2942  0718                     	;# 
  2943  0718                     	;# 
  2944  0719                     	;# 
  2945  071A                     	;# 
  2946  071A                     	;# 
  2947  071B                     	;# 
  2948  071C                     	;# 
  2949  071D                     	;# 
  2950  0791                     	;# 
  2951  0791                     	;# 
  2952  0792                     	;# 
  2953  0793                     	;# 
  2954  0793                     	;# 
  2955  0794                     	;# 
  2956  0795                     	;# 
  2957  0795                     	;# 
  2958  0796                     	;# 
  2959  0797                     	;# 
  2960  0797                     	;# 
  2961  0798                     	;# 
  2962  0799                     	;# 
  2963  079A                     	;# 
  2964  080C                     	;# 
  2965  080C                     	;# 
  2966  080D                     	;# 
  2967  080E                     	;# 
  2968  080E                     	;# 
  2969  080F                     	;# 
  2970  0810                     	;# 
  2971  0810                     	;# 
  2972  0811                     	;# 
  2973  0812                     	;# 
  2974  0812                     	;# 
  2975  0813                     	;# 
  2976  0814                     	;# 
  2977  0815                     	;# 
  2978  0816                     	;# 
  2979  0817                     	;# 
  2980  0818                     	;# 
  2981  0819                     	;# 
  2982  081A                     	;# 
  2983  081A                     	;# 
  2984  081B                     	;# 
  2985  081C                     	;# 
  2986  081C                     	;# 
  2987  081D                     	;# 
  2988  088C                     	;# 
  2989  088D                     	;# 
  2990  088E                     	;# 
  2991  088F                     	;# 
  2992  088F                     	;# 
  2993  0890                     	;# 
  2994  0891                     	;# 
  2995  0892                     	;# 
  2996  0893                     	;# 
  2997  0893                     	;# 
  2998  0894                     	;# 
  2999  0895                     	;# 
  3000  0896                     	;# 
  3001  0897                     	;# 
  3002  0897                     	;# 
  3003  0898                     	;# 
  3004  0899                     	;# 
  3005  0D8C                     	;# 
  3006  0D8C                     	;# 
  3007  0D8D                     	;# 
  3008  0D8E                     	;# 
  3009  0D8F                     	;# 
  3010  0D8F                     	;# 
  3011  0D90                     	;# 
  3012  0D91                     	;# 
  3013  0D92                     	;# 
  3014  0D92                     	;# 
  3015  0D93                     	;# 
  3016  0D94                     	;# 
  3017  0D95                     	;# 
  3018  0D95                     	;# 
  3019  0D96                     	;# 
  3020  0D97                     	;# 
  3021  0D98                     	;# 
  3022  0D99                     	;# 
  3023  0D9A                     	;# 
  3024  0D9B                     	;# 
  3025  0D9C                     	;# 
  3026  0D9D                     	;# 
  3027  0D9E                     	;# 
  3028  0D9E                     	;# 
  3029  0D9F                     	;# 
  3030  0DA0                     	;# 
  3031  0DA1                     	;# 
  3032  0DA1                     	;# 
  3033  0DA2                     	;# 
  3034  0DA3                     	;# 
  3035  0DA4                     	;# 
  3036  0DA4                     	;# 
  3037  0DA5                     	;# 
  3038  0DA6                     	;# 
  3039  0DA7                     	;# 
  3040  0DA7                     	;# 
  3041  0DA8                     	;# 
  3042  0DA9                     	;# 
  3043  0DAA                     	;# 
  3044  0DAB                     	;# 
  3045  0DAC                     	;# 
  3046  0DAD                     	;# 
  3047  0DAE                     	;# 
  3048  0DAF                     	;# 
  3049  0E0F                     	;# 
  3050  0E10                     	;# 
  3051  0E11                     	;# 
  3052  0E12                     	;# 
  3053  0E13                     	;# 
  3054  0E14                     	;# 
  3055  0E15                     	;# 
  3056  0E16                     	;# 
  3057  0E17                     	;# 
  3058  0E18                     	;# 
  3059  0E19                     	;# 
  3060  0E1A                     	;# 
  3061  0E1B                     	;# 
  3062  0E1C                     	;# 
  3063  0E1D                     	;# 
  3064  0E1E                     	;# 
  3065  0E1F                     	;# 
  3066  0E20                     	;# 
  3067  0E21                     	;# 
  3068  0E22                     	;# 
  3069  0E23                     	;# 
  3070  0E24                     	;# 
  3071  0E25                     	;# 
  3072  0E26                     	;# 
  3073  0E27                     	;# 
  3074  0E28                     	;# 
  3075  0E29                     	;# 
  3076  0E2A                     	;# 
  3077  0E2B                     	;# 
  3078  0E2C                     	;# 
  3079  0E2D                     	;# 
  3080  0E2E                     	;# 
  3081  0E90                     	;# 
  3082  0E91                     	;# 
  3083  0E92                     	;# 
  3084  0E94                     	;# 
  3085  0E95                     	;# 
  3086  0E9C                     	;# 
  3087  0E9D                     	;# 
  3088  0E9E                     	;# 
  3089  0E9F                     	;# 
  3090  0EA0                     	;# 
  3091  0EA1                     	;# 
  3092  0EA2                     	;# 
  3093  0EA3                     	;# 
  3094  0EA4                     	;# 
  3095  0EA5                     	;# 
  3096  0EA6                     	;# 
  3097  0EA7                     	;# 
  3098  0F0F                     	;# 
  3099  0F10                     	;# 
  3100  0F11                     	;# 
  3101  0F12                     	;# 
  3102  0F13                     	;# 
  3103  0F14                     	;# 
  3104  0F15                     	;# 
  3105  0F16                     	;# 
  3106  0F17                     	;# 
  3107  0F18                     	;# 
  3108  0F19                     	;# 
  3109  0F1A                     	;# 
  3110  0F1B                     	;# 
  3111  0F1C                     	;# 
  3112  0F1D                     	;# 
  3113  0F1E                     	;# 
  3114  0F1F                     	;# 
  3115  0F20                     	;# 
  3116  0F21                     	;# 
  3117  0F22                     	;# 
  3118  0F23                     	;# 
  3119  0F24                     	;# 
  3120  0F25                     	;# 
  3121  0F26                     	;# 
  3122  0F27                     	;# 
  3123  0F28                     	;# 
  3124  0F29                     	;# 
  3125  0F2A                     	;# 
  3126  0F2B                     	;# 
  3127  0F2C                     	;# 
  3128  0F2D                     	;# 
  3129  0F2E                     	;# 
  3130  0F2F                     	;# 
  3131  0F30                     	;# 
  3132  0F31                     	;# 
  3133  0F32                     	;# 
  3134  0F33                     	;# 
  3135  0F34                     	;# 
  3136  0F35                     	;# 
  3137  0F36                     	;# 
  3138  0F37                     	;# 
  3139  0FE4                     	;# 
  3140  0FE5                     	;# 
  3141  0FE6                     	;# 
  3142  0FE7                     	;# 
  3143  0FE8                     	;# 
  3144  0FE9                     	;# 
  3145  0FEA                     	;# 
  3146  0FEB                     	;# 
  3147  0FED                     	;# 
  3148  0FEE                     	;# 
  3149  0FEF                     	;# 
  3150  0000                     	;# 
  3151  0001                     	;# 
  3152  0002                     	;# 
  3153  0003                     	;# 
  3154  0004                     	;# 
  3155  0005                     	;# 
  3156  0006                     	;# 
  3157  0007                     	;# 
  3158  0008                     	;# 
  3159  0009                     	;# 
  3160  000A                     	;# 
  3161  000B                     	;# 
  3162  000C                     	;# 
  3163  000D                     	;# 
  3164  000E                     	;# 
  3165  0010                     	;# 
  3166  0011                     	;# 
  3167  0012                     	;# 
  3168  0013                     	;# 
  3169  0014                     	;# 
  3170  0015                     	;# 
  3171  0016                     	;# 
  3172  0016                     	;# 
  3173  0017                     	;# 
  3174  0018                     	;# 
  3175  0019                     	;# 
  3176  001A                     	;# 
  3177  001A                     	;# 
  3178  001B                     	;# 
  3179  001B                     	;# 
  3180  001C                     	;# 
  3181  001D                     	;# 
  3182  001E                     	;# 
  3183  001F                     	;# 
  3184  008C                     	;# 
  3185  008D                     	;# 
  3186  008E                     	;# 
  3187  0090                     	;# 
  3188  0091                     	;# 
  3189  0092                     	;# 
  3190  0093                     	;# 
  3191  0094                     	;# 
  3192  0095                     	;# 
  3193  0096                     	;# 
  3194  0098                     	;# 
  3195  0099                     	;# 
  3196  009A                     	;# 
  3197  009B                     	;# 
  3198  009B                     	;# 
  3199  009C                     	;# 
  3200  009D                     	;# 
  3201  009E                     	;# 
  3202  009F                     	;# 
  3203  010C                     	;# 
  3204  010D                     	;# 
  3205  010E                     	;# 
  3206  0111                     	;# 
  3207  0112                     	;# 
  3208  0113                     	;# 
  3209  0114                     	;# 
  3210  0115                     	;# 
  3211  0116                     	;# 
  3212  0117                     	;# 
  3213  0118                     	;# 
  3214  0119                     	;# 
  3215  011C                     	;# 
  3216  018C                     	;# 
  3217  018D                     	;# 
  3218  018E                     	;# 
  3219  0191                     	;# 
  3220  0191                     	;# 
  3221  0192                     	;# 
  3222  0193                     	;# 
  3223  0193                     	;# 
  3224  0194                     	;# 
  3225  0195                     	;# 
  3226  0196                     	;# 
  3227  0197                     	;# 
  3228  0199                     	;# 
  3229  0199                     	;# 
  3230  0199                     	;# 
  3231  019A                     	;# 
  3232  019A                     	;# 
  3233  019A                     	;# 
  3234  019B                     	;# 
  3235  019B                     	;# 
  3236  019B                     	;# 
  3237  019B                     	;# 
  3238  019B                     	;# 
  3239  019C                     	;# 
  3240  019C                     	;# 
  3241  019C                     	;# 
  3242  019D                     	;# 
  3243  019D                     	;# 
  3244  019D                     	;# 
  3245  019E                     	;# 
  3246  019E                     	;# 
  3247  019E                     	;# 
  3248  019F                     	;# 
  3249  019F                     	;# 
  3250  019F                     	;# 
  3251  019F                     	;# 
  3252  019F                     	;# 
  3253  020C                     	;# 
  3254  020D                     	;# 
  3255  020E                     	;# 
  3256  0211                     	;# 
  3257  0211                     	;# 
  3258  0212                     	;# 
  3259  0212                     	;# 
  3260  0213                     	;# 
  3261  0213                     	;# 
  3262  0214                     	;# 
  3263  0214                     	;# 
  3264  0215                     	;# 
  3265  0215                     	;# 
  3266  0215                     	;# 
  3267  0215                     	;# 
  3268  0216                     	;# 
  3269  0216                     	;# 
  3270  0217                     	;# 
  3271  0217                     	;# 
  3272  028C                     	;# 
  3273  028D                     	;# 
  3274  028E                     	;# 
  3275  0291                     	;# 
  3276  0291                     	;# 
  3277  0292                     	;# 
  3278  0293                     	;# 
  3279  0294                     	;# 
  3280  0298                     	;# 
  3281  0298                     	;# 
  3282  0299                     	;# 
  3283  029A                     	;# 
  3284  029B                     	;# 
  3285  029E                     	;# 
  3286  030C                     	;# 
  3287  030D                     	;# 
  3288  030E                     	;# 
  3289  038C                     	;# 
  3290  038D                     	;# 
  3291  038E                     	;# 
  3292  0391                     	;# 
  3293  0392                     	;# 
  3294  0393                     	;# 
  3295  0394                     	;# 
  3296  0395                     	;# 
  3297  0396                     	;# 
  3298  0397                     	;# 
  3299  0398                     	;# 
  3300  0399                     	;# 
  3301  040E                     	;# 
  3302  0413                     	;# 
  3303  0413                     	;# 
  3304  0414                     	;# 
  3305  0414                     	;# 
  3306  0415                     	;# 
  3307  0416                     	;# 
  3308  0417                     	;# 
  3309  0418                     	;# 
  3310  041A                     	;# 
  3311  041A                     	;# 
  3312  041B                     	;# 
  3313  041B                     	;# 
  3314  041C                     	;# 
  3315  041D                     	;# 
  3316  041E                     	;# 
  3317  041F                     	;# 
  3318  0493                     	;# 
  3319  0494                     	;# 
  3320  0495                     	;# 
  3321  0496                     	;# 
  3322  049A                     	;# 
  3323  049B                     	;# 
  3324  049C                     	;# 
  3325  049D                     	;# 
  3326  058C                     	;# 
  3327  058C                     	;# 
  3328  058D                     	;# 
  3329  058E                     	;# 
  3330  058E                     	;# 
  3331  058F                     	;# 
  3332  0590                     	;# 
  3333  0590                     	;# 
  3334  0591                     	;# 
  3335  0592                     	;# 
  3336  0592                     	;# 
  3337  0593                     	;# 
  3338  0594                     	;# 
  3339  0594                     	;# 
  3340  0595                     	;# 
  3341  0596                     	;# 
  3342  0596                     	;# 
  3343  0597                     	;# 
  3344  0598                     	;# 
  3345  0599                     	;# 
  3346  059A                     	;# 
  3347  059B                     	;# 
  3348  059B                     	;# 
  3349  059C                     	;# 
  3350  059D                     	;# 
  3351  060C                     	;# 
  3352  060C                     	;# 
  3353  060D                     	;# 
  3354  060E                     	;# 
  3355  060F                     	;# 
  3356  060F                     	;# 
  3357  0610                     	;# 
  3358  0611                     	;# 
  3359  0612                     	;# 
  3360  0613                     	;# 
  3361  0614                     	;# 
  3362  0617                     	;# 
  3363  0618                     	;# 
  3364  0619                     	;# 
  3365  061A                     	;# 
  3366  061B                     	;# 
  3367  061C                     	;# 
  3368  0691                     	;# 
  3369  0692                     	;# 
  3370  0693                     	;# 
  3371  0694                     	;# 
  3372  0695                     	;# 
  3373  0696                     	;# 
  3374  0697                     	;# 
  3375  0699                     	;# 
  3376  069A                     	;# 
  3377  0711                     	;# 
  3378  0712                     	;# 
  3379  0713                     	;# 
  3380  0714                     	;# 
  3381  0715                     	;# 
  3382  0718                     	;# 
  3383  0718                     	;# 
  3384  0719                     	;# 
  3385  071A                     	;# 
  3386  071A                     	;# 
  3387  071B                     	;# 
  3388  071C                     	;# 
  3389  071D                     	;# 
  3390  0791                     	;# 
  3391  0791                     	;# 
  3392  0792                     	;# 
  3393  0793                     	;# 
  3394  0793                     	;# 
  3395  0794                     	;# 
  3396  0795                     	;# 
  3397  0795                     	;# 
  3398  0796                     	;# 
  3399  0797                     	;# 
  3400  0797                     	;# 
  3401  0798                     	;# 
  3402  0799                     	;# 
  3403  079A                     	;# 
  3404  080C                     	;# 
  3405  080C                     	;# 
  3406  080D                     	;# 
  3407  080E                     	;# 
  3408  080E                     	;# 
  3409  080F                     	;# 
  3410  0810                     	;# 
  3411  0810                     	;# 
  3412  0811                     	;# 
  3413  0812                     	;# 
  3414  0812                     	;# 
  3415  0813                     	;# 
  3416  0814                     	;# 
  3417  0815                     	;# 
  3418  0816                     	;# 
  3419  0817                     	;# 
  3420  0818                     	;# 
  3421  0819                     	;# 
  3422  081A                     	;# 
  3423  081A                     	;# 
  3424  081B                     	;# 
  3425  081C                     	;# 
  3426  081C                     	;# 
  3427  081D                     	;# 
  3428  088C                     	;# 
  3429  088D                     	;# 
  3430  088E                     	;# 
  3431  088F                     	;# 
  3432  088F                     	;# 
  3433  0890                     	;# 
  3434  0891                     	;# 
  3435  0892                     	;# 
  3436  0893                     	;# 
  3437  0893                     	;# 
  3438  0894                     	;# 
  3439  0895                     	;# 
  3440  0896                     	;# 
  3441  0897                     	;# 
  3442  0897                     	;# 
  3443  0898                     	;# 
  3444  0899                     	;# 
  3445  0D8C                     	;# 
  3446  0D8C                     	;# 
  3447  0D8D                     	;# 
  3448  0D8E                     	;# 
  3449  0D8F                     	;# 
  3450  0D8F                     	;# 
  3451  0D90                     	;# 
  3452  0D91                     	;# 
  3453  0D92                     	;# 
  3454  0D92                     	;# 
  3455  0D93                     	;# 
  3456  0D94                     	;# 
  3457  0D95                     	;# 
  3458  0D95                     	;# 
  3459  0D96                     	;# 
  3460  0D97                     	;# 
  3461  0D98                     	;# 
  3462  0D99                     	;# 
  3463  0D9A                     	;# 
  3464  0D9B                     	;# 
  3465  0D9C                     	;# 
  3466  0D9D                     	;# 
  3467  0D9E                     	;# 
  3468  0D9E                     	;# 
  3469  0D9F                     	;# 
  3470  0DA0                     	;# 
  3471  0DA1                     	;# 
  3472  0DA1                     	;# 
  3473  0DA2                     	;# 
  3474  0DA3                     	;# 
  3475  0DA4                     	;# 
  3476  0DA4                     	;# 
  3477  0DA5                     	;# 
  3478  0DA6                     	;# 
  3479  0DA7                     	;# 
  3480  0DA7                     	;# 
  3481  0DA8                     	;# 
  3482  0DA9                     	;# 
  3483  0DAA                     	;# 
  3484  0DAB                     	;# 
  3485  0DAC                     	;# 
  3486  0DAD                     	;# 
  3487  0DAE                     	;# 
  3488  0DAF                     	;# 
  3489  0E0F                     	;# 
  3490  0E10                     	;# 
  3491  0E11                     	;# 
  3492  0E12                     	;# 
  3493  0E13                     	;# 
  3494  0E14                     	;# 
  3495  0E15                     	;# 
  3496  0E16                     	;# 
  3497  0E17                     	;# 
  3498  0E18                     	;# 
  3499  0E19                     	;# 
  3500  0E1A                     	;# 
  3501  0E1B                     	;# 
  3502  0E1C                     	;# 
  3503  0E1D                     	;# 
  3504  0E1E                     	;# 
  3505  0E1F                     	;# 
  3506  0E20                     	;# 
  3507  0E21                     	;# 
  3508  0E22                     	;# 
  3509  0E23                     	;# 
  3510  0E24                     	;# 
  3511  0E25                     	;# 
  3512  0E26                     	;# 
  3513  0E27                     	;# 
  3514  0E28                     	;# 
  3515  0E29                     	;# 
  3516  0E2A                     	;# 
  3517  0E2B                     	;# 
  3518  0E2C                     	;# 
  3519  0E2D                     	;# 
  3520  0E2E                     	;# 
  3521  0E90                     	;# 
  3522  0E91                     	;# 
  3523  0E92                     	;# 
  3524  0E94                     	;# 
  3525  0E95                     	;# 
  3526  0E9C                     	;# 
  3527  0E9D                     	;# 
  3528  0E9E                     	;# 
  3529  0E9F                     	;# 
  3530  0EA0                     	;# 
  3531  0EA1                     	;# 
  3532  0EA2                     	;# 
  3533  0EA3                     	;# 
  3534  0EA4                     	;# 
  3535  0EA5                     	;# 
  3536  0EA6                     	;# 
  3537  0EA7                     	;# 
  3538  0F0F                     	;# 
  3539  0F10                     	;# 
  3540  0F11                     	;# 
  3541  0F12                     	;# 
  3542  0F13                     	;# 
  3543  0F14                     	;# 
  3544  0F15                     	;# 
  3545  0F16                     	;# 
  3546  0F17                     	;# 
  3547  0F18                     	;# 
  3548  0F19                     	;# 
  3549  0F1A                     	;# 
  3550  0F1B                     	;# 
  3551  0F1C                     	;# 
  3552  0F1D                     	;# 
  3553  0F1E                     	;# 
  3554  0F1F                     	;# 
  3555  0F20                     	;# 
  3556  0F21                     	;# 
  3557  0F22                     	;# 
  3558  0F23                     	;# 
  3559  0F24                     	;# 
  3560  0F25                     	;# 
  3561  0F26                     	;# 
  3562  0F27                     	;# 
  3563  0F28                     	;# 
  3564  0F29                     	;# 
  3565  0F2A                     	;# 
  3566  0F2B                     	;# 
  3567  0F2C                     	;# 
  3568  0F2D                     	;# 
  3569  0F2E                     	;# 
  3570  0F2F                     	;# 
  3571  0F30                     	;# 
  3572  0F31                     	;# 
  3573  0F32                     	;# 
  3574  0F33                     	;# 
  3575  0F34                     	;# 
  3576  0F35                     	;# 
  3577  0F36                     	;# 
  3578  0F37                     	;# 
  3579  0FE4                     	;# 
  3580  0FE5                     	;# 
  3581  0FE6                     	;# 
  3582  0FE7                     	;# 
  3583  0FE8                     	;# 
  3584  0FE9                     	;# 
  3585  0FEA                     	;# 
  3586  0FEB                     	;# 
  3587  0FED                     	;# 
  3588  0FEE                     	;# 
  3589  0FEF                     	;# 
  3590                           
  3591                           	psect	nvBANK0
  3592  005F                     __pnvBANK0:	
  3593  005F                     _TMR0_InterruptHandler:	
  3594  005F                     	ds	2
  3595  0061                     _timer0ReloadVal:	
  3596  0061                     	ds	1
  3597  0011                     _PIR2bits	set	17
  3598  0015                     _TMR0	set	21
  3599  0010                     _PIR1bits	set	16
  3600  000B                     _INTCONbits	set	11
  3601  0090                     _PIE1bits	set	144
  3602  0091                     _PIE2bits	set	145
  3603  0098                     _OSCTUNE	set	152
  3604  0099                     _OSCCON	set	153
  3605  0095                     _OPTION_REGbits	set	149
  3606  008E                     _TRISC	set	142
  3607  008D                     _TRISB	set	141
  3608  008C                     _TRISA	set	140
  3609  0095                     _OPTION_REG	set	149
  3610  0116                     _BORCON	set	278
  3611  010E                     _LATC	set	270
  3612  010D                     _LATB	set	269
  3613  010C                     _LATA	set	268
  3614  010E                     _LATCbits	set	270
  3615  018C                     _ANSELA	set	396
  3616  018D                     _ANSELB	set	397
  3617  018E                     _ANSELC	set	398
  3618  0215                     _SSP1CON1bits	set	533
  3619  0212                     _SSP1ADD	set	530
  3620  0217                     _SSP1CON3	set	535
  3621  0215                     _SSP1CON1	set	533
  3622  0214                     _SSP1STAT	set	532
  3623  020E                     _WPUC	set	526
  3624  020C                     _WPUA	set	524
  3625  020D                     _WPUB	set	525
  3626  0211                     _SSPBUF	set	529
  3627  0214                     _SSP1STATbits	set	532
  3628  0211                     _SSP1BUF	set	529
  3629  0216                     _SSP1CON2bits	set	534
  3630  028E                     _ODCONC	set	654
  3631  028D                     _ODCONB	set	653
  3632  028C                     _ODCONA	set	652
  3633  0E21                     _SSPDATPPS	set	3617
  3634  0E20                     _SSPCLKPPS	set	3616
  3635  0E9C                     _RB4PPS	set	3740
  3636  0E9E                     _RB6PPS	set	3742
  3637                           
  3638                           ; #config settings
  3639  0000                     
  3640                           	psect	cinit
  3641  002A                     start_initialization:	
  3642  002A                     __initialization:	
  3643                           
  3644                           ; Clear objects allocated to BANK0
  3645  002A  3020               	movlw	low __pbssBANK0
  3646  002B  0084               	movwf	4
  3647  002C  3000               	movlw	high __pbssBANK0
  3648  002D  0085               	movwf	5
  3649  002E  3026               	movlw	38
  3650  002F  3183  238E  3180   	fcall	clear_ram0
  3651                           
  3652                           ; Clear objects allocated to BANK1
  3653  0032  30AE               	movlw	low __pbssBANK1
  3654  0033  0084               	movwf	4
  3655  0034  3000               	movlw	high __pbssBANK1
  3656  0035  0085               	movwf	5
  3657  0036  3007               	movlw	7
  3658  0037  3183  238E         	fcall	clear_ram0
  3659  0039                     end_of_initialization:	
  3660                           ;End of C runtime variable initialization code
  3661                           
  3662  0039                     __end_of__initialization:	
  3663  0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3664  003A  0020               	movlb	0
  3665  003B  3183  2B3A         	ljmp	_main	;jump to C main() function
  3666                           
  3667                           	psect	bssBANK0
  3668  0020                     __pbssBANK0:	
  3669  0020                     _i2c_object:	
  3670  0020                     	ds	5
  3671  0025                     SPI_Read@F12019:	
  3672  0025                     	ds	4
  3673  0029                     ADXL345_SetRegisterValue@F90:	
  3674  0029                     	ds	2
  3675  002B                     ADXL345_GetRegisterValue@F85:	
  3676  002B                     	ds	2
  3677  002D                     TMR0_ISR@CountCallBack:	
  3678  002D                     	ds	2
  3679  002F                     _fullResolutionSet:	
  3680  002F                     	ds	1
  3681  0030                     _selectedRange:	
  3682  0030                     	ds	1
  3683  0031                     _communicationType:	
  3684  0031                     	ds	1
  3685  0032                     I2C_ISR@i2c_10bit_address_restart:	
  3686  0032                     	ds	1
  3687  0033                     I2C_ISR@i2c_bytes_left:	
  3688  0033                     	ds	1
  3689  0034                     I2C_ISR@pi2c_buf_ptr:	
  3690  0034                     	ds	1
  3691  0035                     _p_i2c_current:	
  3692  0035                     	ds	1
  3693  0036                     _p_i2c_trb_current:	
  3694  0036                     	ds	1
  3695  0037                     _i2c_trb_count:	
  3696  0037                     	ds	1
  3697  0038                     _i2c_state:	
  3698  0038                     	ds	1
  3699  0039                     I2C_MasterRead@trBlock:	
  3700  0039                     	ds	4
  3701  003D                     I2C_MasterWrite@trBlock:	
  3702  003D                     	ds	4
  3703  0041                     _i2c_tr_queue:	
  3704  0041                     	ds	3
  3705  0044                     I2C_ISR@i2c_address:	
  3706  0044                     	ds	2
  3707                           
  3708                           	psect	bssBANK1
  3709  00AE                     __pbssBANK1:	
  3710  00AE                     ADXL345_GetXyz@F101:	
  3711  00AE                     	ds	7
  3712                           
  3713                           	psect	clrtext
  3714  038E                     clear_ram0:	
  3715                           ;	Called with FSR0 containing the base address, and
  3716                           ;	WREG with the size to clear
  3717                           
  3718  038E  0064               	clrwdt	;clear the watchdog before getting into this loop
  3719  038F                     clrloop0:	
  3720  038F  0180               	clrf	0	;clear RAM location pointed to by FSR
  3721  0390  3101               	addfsr 0,1
  3722  0391  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3723  0392  2B8F               	goto	clrloop0	;have we reached the end yet?
  3724  0393  3400               	retlw	0	;all done for this memory range, return
  3725                           
  3726                           	psect	cstackBANK1
  3727  00A0                     __pcstackBANK1:	
  3728  00A0                     main@AccelX:	
  3729                           
  3730                           ; 2 bytes @ 0x0
  3731  00A0                     	ds	2
  3732  00A2                     main@AccelY:	
  3733                           
  3734                           ; 2 bytes @ 0x2
  3735  00A2                     	ds	2
  3736  00A4                     main@AccelZ:	
  3737                           
  3738                           ; 2 bytes @ 0x4
  3739  00A4                     	ds	2
  3740  00A6                     main@AccelXtemp:	
  3741                           
  3742                           ; 2 bytes @ 0x6
  3743  00A6                     	ds	2
  3744  00A8                     main@AccelYtemp:	
  3745                           
  3746                           ; 2 bytes @ 0x8
  3747  00A8                     	ds	2
  3748  00AA                     main@AccelZtemp:	
  3749                           
  3750                           ; 2 bytes @ 0xA
  3751  00AA                     	ds	2
  3752  00AC                     main@i2cStatus:	
  3753                           
  3754                           ; 1 bytes @ 0xC
  3755  00AC                     	ds	1
  3756  00AD                     main@counter:	
  3757                           
  3758                           ; 1 bytes @ 0xD
  3759  00AD                     	ds	1
  3760                           
  3761                           	psect	cstackCOMMON
  3762  0070                     __pcstackCOMMON:	
  3763  0070                     ?_SYSTEM_Initialize:	
  3764  0070                     ?_ADXL345_Init:	
  3765                           ; 1 bytes @ 0x0
  3766                           
  3767  0070                     ?_TMR0_DefaultInterruptHandler:	
  3768                           ; 1 bytes @ 0x0
  3769                           
  3770  0070                     ??_TMR0_DefaultInterruptHandler:	
  3771                           ; 1 bytes @ 0x0
  3772                           
  3773  0070                     ?_TMR0_CallBack:	
  3774                           ; 1 bytes @ 0x0
  3775                           
  3776  0070                     ?_ADXL345_GetRegisterValue:	
  3777                           ; 1 bytes @ 0x0
  3778                           
  3779  0070                     ?_OSCILLATOR_Initialize:	
  3780                           ; 1 bytes @ 0x0
  3781                           
  3782  0070                     ?_I2C_BusCollisionISR:	
  3783                           ; 1 bytes @ 0x0
  3784                           
  3785  0070                     ??_I2C_BusCollisionISR:	
  3786                           ; 1 bytes @ 0x0
  3787                           
  3788  0070                     ?_main:	
  3789                           ; 1 bytes @ 0x0
  3790                           
  3791  0070                     ?_TMR0_Initialize:	
  3792                           ; 1 bytes @ 0x0
  3793                           
  3794  0070                     ?_TMR0_ISR:	
  3795                           ; 1 bytes @ 0x0
  3796                           
  3797  0070                     ?_PIN_MANAGER_Initialize:	
  3798                           ; 1 bytes @ 0x0
  3799                           
  3800  0070                     ?_INTERRUPT_InterruptManager:	
  3801                           ; 1 bytes @ 0x0
  3802                           
  3803  0070                     ?i1_ADXL345_GetRegisterValue:	
  3804                           ; 1 bytes @ 0x0
  3805                           
  3806  0070                     ?i1_I2C_Write:	
  3807                           ; 1 bytes @ 0x0
  3808                           
  3809  0070                     ?i1_I2C_Read:	
  3810                           ; 1 bytes @ 0x0
  3811                           
  3812  0070                     ?i1_SPI_Read:	
  3813                           ; 1 bytes @ 0x0
  3814                           
  3815  0070                     SPI_Init@lsbFirst:	
  3816                           ; 1 bytes @ 0x0
  3817                           
  3818  0070                     i1I2C_Write@dataBuffer:	
  3819                           ; 1 bytes @ 0x0
  3820                           
  3821  0070                     i1I2C_Read@dataBuffer:	
  3822                           ; 1 bytes @ 0x0
  3823                           
  3824  0070                     i1SPI_Read@data:	
  3825                           ; 1 bytes @ 0x0
  3826                           
  3827                           
  3828                           ; 1 bytes @ 0x0
  3829  0070                     	ds	1
  3830  0071                     i1I2C_Write@bytesNumber:	
  3831  0071                     i1I2C_Read@bytesNumber:	
  3832                           ; 1 bytes @ 0x1
  3833                           
  3834  0071                     i1SPI_Read@bytesNumber:	
  3835                           ; 1 bytes @ 0x1
  3836                           
  3837                           
  3838                           ; 1 bytes @ 0x1
  3839  0071                     	ds	1
  3840  0072                     ??i1_SPI_Read:	
  3841  0072                     i1I2C_Write@stopBit:	
  3842                           ; 1 bytes @ 0x2
  3843                           
  3844  0072                     i1I2C_Read@stopBit:	
  3845                           ; 1 bytes @ 0x2
  3846                           
  3847                           
  3848                           ; 1 bytes @ 0x2
  3849  0072                     	ds	1
  3850  0073                     ??i1_I2C_Write:	
  3851  0073                     ??i1_I2C_Read:	
  3852                           ; 1 bytes @ 0x3
  3853                           
  3854                           
  3855                           ; 1 bytes @ 0x3
  3856  0073                     	ds	1
  3857  0074                     i1I2C_Write@status:	
  3858  0074                     i1SPI_Read@writeBuffer:	
  3859                           ; 1 bytes @ 0x4
  3860                           
  3861                           
  3862                           ; 4 bytes @ 0x4
  3863  0074                     	ds	1
  3864  0075                     i1I2C_Write@slaveAddress:	
  3865  0075                     i1I2C_Read@status:	
  3866                           ; 1 bytes @ 0x5
  3867                           
  3868                           
  3869                           ; 1 bytes @ 0x5
  3870  0075                     	ds	1
  3871  0076                     i1I2C_Write@acknowledge:	
  3872  0076                     i1I2C_Read@slaveAddress:	
  3873                           ; 1 bytes @ 0x6
  3874                           
  3875                           
  3876                           ; 1 bytes @ 0x6
  3877  0076                     	ds	1
  3878  0077                     i1I2C_Write@byte:	
  3879  0077                     i1I2C_Read@acknowledge:	
  3880                           ; 1 bytes @ 0x7
  3881                           
  3882                           
  3883                           ; 1 bytes @ 0x7
  3884  0077                     	ds	1
  3885  0078                     i1I2C_Read@byte:	
  3886  0078                     i1SPI_Read@slaveDeviceId:	
  3887                           ; 1 bytes @ 0x8
  3888                           
  3889                           
  3890                           ; 1 bytes @ 0x8
  3891  0078                     	ds	1
  3892  0079                     i1SPI_Read@byte:	
  3893                           
  3894                           ; 1 bytes @ 0x9
  3895  0079                     	ds	1
  3896  007A                     ??i1_ADXL345_GetRegisterValue:	
  3897                           
  3898                           ; 1 bytes @ 0xA
  3899  007A                     	ds	2
  3900  007C                     ??_TMR0_CallBack:	
  3901                           
  3902                           ; 1 bytes @ 0xC
  3903  007C                     	ds	1
  3904  007D                     TMR0_CallBack@DeviceID:	
  3905                           
  3906                           ; 1 bytes @ 0xD
  3907  007D                     	ds	1
  3908  007E                     ??_TMR0_ISR:	
  3909                           
  3910                           	psect	cstackBANK0
  3911  0046                     __pcstackBANK0:	
  3912                           ; 1 bytes @ 0xE
  3913                           
  3914  0046                     i1ADXL345_GetRegisterValue@dataBuffer:	
  3915                           
  3916                           ; 2 bytes @ 0x0
  3917  0046                     	ds	2
  3918  0048                     i1ADXL345_GetRegisterValue@registerAddress:	
  3919                           
  3920                           ; 1 bytes @ 0x2
  3921  0048                     	ds	1
  3922  0049                     i1ADXL345_GetRegisterValue@registerValue:	
  3923                           
  3924                           ; 1 bytes @ 0x3
  3925  0049                     	ds	1
  3926  004A                     ??_INTERRUPT_InterruptManager:	
  3927                           
  3928                           ; 1 bytes @ 0x4
  3929  004A                     	ds	1
  3930  004B                     ?_TMR0_SetInterruptHandler:	
  3931  004B                     ??_OSCILLATOR_Initialize:	
  3932                           ; 1 bytes @ 0x5
  3933                           
  3934  004B                     ?_SPI_Read:	
  3935                           ; 1 bytes @ 0x5
  3936                           
  3937  004B                     ?_I2C_Write:	
  3938                           ; 1 bytes @ 0x5
  3939                           
  3940  004B                     ?_I2C_Read:	
  3941                           ; 1 bytes @ 0x5
  3942                           
  3943  004B                     ?_SPI_Init:	
  3944                           ; 1 bytes @ 0x5
  3945                           
  3946  004B                     ?_I2C_Init:	
  3947                           ; 1 bytes @ 0x5
  3948                           
  3949  004B                     ??_PIN_MANAGER_Initialize:	
  3950                           ; 1 bytes @ 0x5
  3951                           
  3952  004B                     I2C_Write@dataBuffer:	
  3953                           ; 1 bytes @ 0x5
  3954                           
  3955  004B                     I2C_Read@dataBuffer:	
  3956                           ; 1 bytes @ 0x5
  3957                           
  3958  004B                     SPI_Read@data:	
  3959                           ; 1 bytes @ 0x5
  3960                           
  3961  004B                     TMR0_SetInterruptHandler@InterruptHandler:	
  3962                           ; 1 bytes @ 0x5
  3963                           
  3964  004B                     I2C_Init@clockFreq:	
  3965                           ; 2 bytes @ 0x5
  3966                           
  3967  004B                     SPI_Init@clockFreq:	
  3968                           ; 4 bytes @ 0x5
  3969                           
  3970                           
  3971                           ; 4 bytes @ 0x5
  3972  004B                     	ds	1
  3973  004C                     I2C_Write@bytesNumber:	
  3974  004C                     I2C_Read@bytesNumber:	
  3975                           ; 1 bytes @ 0x6
  3976                           
  3977  004C                     SPI_Read@bytesNumber:	
  3978                           ; 1 bytes @ 0x6
  3979                           
  3980                           
  3981                           ; 1 bytes @ 0x6
  3982  004C                     	ds	1
  3983  004D                     ??_TMR0_SetInterruptHandler:	
  3984  004D                     ??_SPI_Read:	
  3985                           ; 1 bytes @ 0x7
  3986                           
  3987  004D                     ??_TMR0_Initialize:	
  3988                           ; 1 bytes @ 0x7
  3989                           
  3990  004D                     I2C_Write@stopBit:	
  3991                           ; 1 bytes @ 0x7
  3992                           
  3993  004D                     I2C_Read@stopBit:	
  3994                           ; 1 bytes @ 0x7
  3995                           
  3996                           
  3997                           ; 1 bytes @ 0x7
  3998  004D                     	ds	1
  3999  004E                     ??_SYSTEM_Initialize:	
  4000  004E                     ??_I2C_Write:	
  4001                           ; 1 bytes @ 0x8
  4002                           
  4003  004E                     ??_I2C_Read:	
  4004                           ; 1 bytes @ 0x8
  4005                           
  4006                           
  4007                           ; 1 bytes @ 0x8
  4008  004E                     	ds	1
  4009  004F                     ??_I2C_Init:	
  4010  004F                     I2C_Write@status:	
  4011                           ; 1 bytes @ 0x9
  4012                           
  4013  004F                     SPI_Init@clockPol:	
  4014                           ; 1 bytes @ 0x9
  4015                           
  4016  004F                     I2C_Init@pbFrequency:	
  4017                           ; 1 bytes @ 0x9
  4018                           
  4019  004F                     SPI_Read@writeBuffer:	
  4020                           ; 4 bytes @ 0x9
  4021                           
  4022                           
  4023                           ; 4 bytes @ 0x9
  4024  004F                     	ds	1
  4025  0050                     I2C_Write@slaveAddress:	
  4026  0050                     I2C_Read@status:	
  4027                           ; 1 bytes @ 0xA
  4028                           
  4029  0050                     SPI_Init@clockEdg:	
  4030                           ; 1 bytes @ 0xA
  4031                           
  4032                           
  4033                           ; 1 bytes @ 0xA
  4034  0050                     	ds	1
  4035  0051                     ??_SPI_Init:	
  4036  0051                     I2C_Write@acknowledge:	
  4037                           ; 1 bytes @ 0xB
  4038                           
  4039  0051                     I2C_Read@slaveAddress:	
  4040                           ; 1 bytes @ 0xB
  4041                           
  4042  0051                     SPI_Init@pbFrequency:	
  4043                           ; 1 bytes @ 0xB
  4044                           
  4045                           
  4046                           ; 4 bytes @ 0xB
  4047  0051                     	ds	1
  4048  0052                     I2C_Write@byte:	
  4049  0052                     I2C_Read@acknowledge:	
  4050                           ; 1 bytes @ 0xC
  4051                           
  4052                           
  4053                           ; 1 bytes @ 0xC
  4054  0052                     	ds	1
  4055  0053                     I2C_Read@byte:	
  4056  0053                     SPI_Read@slaveDeviceId:	
  4057                           ; 1 bytes @ 0xD
  4058                           
  4059  0053                     I2C_Init@brgValue:	
  4060                           ; 1 bytes @ 0xD
  4061                           
  4062                           
  4063                           ; 2 bytes @ 0xD
  4064  0053                     	ds	1
  4065  0054                     SPI_Read@byte:	
  4066                           
  4067                           ; 1 bytes @ 0xE
  4068  0054                     	ds	1
  4069  0055                     ??_ADXL345_GetRegisterValue:	
  4070  0055                     I2C_Init@status:	
  4071                           ; 1 bytes @ 0xF
  4072                           
  4073  0055                     SPI_Init@brgValue:	
  4074                           ; 1 bytes @ 0xF
  4075                           
  4076                           
  4077                           ; 2 bytes @ 0xF
  4078  0055                     	ds	2
  4079  0057                     ADXL345_GetRegisterValue@registerAddress:	
  4080  0057                     SPI_Init@status:	
  4081                           ; 1 bytes @ 0x11
  4082                           
  4083                           
  4084                           ; 1 bytes @ 0x11
  4085  0057                     	ds	1
  4086  0058                     ADXL345_GetRegisterValue@dataBuffer:	
  4087                           
  4088                           ; 2 bytes @ 0x12
  4089  0058                     	ds	2
  4090  005A                     ADXL345_GetRegisterValue@registerValue:	
  4091                           
  4092                           ; 1 bytes @ 0x14
  4093  005A                     	ds	1
  4094  005B                     ??_ADXL345_Init:	
  4095                           
  4096                           ; 1 bytes @ 0x15
  4097  005B                     	ds	1
  4098  005C                     ADXL345_Init@commProtocol:	
  4099                           
  4100                           ; 1 bytes @ 0x16
  4101  005C                     	ds	1
  4102  005D                     ADXL345_Init@status:	
  4103                           
  4104                           ; 1 bytes @ 0x17
  4105  005D                     	ds	1
  4106  005E                     ??_main:	
  4107                           
  4108                           ; 1 bytes @ 0x18
  4109  005E                     	ds	1
  4110                           
  4111                           	psect	maintext
  4112  033A                     __pmaintext:	
  4113 ;;
  4114 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4115 ;;
  4116 ;; *************** function _main *****************
  4117 ;; Defined at:
  4118 ;;		line 45 in file "main.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;		None
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  AccelZtemp      2   10[BANK1 ] int 
  4123 ;;  AccelYtemp      2    8[BANK1 ] int 
  4124 ;;  AccelXtemp      2    6[BANK1 ] int 
  4125 ;;  AccelZ          2    4[BANK1 ] int 
  4126 ;;  AccelY          2    2[BANK1 ] int 
  4127 ;;  AccelX          2    0[BANK1 ] int 
  4128 ;;  z               2    0        short 
  4129 ;;  y               2    0        short 
  4130 ;;  x               2    0        short 
  4131 ;;  counter         1   13[BANK1 ] unsigned char 
  4132 ;;  i2cStatus       1   12[BANK1 ] unsigned char 
  4133 ;;  TempZLSB        1    0        unsigned char 
  4134 ;;  TempZMSB        1    0        unsigned char 
  4135 ;;  TempYLSB        1    0        unsigned char 
  4136 ;;  TempYMSB        1    0        unsigned char 
  4137 ;;  TempXLSB        1    0        unsigned char 
  4138 ;;  TempXMSB        1    0        unsigned char 
  4139 ;;  AccelStatus     1    0        unsigned char 
  4140 ;;  DeviceID        1    0        unsigned char 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : B1F/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Totals:         0       1      14       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;Total ram usage:       15 bytes
  4155 ;; Hardware stack levels required when called:    8
  4156 ;; This function calls:
  4157 ;;		_ADXL345_Init
  4158 ;;		_SYSTEM_Initialize
  4159 ;; This function is called by:
  4160 ;;		Startup code after reset
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           
  4165                           ;psect for function _main
  4166  033A                     _main:	
  4167                           
  4168                           ;main.c: 47: unsigned char i2cStatus;
  4169                           ;main.c: 49: short x;
  4170                           ;main.c: 50: short y;
  4171                           ;main.c: 51: short z;
  4172                           ;main.c: 52: unsigned char DeviceID;
  4173                           ;main.c: 54: char AccelStatus;
  4174                           ;main.c: 55: char TempXMSB;
  4175                           ;main.c: 56: char TempXLSB;
  4176                           ;main.c: 57: char TempYMSB;
  4177                           ;main.c: 58: char TempYLSB;
  4178                           ;main.c: 59: char TempZMSB;
  4179                           ;main.c: 60: char TempZLSB;
  4180                           ;main.c: 61: int16_t AccelX = 0;
  4181                           
  4182                           ;incstack = 0
  4183                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4184  033A  0021               	movlb	1	; select bank1
  4185  033B  01A0               	clrf	main@AccelX^(0+128)
  4186  033C  01A1               	clrf	(main@AccelX+1)^(0+128)
  4187                           
  4188                           ;main.c: 62: int16_t AccelY = 0;
  4189  033D  01A2               	clrf	main@AccelY^(0+128)
  4190  033E  01A3               	clrf	(main@AccelY+1)^(0+128)
  4191                           
  4192                           ;main.c: 63: int16_t AccelZ = 0;
  4193  033F  01A4               	clrf	main@AccelZ^(0+128)
  4194  0340  01A5               	clrf	(main@AccelZ+1)^(0+128)
  4195                           
  4196                           ;main.c: 64: int16_t AccelXtemp = 0;
  4197  0341  01A6               	clrf	main@AccelXtemp^(0+128)
  4198  0342  01A7               	clrf	(main@AccelXtemp+1)^(0+128)
  4199                           
  4200                           ;main.c: 65: int16_t AccelYtemp = 0;
  4201  0343  01A8               	clrf	main@AccelYtemp^(0+128)
  4202  0344  01A9               	clrf	(main@AccelYtemp+1)^(0+128)
  4203                           
  4204                           ;main.c: 66: int16_t AccelZtemp = 0;
  4205  0345  01AA               	clrf	main@AccelZtemp^(0+128)
  4206  0346  01AB               	clrf	(main@AccelZtemp+1)^(0+128)
  4207                           
  4208                           ;main.c: 67: char counter = 0;
  4209  0347  01AD               	clrf	main@counter^(0+128)
  4210                           
  4211                           ;main.c: 70: SYSTEM_Initialize();
  4212  0348  3183  237E  3183   	fcall	_SYSTEM_Initialize
  4213                           
  4214                           ;main.c: 71: i2cStatus = ADXL345_Init(1);
  4215  034B  3001               	movlw	1
  4216  034C  3181  21BC  3183   	fcall	_ADXL345_Init
  4217  034F  0020               	movlb	0	; select bank0
  4218  0350  00DE               	movwf	??_main
  4219  0351  085E               	movf	??_main,w
  4220  0352  0021               	movlb	1	; select bank1
  4221  0353  00AC               	movwf	main@i2cStatus^(0+128)
  4222                           
  4223                           ;main.c: 78: (INTCONbits.GIE = 1);
  4224  0354  178B               	bsf	11,7	;volatile
  4225                           
  4226                           ;main.c: 81: (INTCONbits.PEIE = 1);
  4227  0355  170B               	bsf	11,6	;volatile
  4228  0356                     l25:	
  4229                           ;main.c: 90: while (1)
  4230                           
  4231                           
  4232                           ;main.c: 91: {
  4233  0356  2B56               	goto	l25
  4234  0357                     __end_of_main:	
  4235                           
  4236                           	psect	text1
  4237  037E                     __ptext1:	
  4238 ;; *************** function _SYSTEM_Initialize *****************
  4239 ;; Defined at:
  4240 ;;		line 77 in file "mcc.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;		None
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2, status,0, pclath, cstack
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;Total ram usage:        0 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; Hardware stack levels required when called:    7
  4261 ;; This function calls:
  4262 ;;		_OSCILLATOR_Initialize
  4263 ;;		_PIN_MANAGER_Initialize
  4264 ;;		_TMR0_Initialize
  4265 ;; This function is called by:
  4266 ;;		_main
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           
  4271                           ;psect for function _SYSTEM_Initialize
  4272  037E                     _SYSTEM_Initialize:	
  4273                           
  4274                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  4275                           
  4276                           ;incstack = 0
  4277                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4278  037E  3182  22AC  3183   	fcall	_PIN_MANAGER_Initialize
  4279                           
  4280                           ;mcc.c: 80: OSCILLATOR_Initialize();
  4281  0381  3183  2387  3183   	fcall	_OSCILLATOR_Initialize
  4282                           
  4283                           ;mcc.c: 82: TMR0_Initialize();
  4284  0384  3183  2357         	fcall	_TMR0_Initialize
  4285  0386  0008               	return
  4286  0387                     __end_of_SYSTEM_Initialize:	
  4287                           
  4288                           	psect	text2
  4289  0357                     __ptext2:	
  4290 ;; *************** function _TMR0_Initialize *****************
  4291 ;; Defined at:
  4292 ;;		line 65 in file "tmr0.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      void 
  4299 ;; Registers used:
  4300 ;;		wreg, status,2, status,0, pclath, cstack
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4308 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4309 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4310 ;;Total ram usage:        1 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    6
  4313 ;; This function calls:
  4314 ;;		_TMR0_SetInterruptHandler
  4315 ;; This function is called by:
  4316 ;;		_SYSTEM_Initialize
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           
  4321                           ;psect for function _TMR0_Initialize
  4322  0357                     _TMR0_Initialize:	
  4323                           
  4324                           ;tmr0.c: 70: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD2 & 0x3F);
  4325                           
  4326                           ;incstack = 0
  4327                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4328  0357  0021               	movlb	1	; select bank1
  4329  0358  0815               	movf	21,w	;volatile
  4330  0359  39C0               	andlw	192
  4331  035A  3812               	iorlw	18
  4332  035B  0095               	movwf	21	;volatile
  4333                           
  4334                           ;tmr0.c: 79: TMR0 = 0x83;
  4335  035C  3083               	movlw	131
  4336  035D  0020               	movlb	0	; select bank0
  4337  035E  0095               	movwf	21	;volatile
  4338                           
  4339                           ;tmr0.c: 82: timer0ReloadVal= 131;
  4340  035F  3083               	movlw	131
  4341  0360  00CD               	movwf	??_TMR0_Initialize
  4342  0361  084D               	movf	??_TMR0_Initialize,w
  4343  0362  00E1               	movwf	_timer0ReloadVal	;volatile
  4344                           
  4345                           ;tmr0.c: 85: INTCONbits.TMR0IF = 0;
  4346  0363  110B               	bcf	11,2	;volatile
  4347                           
  4348                           ;tmr0.c: 88: INTCONbits.TMR0IE = 1;
  4349  0364  168B               	bsf	11,5	;volatile
  4350                           
  4351                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  4352  0365  309D               	movlw	low _TMR0_DefaultInterruptHandler
  4353  0366  00CB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4354  0367  3003               	movlw	high _TMR0_DefaultInterruptHandler
  4355  0368  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4356  0369  3183  2394         	fcall	_TMR0_SetInterruptHandler
  4357  036B  0008               	return
  4358  036C                     __end_of_TMR0_Initialize:	
  4359                           
  4360                           	psect	text3
  4361  0394                     __ptext3:	
  4362 ;; *************** function _TMR0_SetInterruptHandler *****************
  4363 ;; Defined at:
  4364 ;;		line 149 in file "tmr0.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  InterruptHan    2    5[BANK0 ] PTR FTN()void 
  4367 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4379 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;Total ram usage:        2 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:    5
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_TMR0_Initialize
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           
  4394                           ;psect for function _TMR0_SetInterruptHandler
  4395  0394                     _TMR0_SetInterruptHandler:	
  4396                           
  4397                           ;tmr0.c: 150: TMR0_InterruptHandler = InterruptHandler;
  4398                           
  4399                           ;incstack = 0
  4400                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4401  0394  0020               	movlb	0	; select bank0
  4402  0395  084C               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  4403  0396  00E0               	movwf	_TMR0_InterruptHandler+1
  4404  0397  084B               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  4405  0398  00DF               	movwf	_TMR0_InterruptHandler
  4406  0399  0008               	return
  4407  039A                     __end_of_TMR0_SetInterruptHandler:	
  4408                           
  4409                           	psect	text4
  4410  02AC                     __ptext4:	
  4411 ;; *************** function _PIN_MANAGER_Initialize *****************
  4412 ;; Defined at:
  4413 ;;		line 52 in file "pin_manager.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;		None
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;		None
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      void 
  4420 ;; Registers used:
  4421 ;;		wreg, status,2
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4431 ;;Total ram usage:        0 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:    5
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_SYSTEM_Initialize
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           
  4442                           ;psect for function _PIN_MANAGER_Initialize
  4443  02AC                     _PIN_MANAGER_Initialize:	
  4444                           
  4445                           ;pin_manager.c: 57: LATA = 0x00;
  4446                           
  4447                           ;incstack = 0
  4448                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4449  02AC  0022               	movlb	2	; select bank2
  4450  02AD  018C               	clrf	12	;volatile
  4451                           
  4452                           ;pin_manager.c: 58: LATB = 0x00;
  4453  02AE  018D               	clrf	13	;volatile
  4454                           
  4455                           ;pin_manager.c: 59: LATC = 0x00;
  4456  02AF  018E               	clrf	14	;volatile
  4457                           
  4458                           ;pin_manager.c: 64: TRISA = 0x37;
  4459  02B0  3037               	movlw	55
  4460  02B1  0021               	movlb	1	; select bank1
  4461  02B2  008C               	movwf	12	;volatile
  4462                           
  4463                           ;pin_manager.c: 65: TRISB = 0xF0;
  4464  02B3  30F0               	movlw	240
  4465  02B4  008D               	movwf	13	;volatile
  4466                           
  4467                           ;pin_manager.c: 66: TRISC = 0x9F;
  4468  02B5  309F               	movlw	159
  4469  02B6  008E               	movwf	14	;volatile
  4470                           
  4471                           ;pin_manager.c: 71: ANSELC = 0xCF;
  4472  02B7  30CF               	movlw	207
  4473  02B8  0023               	movlb	3	; select bank3
  4474  02B9  008E               	movwf	14	;volatile
  4475                           
  4476                           ;pin_manager.c: 72: ANSELB = 0xA0;
  4477  02BA  30A0               	movlw	160
  4478  02BB  008D               	movwf	13	;volatile
  4479                           
  4480                           ;pin_manager.c: 73: ANSELA = 0x17;
  4481  02BC  3017               	movlw	23
  4482  02BD  008C               	movwf	12	;volatile
  4483                           
  4484                           ;pin_manager.c: 78: WPUB = 0x00;
  4485  02BE  0024               	movlb	4	; select bank4
  4486  02BF  018D               	clrf	13	;volatile
  4487                           
  4488                           ;pin_manager.c: 79: WPUA = 0x00;
  4489  02C0  018C               	clrf	12	;volatile
  4490                           
  4491                           ;pin_manager.c: 80: WPUC = 0x00;
  4492  02C1  018E               	clrf	14	;volatile
  4493                           
  4494                           ;pin_manager.c: 81: OPTION_REGbits.nWPUEN = 1;
  4495  02C2  0021               	movlb	1	; select bank1
  4496  02C3  1795               	bsf	21,7	;volatile
  4497                           
  4498                           ;pin_manager.c: 86: ODCONA = 0x00;
  4499  02C4  0025               	movlb	5	; select bank5
  4500  02C5  018C               	clrf	12	;volatile
  4501                           
  4502                           ;pin_manager.c: 87: ODCONB = 0x00;
  4503  02C6  018D               	clrf	13	;volatile
  4504                           
  4505                           ;pin_manager.c: 88: ODCONC = 0x00;
  4506  02C7  018E               	clrf	14	;volatile
  4507                           
  4508                           ;pin_manager.c: 95: SSPCLKPPS = 0x0E;
  4509  02C8  300E               	movlw	14
  4510  02C9  003C               	movlb	28	; select bank28
  4511  02CA  00A0               	movwf	32	;volatile
  4512                           
  4513                           ;pin_manager.c: 96: SSPDATPPS = 0x0C;
  4514  02CB  300C               	movlw	12
  4515  02CC  00A1               	movwf	33	;volatile
  4516                           
  4517                           ;pin_manager.c: 97: RB6PPS = 0x10;
  4518  02CD  3010               	movlw	16
  4519  02CE  003D               	movlb	29	; select bank29
  4520  02CF  009E               	movwf	30	;volatile
  4521                           
  4522                           ;pin_manager.c: 98: RB4PPS = 0x11;
  4523  02D0  3011               	movlw	17
  4524  02D1  009C               	movwf	28	;volatile
  4525  02D2  0008               	return
  4526  02D3                     __end_of_PIN_MANAGER_Initialize:	
  4527                           
  4528                           	psect	text5
  4529  0387                     __ptext5:	
  4530 ;; *************** function _OSCILLATOR_Initialize *****************
  4531 ;; Defined at:
  4532 ;;		line 85 in file "mcc.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		wreg, status,2
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;Total ram usage:        0 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    5
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_SYSTEM_Initialize
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           
  4561                           ;psect for function _OSCILLATOR_Initialize
  4562  0387                     _OSCILLATOR_Initialize:	
  4563                           
  4564                           ;mcc.c: 88: OSCCON = 0x6A;
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4568  0387  306A               	movlw	106
  4569  0388  0021               	movlb	1	; select bank1
  4570  0389  0099               	movwf	25	;volatile
  4571                           
  4572                           ;mcc.c: 90: OSCTUNE = 0x00;
  4573  038A  0198               	clrf	24	;volatile
  4574                           
  4575                           ;mcc.c: 92: BORCON = 0x00;
  4576  038B  0022               	movlb	2	; select bank2
  4577  038C  0196               	clrf	22	;volatile
  4578  038D  0008               	return
  4579  038E                     __end_of_OSCILLATOR_Initialize:	
  4580                           
  4581                           	psect	text6
  4582  01BC                     __ptext6:	
  4583 ;; *************** function _ADXL345_Init *****************
  4584 ;; Defined at:
  4585 ;;		line 135 in file "ADXL345.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  commProtocol    1    wreg     unsigned char 
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;  commProtocol    1   22[BANK0 ] unsigned char 
  4590 ;;  status          1   23[BANK0 ] unsigned char 
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1    wreg      unsigned char 
  4593 ;; Registers used:
  4594 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;Total ram usage:        3 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    7
  4607 ;; This function calls:
  4608 ;;		_ADXL345_GetRegisterValue
  4609 ;;		_I2C_Init
  4610 ;;		_SPI_Init
  4611 ;; This function is called by:
  4612 ;;		_main
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           
  4617                           ;psect for function _ADXL345_Init
  4618  01BC                     _ADXL345_Init:	
  4619                           
  4620                           ;incstack = 0
  4621                           ; Regs used in _ADXL345_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4622                           ;ADXL345_Init@commProtocol stored from wreg
  4623  01BC  0020               	movlb	0	; select bank0
  4624  01BD  00DC               	movwf	ADXL345_Init@commProtocol
  4625                           
  4626                           ;ADXL345.c: 137: unsigned char status = 0;
  4627  01BE  01DD               	clrf	ADXL345_Init@status
  4628                           
  4629                           ;ADXL345.c: 139: communicationType = commProtocol;
  4630  01BF  085C               	movf	ADXL345_Init@commProtocol,w
  4631  01C0  00DB               	movwf	??_ADXL345_Init
  4632  01C1  085B               	movf	??_ADXL345_Init,w
  4633  01C2  00B1               	movwf	_communicationType
  4634                           
  4635                           ;ADXL345.c: 140: if(commProtocol == 0)
  4636  01C3  085C               	movf	ADXL345_Init@commProtocol,w
  4637  01C4  1D03               	btfss	3,2
  4638  01C5  29D6               	goto	l3059
  4639                           
  4640                           ;ADXL345.c: 141: {
  4641                           ;ADXL345.c: 142: status = SPI_Init(0,
  4642                           ;ADXL345.c: 143: 1000000,
  4643                           ;ADXL345.c: 144: 1,
  4644                           ;ADXL345.c: 145: 0);
  4645  01C6  3000               	movlw	0
  4646  01C7  00CE               	movwf	SPI_Init@clockFreq+3
  4647  01C8  300F               	movlw	15
  4648  01C9  00CD               	movwf	SPI_Init@clockFreq+2
  4649  01CA  3042               	movlw	66
  4650  01CB  00CC               	movwf	SPI_Init@clockFreq+1
  4651  01CC  3040               	movlw	64
  4652  01CD  00CB               	movwf	SPI_Init@clockFreq
  4653  01CE  01CF               	clrf	SPI_Init@clockPol
  4654  01CF  0ACF               	incf	SPI_Init@clockPol,f
  4655  01D0  01D0               	clrf	SPI_Init@clockEdg
  4656  01D1  3000               	movlw	0
  4657  01D2  3182  22D3  3181   	fcall	_SPI_Init
  4658  01D5  29E1               	goto	L1
  4659  01D6                     l3059:	
  4660                           ;ADXL345.c: 146: }
  4661                           
  4662                           
  4663                           ;ADXL345.c: 147: else
  4664                           ;ADXL345.c: 148: {
  4665                           ;ADXL345.c: 149: status = I2C_Init(100000);
  4666  01D6  3000               	movlw	0
  4667  01D7  00CE               	movwf	I2C_Init@clockFreq+3
  4668  01D8  3001               	movlw	1
  4669  01D9  00CD               	movwf	I2C_Init@clockFreq+2
  4670  01DA  3086               	movlw	134
  4671  01DB  00CC               	movwf	I2C_Init@clockFreq+1
  4672  01DC  30A0               	movlw	160
  4673  01DD  00CB               	movwf	I2C_Init@clockFreq
  4674  01DE  3183  231A  3181   	fcall	_I2C_Init
  4675  01E1                     L1:	
  4676  01E1  0020               	movlb	0	; select bank0
  4677  01E2  00DB               	movwf	??_ADXL345_Init
  4678  01E3  085B               	movf	??_ADXL345_Init,w
  4679  01E4  00DD               	movwf	ADXL345_Init@status
  4680                           
  4681                           ;ADXL345.c: 150: }
  4682                           ;ADXL345.c: 151: if(ADXL345_GetRegisterValue(0x00) != 0xE5)
  4683  01E5  3000               	movlw	0
  4684  01E6  3181  21F9  3181   	fcall	_ADXL345_GetRegisterValue
  4685  01E9  3AE5               	xorlw	229
  4686  01EA  1903               	skipnz
  4687  01EB  29F1               	goto	l520
  4688                           
  4689                           ;ADXL345.c: 152: {
  4690                           ;ADXL345.c: 153: status = -1;
  4691  01EC  30FF               	movlw	255
  4692  01ED  0020               	movlb	0	; select bank0
  4693  01EE  00DB               	movwf	??_ADXL345_Init
  4694  01EF  085B               	movf	??_ADXL345_Init,w
  4695  01F0  00DD               	movwf	ADXL345_Init@status
  4696  01F1                     l520:	
  4697                           
  4698                           ;ADXL345.c: 154: }
  4699                           ;ADXL345.c: 155: selectedRange = 2;
  4700  01F1  3002               	movlw	2
  4701  01F2  0020               	movlb	0	; select bank0
  4702  01F3  00DB               	movwf	??_ADXL345_Init
  4703  01F4  085B               	movf	??_ADXL345_Init,w
  4704  01F5  00B0               	movwf	_selectedRange
  4705                           
  4706                           ;ADXL345.c: 156: fullResolutionSet = 0;
  4707  01F6  01AF               	clrf	_fullResolutionSet
  4708                           
  4709                           ;ADXL345.c: 158: return status;
  4710  01F7  085D               	movf	ADXL345_Init@status,w
  4711  01F8  0008               	return
  4712  01F9                     __end_of_ADXL345_Init:	
  4713                           
  4714                           	psect	text7
  4715  02D3                     __ptext7:	
  4716 ;; *************** function _SPI_Init *****************
  4717 ;; Defined at:
  4718 ;;		line 221 in file "Communication.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;  lsbFirst        1    wreg     unsigned char 
  4721 ;;  clockFreq       4    5[BANK0 ] unsigned long 
  4722 ;;  clockPol        1    9[BANK0 ] unsigned char 
  4723 ;;  clockEdg        1   10[BANK0 ] unsigned char 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  lsbFirst        1    0[COMMON] unsigned char 
  4726 ;;  pbFrequency     4   11[BANK0 ] unsigned long 
  4727 ;;  brgValue        2   15[BANK0 ] unsigned short 
  4728 ;;  status          1   17[BANK0 ] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      unsigned char 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4738 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4739 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;Total ram usage:       13 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:    5
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_ADXL345_Init
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           
  4753                           ;psect for function _SPI_Init
  4754  02D3                     _SPI_Init:	
  4755                           
  4756                           ;Communication.c: 226: unsigned char status = 0;
  4757                           
  4758                           ;incstack = 0
  4759                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  4760  02D3  0020               	movlb	0	; select bank0
  4761  02D4  01D7               	clrf	SPI_Init@status
  4762                           
  4763                           ;Communication.c: 227: unsigned long pbFrequency = 40000000;
  4764  02D5  3002               	movlw	2
  4765  02D6  00D4               	movwf	SPI_Init@pbFrequency+3
  4766  02D7  3062               	movlw	98
  4767  02D8  00D3               	movwf	SPI_Init@pbFrequency+2
  4768  02D9  305A               	movlw	90
  4769  02DA  00D2               	movwf	SPI_Init@pbFrequency+1
  4770  02DB  3000               	movlw	0
  4771  02DC  00D1               	movwf	SPI_Init@pbFrequency
  4772                           
  4773                           ;Communication.c: 228: unsigned short brgValue = 0;
  4774  02DD  01D5               	clrf	SPI_Init@brgValue
  4775  02DE  01D6               	clrf	SPI_Init@brgValue+1
  4776                           
  4777                           ;Communication.c: 230: do { LATCbits.LATC6 = 1; } while(0);
  4778  02DF  0022               	movlb	2	; select bank2
  4779  02E0  170E               	bsf	14,6	;volatile
  4780                           
  4781                           ;Communication.c: 235: SSP1STAT = 0x00;
  4782  02E1  0024               	movlb	4	; select bank4
  4783  02E2  0194               	clrf	20	;volatile
  4784                           
  4785                           ;Communication.c: 236: SSP1STATbits.CKE = clockEdg;
  4786  02E3  0020               	movlb	0	; select bank0
  4787  02E4  0C50               	rrf	SPI_Init@clockEdg,w
  4788  02E5  0024               	movlb	4	; select bank4
  4789  02E6  1C03               	skipc
  4790  02E7  1314               	bcf	20,6	;volatile
  4791  02E8  1803               	skipnc
  4792  02E9  1714               	bsf	20,6	;volatile
  4793                           
  4794                           ;Communication.c: 239: SSP1CON1 = 0x20;
  4795  02EA  3020               	movlw	32
  4796  02EB  0095               	movwf	21	;volatile
  4797                           
  4798                           ;Communication.c: 240: SSP1CON1bits.CKP = clockPol;
  4799  02EC  0020               	movlb	0	; select bank0
  4800  02ED  0C4F               	rrf	SPI_Init@clockPol,w
  4801  02EE  0024               	movlb	4	; select bank4
  4802  02EF  1C03               	skipc
  4803  02F0  1215               	bcf	21,4	;volatile
  4804  02F1  1803               	skipnc
  4805  02F2  1615               	bsf	21,4	;volatile
  4806                           
  4807                           ;Communication.c: 245: SSP1ADD = 0x00;
  4808  02F3  0192               	clrf	18	;volatile
  4809                           
  4810                           ;Communication.c: 247: status = 1;
  4811  02F4  0020               	movlb	0	; select bank0
  4812  02F5  01D7               	clrf	SPI_Init@status
  4813  02F6  0AD7               	incf	SPI_Init@status,f
  4814                           
  4815                           ;Communication.c: 248: return status;
  4816  02F7  0857               	movf	SPI_Init@status,w
  4817  02F8  0008               	return
  4818  02F9                     __end_of_SPI_Init:	
  4819                           
  4820                           	psect	text8
  4821  031A                     __ptext8:	
  4822 ;; *************** function _I2C_Init *****************
  4823 ;; Defined at:
  4824 ;;		line 57 in file "Communication.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  clockFreq       4    5[BANK0 ] unsigned long 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  pbFrequency     4    9[BANK0 ] unsigned long 
  4829 ;;  brgValue        2   13[BANK0 ] unsigned short 
  4830 ;;  status          1   15[BANK0 ] unsigned char 
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  1    wreg      unsigned char 
  4833 ;; Registers used:
  4834 ;;		wreg, status,2
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4840 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4841 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;Total ram usage:       11 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; Hardware stack levels required when called:    5
  4847 ;; This function calls:
  4848 ;;		Nothing
  4849 ;; This function is called by:
  4850 ;;		_ADXL345_Init
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           
  4855                           ;psect for function _I2C_Init
  4856  031A                     _I2C_Init:	
  4857                           
  4858                           ;Communication.c: 59: unsigned char status = 0;
  4859                           
  4860                           ;incstack = 0
  4861                           ; Regs used in _I2C_Init: [wreg+status,2]
  4862  031A  0020               	movlb	0	; select bank0
  4863  031B  01D5               	clrf	I2C_Init@status
  4864                           
  4865                           ;Communication.c: 60: unsigned long pbFrequency = 4000000;
  4866  031C  3000               	movlw	0
  4867  031D  00D2               	movwf	I2C_Init@pbFrequency+3
  4868  031E  303D               	movlw	61
  4869  031F  00D1               	movwf	I2C_Init@pbFrequency+2
  4870  0320  3009               	movlw	9
  4871  0321  00D0               	movwf	I2C_Init@pbFrequency+1
  4872  0322  3000               	movlw	0
  4873  0323  00CF               	movwf	I2C_Init@pbFrequency
  4874                           
  4875                           ;Communication.c: 61: unsigned short brgValue = 0;
  4876  0324  01D3               	clrf	I2C_Init@brgValue
  4877  0325  01D4               	clrf	I2C_Init@brgValue+1
  4878                           
  4879                           ;Communication.c: 64: SSP1STAT = 0x00;
  4880  0326  0024               	movlb	4	; select bank4
  4881  0327  0194               	clrf	20	;volatile
  4882                           
  4883                           ;Communication.c: 66: SSP1CON1 = 0x28;
  4884  0328  3028               	movlw	40
  4885  0329  0095               	movwf	21	;volatile
  4886                           
  4887                           ;Communication.c: 68: SSP1CON3 = 0x00;
  4888  032A  0197               	clrf	23	;volatile
  4889                           
  4890                           ;Communication.c: 72: SSP1ADD = 0x03;
  4891  032B  3003               	movlw	3
  4892  032C  0092               	movwf	18	;volatile
  4893                           
  4894                           ;Communication.c: 75: PIR1bits.SSP1IF = 0;
  4895  032D  0020               	movlb	0	; select bank0
  4896  032E  1190               	bcf	16,3	;volatile
  4897                           
  4898                           ;Communication.c: 76: PIR2bits.BCL1IF = 0;
  4899  032F  1191               	bcf	17,3	;volatile
  4900                           
  4901                           ;Communication.c: 79: PIE1bits.SSP1IE = 1;
  4902  0330  0021               	movlb	1	; select bank1
  4903  0331  1590               	bsf	16,3	;volatile
  4904                           
  4905                           ;Communication.c: 80: PIE2bits.BCL1IE = 1;
  4906  0332  1591               	bsf	17,3	;volatile
  4907                           
  4908                           ;Communication.c: 82: do { LATCbits.LATC6 = 1; } while(0);
  4909  0333  0022               	movlb	2	; select bank2
  4910  0334  170E               	bsf	14,6	;volatile
  4911                           
  4912                           ;Communication.c: 83: status = 1;
  4913  0335  0020               	movlb	0	; select bank0
  4914  0336  01D5               	clrf	I2C_Init@status
  4915  0337  0AD5               	incf	I2C_Init@status,f
  4916                           
  4917                           ;Communication.c: 85: return status;
  4918  0338  0855               	movf	I2C_Init@status,w
  4919  0339  0008               	return
  4920  033A                     __end_of_I2C_Init:	
  4921                           
  4922                           	psect	text9
  4923  01F9                     __ptext9:	
  4924 ;; *************** function _ADXL345_GetRegisterValue *****************
  4925 ;; Defined at:
  4926 ;;		line 67 in file "ADXL345.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  registerAddr    1    wreg     unsigned char 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  registerAddr    1   17[BANK0 ] unsigned char 
  4931 ;;  dataBuffer      2   18[BANK0 ] unsigned char [2]
  4932 ;;  registerValu    1   20[BANK0 ] unsigned char 
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  1    wreg      unsigned char 
  4935 ;; Registers used:
  4936 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4943 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;Total ram usage:        6 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:    6
  4949 ;; This function calls:
  4950 ;;		_I2C_Read
  4951 ;;		_I2C_Write
  4952 ;;		_SPI_Read
  4953 ;; This function is called by:
  4954 ;;		_ADXL345_Init
  4955 ;;		_ADXL345_SetPowerMode
  4956 ;;		_ADXL345_SetTapDetection
  4957 ;;		_ADXL345_SetActivityDetection
  4958 ;;		_ADXL345_SetInactivityDetection
  4959 ;;		_ADXL345_SetFreeFallDetection
  4960 ;;		_ADXL345_SetRangeResolution
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           
  4965                           ;psect for function _ADXL345_GetRegisterValue
  4966  01F9                     _ADXL345_GetRegisterValue:	
  4967                           
  4968                           ;incstack = 0
  4969                           ; Regs used in _ADXL345_GetRegisterValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  4970                           ;ADXL345_GetRegisterValue@registerAddress stored from wreg
  4971  01F9  0020               	movlb	0	; select bank0
  4972  01FA  00D7               	movwf	ADXL345_GetRegisterValue@registerAddress
  4973                           
  4974                           ;ADXL345.c: 69: unsigned char dataBuffer[2] = {0, 0};
  4975  01FB  082C               	movf	ADXL345_GetRegisterValue@F85+1,w
  4976  01FC  00D9               	movwf	ADXL345_GetRegisterValue@dataBuffer+1
  4977  01FD  082B               	movf	ADXL345_GetRegisterValue@F85,w
  4978  01FE  00D8               	movwf	ADXL345_GetRegisterValue@dataBuffer
  4979                           
  4980                           ;ADXL345.c: 70: unsigned char registerValue = 0;
  4981  01FF  01DA               	clrf	ADXL345_GetRegisterValue@registerValue
  4982                           
  4983                           ;ADXL345.c: 72: if(communicationType == 0)
  4984  0200  0831               	movf	_communicationType,w
  4985  0201  1D03               	btfss	3,2
  4986  0202  2A1B               	goto	l2963
  4987                           
  4988                           ;ADXL345.c: 73: {
  4989                           ;ADXL345.c: 74: dataBuffer[0] = (1 << 7) | registerAddress;
  4990  0203  0857               	movf	ADXL345_GetRegisterValue@registerAddress,w
  4991  0204  3880               	iorlw	128
  4992  0205  00D5               	movwf	??_ADXL345_GetRegisterValue
  4993  0206  0855               	movf	??_ADXL345_GetRegisterValue,w
  4994  0207  00D8               	movwf	ADXL345_GetRegisterValue@dataBuffer
  4995                           
  4996                           ;ADXL345.c: 75: dataBuffer[1] = 0;
  4997  0208  01D9               	clrf	ADXL345_GetRegisterValue@dataBuffer+1
  4998                           
  4999                           ;ADXL345.c: 76: SPI_Read(1, dataBuffer, 2);
  5000  0209  3058               	movlw	(low (ADXL345_GetRegisterValue@dataBuffer| 0))& (0+255)
  5001  020A  00D5               	movwf	??_ADXL345_GetRegisterValue
  5002  020B  0855               	movf	??_ADXL345_GetRegisterValue,w
  5003  020C  00CB               	movwf	SPI_Read@data
  5004  020D  3002               	movlw	2
  5005  020E  00D6               	movwf	??_ADXL345_GetRegisterValue+1
  5006  020F  0856               	movf	??_ADXL345_GetRegisterValue+1,w
  5007  0210  00CC               	movwf	SPI_Read@bytesNumber
  5008  0211  3001               	movlw	1
  5009  0212  3180  2093  3181   	fcall	_SPI_Read
  5010                           
  5011                           ;ADXL345.c: 77: registerValue = dataBuffer[1];
  5012  0215  0020               	movlb	0	; select bank0
  5013  0216  0859               	movf	ADXL345_GetRegisterValue@dataBuffer+1,w
  5014  0217  00D5               	movwf	??_ADXL345_GetRegisterValue
  5015  0218  0855               	movf	??_ADXL345_GetRegisterValue,w
  5016  0219  00DA               	movwf	ADXL345_GetRegisterValue@registerValue
  5017                           
  5018                           ;ADXL345.c: 78: }
  5019  021A  2A32               	goto	l2965
  5020  021B                     l2963:	
  5021                           
  5022                           ;ADXL345.c: 79: else
  5023                           ;ADXL345.c: 80: {
  5024                           ;ADXL345.c: 81: I2C_Write(0x1D,
  5025                           ;ADXL345.c: 82: &registerAddress,
  5026                           ;ADXL345.c: 83: 1,
  5027                           ;ADXL345.c: 84: 0);
  5028  021B  3057               	movlw	(low (ADXL345_GetRegisterValue@registerAddress| 0))& (0+255)
  5029  021C  00D5               	movwf	??_ADXL345_GetRegisterValue
  5030  021D  0855               	movf	??_ADXL345_GetRegisterValue,w
  5031  021E  00CB               	movwf	I2C_Write@dataBuffer
  5032  021F  01CC               	clrf	I2C_Write@bytesNumber
  5033  0220  0ACC               	incf	I2C_Write@bytesNumber,f
  5034  0221  01CD               	clrf	I2C_Write@stopBit
  5035  0222  301D               	movlw	29
  5036  0223  3181  217E  3181   	fcall	_I2C_Write
  5037                           
  5038                           ;ADXL345.c: 85: I2C_Read(0x1D,
  5039                           ;ADXL345.c: 86: &registerValue,
  5040                           ;ADXL345.c: 87: 1,
  5041                           ;ADXL345.c: 88: 1);
  5042  0226  305A               	movlw	(low (ADXL345_GetRegisterValue@registerValue| 0))& (0+255)
  5043  0227  0020               	movlb	0	; select bank0
  5044  0228  00D5               	movwf	??_ADXL345_GetRegisterValue
  5045  0229  0855               	movf	??_ADXL345_GetRegisterValue,w
  5046  022A  00CB               	movwf	I2C_Read@dataBuffer
  5047  022B  01CC               	clrf	I2C_Read@bytesNumber
  5048  022C  0ACC               	incf	I2C_Read@bytesNumber,f
  5049  022D  01CD               	clrf	I2C_Read@stopBit
  5050  022E  0ACD               	incf	I2C_Read@stopBit,f
  5051  022F  301D               	movlw	29
  5052  0230  3180  203D         	fcall	_I2C_Read
  5053  0232                     l2965:	
  5054                           
  5055                           ;ADXL345.c: 89: }
  5056                           ;ADXL345.c: 91: return registerValue;
  5057  0232  0020               	movlb	0	; select bank0
  5058  0233  085A               	movf	ADXL345_GetRegisterValue@registerValue,w
  5059  0234  0008               	return
  5060  0235                     __end_of_ADXL345_GetRegisterValue:	
  5061                           
  5062                           	psect	text10
  5063  0093                     __ptext10:	
  5064 ;; *************** function _SPI_Read *****************
  5065 ;; Defined at:
  5066 ;;		line 261 in file "Communication.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  slaveDeviceI    1    wreg     unsigned char 
  5069 ;;  data            1    5[BANK0 ] PTR unsigned char 
  5070 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@dataBuffer(2), 
  5071 ;;  bytesNumber     1    6[BANK0 ] unsigned char 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  slaveDeviceI    1   13[BANK0 ] unsigned char 
  5074 ;;  writeBuffer     4    9[BANK0 ] unsigned char [4]
  5075 ;;  byte            1   14[BANK0 ] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      unsigned char 
  5078 ;; Registers used:
  5079 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5085 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5086 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5087 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5088 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5089 ;;Total ram usage:       10 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    5
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_ADXL345_GetRegisterValue
  5096 ;;		_ADXL345_GetXyz
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           
  5101                           ;psect for function _SPI_Read
  5102  0093                     _SPI_Read:	
  5103                           
  5104                           ;incstack = 0
  5105                           ; Regs used in _SPI_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5106                           ;SPI_Read@slaveDeviceId stored from wreg
  5107  0093  0020               	movlb	0	; select bank0
  5108  0094  00D3               	movwf	SPI_Read@slaveDeviceId
  5109                           
  5110                           ;Communication.c: 265: unsigned char byte = 0;
  5111  0095  01D4               	clrf	SPI_Read@byte
  5112                           
  5113                           ;Communication.c: 266: unsigned char writeBuffer[4] = {0, 0, 0, 0};
  5114  0096  0828               	movf	SPI_Read@F12019+3,w
  5115  0097  00D2               	movwf	SPI_Read@writeBuffer+3
  5116  0098  0827               	movf	SPI_Read@F12019+2,w
  5117  0099  00D1               	movwf	SPI_Read@writeBuffer+2
  5118  009A  0826               	movf	SPI_Read@F12019+1,w
  5119  009B  00D0               	movwf	SPI_Read@writeBuffer+1
  5120  009C  0825               	movf	SPI_Read@F12019,w
  5121  009D  00CF               	movwf	SPI_Read@writeBuffer
  5122                           
  5123                           ;Communication.c: 269: SSP1CON1bits.WCOL = 0;
  5124  009E  0024               	movlb	4	; select bank4
  5125  009F  1395               	bcf	21,7	;volatile
  5126                           
  5127                           ;Communication.c: 271: for(byte = 0; byte < bytesNumber; byte++)
  5128  00A0  0020               	movlb	0	; select bank0
  5129  00A1  01D4               	clrf	SPI_Read@byte
  5130  00A2                     l2867:	
  5131  00A2  084C               	movf	SPI_Read@bytesNumber,w
  5132  00A3  0254               	subwf	SPI_Read@byte,w
  5133  00A4  1803               	btfsc	3,0
  5134  00A5  28B9               	goto	l2869
  5135                           
  5136                           ;Communication.c: 272: {
  5137                           ;Communication.c: 273: writeBuffer[byte] = data[byte];
  5138  00A6  0854               	movf	SPI_Read@byte,w
  5139  00A7  074B               	addwf	SPI_Read@data,w
  5140  00A8  00CD               	movwf	??_SPI_Read
  5141  00A9  084D               	movf	??_SPI_Read,w
  5142  00AA  0086               	movwf	6
  5143  00AB  0187               	clrf	7
  5144  00AC  0801               	movf	1,w
  5145  00AD  00CE               	movwf	??_SPI_Read+1
  5146  00AE  0854               	movf	SPI_Read@byte,w
  5147  00AF  3E4F               	addlw	(low (SPI_Read@writeBuffer| 0))& (0+255)
  5148  00B0  0086               	movwf	6
  5149  00B1  0187               	clrf	7
  5150  00B2  084E               	movf	??_SPI_Read+1,w
  5151  00B3  0081               	movwf	1
  5152  00B4  3001               	movlw	1
  5153  00B5  00CD               	movwf	??_SPI_Read
  5154  00B6  084D               	movf	??_SPI_Read,w
  5155  00B7  07D4               	addwf	SPI_Read@byte,f
  5156  00B8  28A2               	goto	l2867
  5157  00B9                     l2869:	
  5158                           
  5159                           ;Communication.c: 274: }
  5160                           ;Communication.c: 275: if(slaveDeviceId == 1)
  5161  00B9  0353               	decf	SPI_Read@slaveDeviceId,w
  5162  00BA  1D03               	btfss	3,2
  5163  00BB  28BE               	goto	l2871
  5164                           
  5165                           ;Communication.c: 276: {
  5166                           ;Communication.c: 277: do { LATCbits.LATC6 = 0; } while(0);
  5167  00BC  0022               	movlb	2	; select bank2
  5168  00BD  130E               	bcf	14,6	;volatile
  5169  00BE                     l2871:	
  5170                           
  5171                           ;Communication.c: 278: }
  5172                           ;Communication.c: 279: for(byte = 0; byte < bytesNumber; byte++)
  5173  00BE  0020               	movlb	0	; select bank0
  5174  00BF  01D4               	clrf	SPI_Read@byte
  5175  00C0                     l2879:	
  5176  00C0  084C               	movf	SPI_Read@bytesNumber,w
  5177  00C1  0254               	subwf	SPI_Read@byte,w
  5178  00C2  1803               	btfsc	3,0
  5179  00C3  28DD               	goto	l2881
  5180                           
  5181                           ;Communication.c: 280: {
  5182                           ;Communication.c: 281: SSP1BUF = writeBuffer[byte];
  5183  00C4  0854               	movf	SPI_Read@byte,w
  5184  00C5  3E4F               	addlw	(low (SPI_Read@writeBuffer| 0))& (0+255)
  5185  00C6  0086               	movwf	6
  5186  00C7  0187               	clrf	7
  5187  00C8  0801               	movf	1,w
  5188  00C9  0024               	movlb	4	; select bank4
  5189  00CA  0091               	movwf	17	;volatile
  5190  00CB                     l661:	
  5191                           ;Communication.c: 282: while(SSP1STATbits.BF == 0);
  5192                           
  5193  00CB  1C14               	btfss	20,0	;volatile
  5194  00CC  28CB               	goto	l661
  5195                           
  5196                           ;Communication.c: 283: data[byte] = SSP1BUF;
  5197  00CD  0811               	movf	17,w	;volatile
  5198  00CE  0020               	movlb	0	; select bank0
  5199  00CF  00CD               	movwf	??_SPI_Read
  5200  00D0  0854               	movf	SPI_Read@byte,w
  5201  00D1  074B               	addwf	SPI_Read@data,w
  5202  00D2  00CE               	movwf	??_SPI_Read+1
  5203  00D3  084E               	movf	??_SPI_Read+1,w
  5204  00D4  0086               	movwf	6
  5205  00D5  0187               	clrf	7
  5206  00D6  084D               	movf	??_SPI_Read,w
  5207  00D7  0081               	movwf	1
  5208  00D8  3001               	movlw	1
  5209  00D9  00CD               	movwf	??_SPI_Read
  5210  00DA  084D               	movf	??_SPI_Read,w
  5211  00DB  07D4               	addwf	SPI_Read@byte,f
  5212  00DC  28C0               	goto	l2879
  5213  00DD                     l2881:	
  5214                           
  5215                           ;Communication.c: 284: }
  5216                           ;Communication.c: 286: if(slaveDeviceId == 1)
  5217  00DD  0353               	decf	SPI_Read@slaveDeviceId,w
  5218  00DE  1D03               	btfss	3,2
  5219  00DF  0008               	return
  5220                           
  5221                           ;Communication.c: 287: {
  5222                           ;Communication.c: 288: do { LATCbits.LATC6 = 1; } while(0);
  5223  00E0  0022               	movlb	2	; select bank2
  5224  00E1  170E               	bsf	14,6	;volatile
  5225  00E2  0008               	return
  5226  00E3                     __end_of_SPI_Read:	
  5227                           ;Communication.c: 289: }
  5228                           ;Communication.c: 291: return bytesNumber;
  5229                           ;	Return value of _SPI_Read is never used
  5230                           
  5231                           
  5232                           	psect	text11
  5233  017E                     __ptext11:	
  5234 ;; *************** function _I2C_Write *****************
  5235 ;; Defined at:
  5236 ;;		line 100 in file "Communication.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  slaveAddress    1    wreg     unsigned char 
  5239 ;;  dataBuffer      1    5[BANK0 ] PTR unsigned char 
  5240 ;;		 -> ADXL345_GetXyz@firstRegAddress(1), ADXL345_SetRegisterValue@dataBuffer(2), ADXL345_GetRegisterValue@registerAddr
      +ess(1), 
  5241 ;;  bytesNumber     1    6[BANK0 ] unsigned char 
  5242 ;;  stopBit         1    7[BANK0 ] unsigned char 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  slaveAddress    1   10[BANK0 ] unsigned char 
  5245 ;;  byte            1   12[BANK0 ] unsigned char 
  5246 ;;  acknowledge     1   11[BANK0 ] unsigned char 
  5247 ;;  status          1    9[BANK0 ] unsigned char 
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  1    wreg      unsigned char 
  5250 ;; Registers used:
  5251 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5257 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5258 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5259 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5260 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;Total ram usage:        8 bytes
  5262 ;; Hardware stack levels used:    1
  5263 ;; Hardware stack levels required when called:    5
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_ADXL345_GetRegisterValue
  5268 ;;		_ADXL345_SetRegisterValue
  5269 ;;		_ADXL345_GetXyz
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           
  5274                           ;psect for function _I2C_Write
  5275  017E                     _I2C_Write:	
  5276                           
  5277                           ;incstack = 0
  5278                           ; Regs used in _I2C_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  5279                           ;I2C_Write@slaveAddress stored from wreg
  5280  017E  0020               	movlb	0	; select bank0
  5281  017F  00D0               	movwf	I2C_Write@slaveAddress
  5282                           
  5283                           ;Communication.c: 105: unsigned char status = 0;
  5284  0180  01CF               	clrf	I2C_Write@status
  5285                           
  5286                           ;Communication.c: 106: unsigned char acknowledge = 0;
  5287  0181  01D1               	clrf	I2C_Write@acknowledge
  5288                           
  5289                           ;Communication.c: 107: unsigned char byte = 0;
  5290  0182  01D2               	clrf	I2C_Write@byte
  5291                           
  5292                           ;Communication.c: 110: SSP1CON2bits.SEN = 1;
  5293  0183  0024               	movlb	4	; select bank4
  5294  0184  1416               	bsf	22,0	;volatile
  5295  0185                     l600:	
  5296                           ;Communication.c: 111: while(SSP1CON2bits.SEN);
  5297                           
  5298  0185  1816               	btfsc	22,0	;volatile
  5299  0186  2985               	goto	l600
  5300                           
  5301                           ;Communication.c: 112: PIR1bits.SSP1IF = 0;
  5302  0187  0020               	movlb	0	; select bank0
  5303  0188  1190               	bcf	16,3	;volatile
  5304                           
  5305                           ;Communication.c: 114: SSP1BUF = slaveAddress << 1;
  5306  0189  3550               	lslf	I2C_Write@slaveAddress,w
  5307  018A  0024               	movlb	4	; select bank4
  5308  018B  0091               	movwf	17	;volatile
  5309  018C                     l603:	
  5310                           ;Communication.c: 115: while(!PIR1bits.SSP1IF);
  5311                           
  5312  018C  0020               	movlb	0	; select bank0
  5313  018D  1D90               	btfss	16,3	;volatile
  5314  018E  298C               	goto	l603
  5315                           
  5316                           ;Communication.c: 116: PIR1bits.SSP1IF = 0;
  5317  018F  1190               	bcf	16,3	;volatile
  5318                           
  5319                           ;Communication.c: 117: acknowledge = SSP1CON2bits.ACKSTAT;
  5320  0190  3000               	movlw	0
  5321  0191  0024               	movlb	4	; select bank4
  5322  0192  1B16               	btfsc	22,6	;volatile
  5323  0193  3001               	movlw	1
  5324  0194  0020               	movlb	0	; select bank0
  5325  0195  00D1               	movwf	I2C_Write@acknowledge
  5326                           
  5327                           ;Communication.c: 118: if (acknowledge == 0)
  5328  0196  0851               	movf	I2C_Write@acknowledge,w
  5329  0197  1D03               	btfss	3,2
  5330  0198  29B0               	goto	l2901
  5331                           
  5332                           ;Communication.c: 119: {
  5333                           ;Communication.c: 120: for(byte = 0; byte < bytesNumber; byte++)
  5334  0199  01D2               	clrf	I2C_Write@byte
  5335  019A                     l2899:	
  5336  019A  084C               	movf	I2C_Write@bytesNumber,w
  5337  019B  0252               	subwf	I2C_Write@byte,w
  5338  019C  1803               	btfsc	3,0
  5339  019D  29B4               	goto	l2903
  5340                           
  5341                           ;Communication.c: 121: {
  5342                           ;Communication.c: 122: SSP1BUF = dataBuffer[byte];
  5343  019E  0852               	movf	I2C_Write@byte,w
  5344  019F  074B               	addwf	I2C_Write@dataBuffer,w
  5345  01A0  00CE               	movwf	??_I2C_Write
  5346  01A1  084E               	movf	??_I2C_Write,w
  5347  01A2  0086               	movwf	6
  5348  01A3  0187               	clrf	7
  5349  01A4  0801               	movf	1,w
  5350  01A5  0024               	movlb	4	; select bank4
  5351  01A6  0091               	movwf	17	;volatile
  5352  01A7                     l609:	
  5353                           ;Communication.c: 123: while(!PIR1bits.SSP1IF);
  5354                           
  5355  01A7  0020               	movlb	0	; select bank0
  5356  01A8  1D90               	btfss	16,3	;volatile
  5357  01A9  29A7               	goto	l609
  5358                           
  5359                           ;Communication.c: 124: PIR1bits.SSP1IF = 0;
  5360  01AA  1190               	bcf	16,3	;volatile
  5361  01AB  3001               	movlw	1
  5362  01AC  00CE               	movwf	??_I2C_Write
  5363  01AD  084E               	movf	??_I2C_Write,w
  5364  01AE  07D2               	addwf	I2C_Write@byte,f
  5365  01AF  299A               	goto	l2899
  5366  01B0                     l2901:	
  5367                           ;Communication.c: 125: }
  5368                           ;Communication.c: 126: }
  5369                           
  5370                           
  5371                           ;Communication.c: 127: else
  5372                           ;Communication.c: 128: {
  5373                           ;Communication.c: 129: status = 0xFF;
  5374  01B0  30FF               	movlw	255
  5375  01B1  00CE               	movwf	??_I2C_Write
  5376  01B2  084E               	movf	??_I2C_Write,w
  5377  01B3  00CF               	movwf	I2C_Write@status
  5378  01B4                     l2903:	
  5379                           
  5380                           ;Communication.c: 130: }
  5381                           ;Communication.c: 131: if(stopBit)
  5382  01B4  084D               	movf	I2C_Write@stopBit,w
  5383  01B5  1903               	btfsc	3,2
  5384  01B6  0008               	return
  5385                           
  5386                           ;Communication.c: 132: {
  5387                           ;Communication.c: 133: SSP1CON2bits.PEN = 1;
  5388  01B7  0024               	movlb	4	; select bank4
  5389  01B8  1516               	bsf	22,2	;volatile
  5390  01B9                     l615:	
  5391                           ;Communication.c: 134: while(SSP1CON2bits.PEN);
  5392                           
  5393  01B9  1D16               	btfss	22,2	;volatile
  5394  01BA  0008               	return
  5395  01BB  29B9               	goto	l615
  5396  01BC                     __end_of_I2C_Write:	
  5397                           ;Communication.c: 135: }
  5398                           ;Communication.c: 137: return status;
  5399                           ;	Return value of _I2C_Write is never used
  5400                           
  5401                           
  5402                           	psect	text12
  5403  003D                     __ptext12:	
  5404 ;; *************** function _I2C_Read *****************
  5405 ;; Defined at:
  5406 ;;		line 152 in file "Communication.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  slaveAddress    1    wreg     unsigned char 
  5409 ;;  dataBuffer      1    5[BANK0 ] PTR unsigned char 
  5410 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@registerValue(1), 
  5411 ;;  bytesNumber     1    6[BANK0 ] unsigned char 
  5412 ;;  stopBit         1    7[BANK0 ] unsigned char 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;  slaveAddress    1   11[BANK0 ] unsigned char 
  5415 ;;  byte            1   13[BANK0 ] unsigned char 
  5416 ;;  acknowledge     1   12[BANK0 ] unsigned char 
  5417 ;;  status          1   10[BANK0 ] unsigned char 
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      unsigned char 
  5420 ;; Registers used:
  5421 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5427 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5428 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5429 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5430 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5431 ;;Total ram usage:        9 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    5
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_ADXL345_GetRegisterValue
  5438 ;;		_ADXL345_GetXyz
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           
  5443                           ;psect for function _I2C_Read
  5444  003D                     _I2C_Read:	
  5445                           
  5446                           ;incstack = 0
  5447                           ; Regs used in _I2C_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5448                           ;I2C_Read@slaveAddress stored from wreg
  5449  003D  0020               	movlb	0	; select bank0
  5450  003E  00D1               	movwf	I2C_Read@slaveAddress
  5451                           
  5452                           ;Communication.c: 157: unsigned char status = bytesNumber;
  5453  003F  084C               	movf	I2C_Read@bytesNumber,w
  5454  0040  00CE               	movwf	??_I2C_Read
  5455  0041  084E               	movf	??_I2C_Read,w
  5456  0042  00D0               	movwf	I2C_Read@status
  5457                           
  5458                           ;Communication.c: 158: unsigned char acknowledge = 0;
  5459  0043  01D2               	clrf	I2C_Read@acknowledge
  5460                           
  5461                           ;Communication.c: 159: unsigned char byte = 0;
  5462  0044  01D3               	clrf	I2C_Read@byte
  5463                           
  5464                           ;Communication.c: 161: SSP1CON2bits.RSEN = 1;
  5465  0045  0024               	movlb	4	; select bank4
  5466  0046  1496               	bsf	22,1	;volatile
  5467  0047                     l621:	
  5468                           ;Communication.c: 162: while(SSP1CON2bits.RSEN);
  5469                           
  5470  0047  1896               	btfsc	22,1	;volatile
  5471  0048  2847               	goto	l621
  5472                           
  5473                           ;Communication.c: 163: PIR1bits.SSP1IF = 0;
  5474  0049  0020               	movlb	0	; select bank0
  5475  004A  1190               	bcf	16,3	;volatile
  5476                           
  5477                           ;Communication.c: 165: SSP1BUF = (slaveAddress << 1) + 1;
  5478  004B  1403               	setc
  5479  004C  0D51               	rlf	I2C_Read@slaveAddress,w
  5480  004D  0024               	movlb	4	; select bank4
  5481  004E  0091               	movwf	17	;volatile
  5482  004F                     l624:	
  5483                           ;Communication.c: 166: while(!PIR1bits.SSP1IF);
  5484                           
  5485  004F  0020               	movlb	0	; select bank0
  5486  0050  1D90               	btfss	16,3	;volatile
  5487  0051  284F               	goto	l624
  5488                           
  5489                           ;Communication.c: 167: PIR1bits.SSP1IF = 0;
  5490  0052  1190               	bcf	16,3	;volatile
  5491                           
  5492                           ;Communication.c: 168: acknowledge = SSP1CON2bits.ACKSTAT;
  5493  0053  3000               	movlw	0
  5494  0054  0024               	movlb	4	; select bank4
  5495  0055  1B16               	btfsc	22,6	;volatile
  5496  0056  3001               	movlw	1
  5497  0057  0020               	movlb	0	; select bank0
  5498  0058  00D2               	movwf	I2C_Read@acknowledge
  5499                           
  5500                           ;Communication.c: 169: if (acknowledge == 0)
  5501  0059  0852               	movf	I2C_Read@acknowledge,w
  5502  005A  1D03               	btfss	3,2
  5503  005B  288A               	goto	l2933
  5504                           
  5505                           ;Communication.c: 170: {
  5506                           ;Communication.c: 171: for(byte = 0; byte < bytesNumber; byte++)
  5507  005C  01D3               	clrf	I2C_Read@byte
  5508  005D                     l2931:	
  5509  005D  084C               	movf	I2C_Read@bytesNumber,w
  5510  005E  0253               	subwf	I2C_Read@byte,w
  5511  005F  1803               	btfsc	3,0
  5512  0060  288E               	goto	l2935
  5513                           
  5514                           ;Communication.c: 172: {
  5515                           ;Communication.c: 173: SSP1CON2bits.RCEN = 1;
  5516  0061  0024               	movlb	4	; select bank4
  5517  0062  1596               	bsf	22,3	;volatile
  5518  0063                     l630:	
  5519                           ;Communication.c: 174: while(!SSP1STATbits.BF);
  5520                           
  5521  0063  1C14               	btfss	20,0	;volatile
  5522  0064  2863               	goto	l630
  5523                           
  5524                           ;Communication.c: 175: dataBuffer[byte] = SSPBUF;
  5525  0065  0811               	movf	17,w	;volatile
  5526  0066  0020               	movlb	0	; select bank0
  5527  0067  00CE               	movwf	??_I2C_Read
  5528  0068  0853               	movf	I2C_Read@byte,w
  5529  0069  074B               	addwf	I2C_Read@dataBuffer,w
  5530  006A  00CF               	movwf	??_I2C_Read+1
  5531  006B  084F               	movf	??_I2C_Read+1,w
  5532  006C  0086               	movwf	6
  5533  006D  0187               	clrf	7
  5534  006E  084E               	movf	??_I2C_Read,w
  5535  006F  0081               	movwf	1
  5536                           
  5537                           ;Communication.c: 176: if(byte == (bytesNumber - 1))
  5538  0070  084C               	movf	I2C_Read@bytesNumber,w
  5539  0071  3EFF               	addlw	255
  5540  0072  00CE               	movwf	??_I2C_Read
  5541  0073  30FF               	movlw	255
  5542  0074  1803               	skipnc
  5543  0075  3000               	movlw	0
  5544  0076  00CF               	movwf	??_I2C_Read+1
  5545  0077  0853               	movf	I2C_Read@byte,w
  5546  0078  064E               	xorwf	??_I2C_Read,w
  5547  0079  044F               	iorwf	??_I2C_Read+1,w
  5548  007A  1D03               	skipz
  5549  007B  287F               	goto	l633
  5550                           
  5551                           ;Communication.c: 177: {
  5552                           ;Communication.c: 178: SSP1CON2bits.ACKDT = 1;
  5553  007C  0024               	movlb	4	; select bank4
  5554  007D  1696               	bsf	22,5	;volatile
  5555                           
  5556                           ;Communication.c: 179: }
  5557  007E  2881               	goto	l634
  5558  007F                     l633:	
  5559                           
  5560                           ;Communication.c: 180: else
  5561                           ;Communication.c: 181: {
  5562                           ;Communication.c: 182: SSP1CON2bits.ACKDT = 0;
  5563  007F  0024               	movlb	4	; select bank4
  5564  0080  1296               	bcf	22,5	;volatile
  5565  0081                     l634:	
  5566                           
  5567                           ;Communication.c: 183: }
  5568                           ;Communication.c: 184: SSP1CON2bits.ACKEN = 1;
  5569  0081  1616               	bsf	22,4	;volatile
  5570  0082                     l635:	
  5571                           ;Communication.c: 185: while(SSP1CON2bits.ACKEN);
  5572                           
  5573  0082  1A16               	btfsc	22,4	;volatile
  5574  0083  2882               	goto	l635
  5575  0084  3001               	movlw	1
  5576  0085  0020               	movlb	0	; select bank0
  5577  0086  00CE               	movwf	??_I2C_Read
  5578  0087  084E               	movf	??_I2C_Read,w
  5579  0088  07D3               	addwf	I2C_Read@byte,f
  5580  0089  285D               	goto	l2931
  5581  008A                     l2933:	
  5582                           ;Communication.c: 186: }
  5583                           ;Communication.c: 187: }
  5584                           
  5585                           
  5586                           ;Communication.c: 188: else
  5587                           ;Communication.c: 189: {
  5588                           ;Communication.c: 190: status = 0xFF;
  5589  008A  30FF               	movlw	255
  5590  008B  00CE               	movwf	??_I2C_Read
  5591  008C  084E               	movf	??_I2C_Read,w
  5592  008D  00D0               	movwf	I2C_Read@status
  5593  008E                     l2935:	
  5594                           
  5595                           ;Communication.c: 191: }
  5596                           ;Communication.c: 192: SSP1CON2bits.PEN = 1;
  5597  008E  0024               	movlb	4	; select bank4
  5598  008F  1516               	bsf	22,2	;volatile
  5599  0090                     l640:	
  5600                           ;Communication.c: 193: while(SSP1CON2bits.PEN);
  5601                           
  5602  0090  1D16               	btfss	22,2	;volatile
  5603  0091  0008               	return
  5604  0092  2890               	goto	l640
  5605  0093                     __end_of_I2C_Read:	
  5606                           ;Communication.c: 195: return status;
  5607                           ;	Return value of _I2C_Read is never used
  5608                           
  5609                           
  5610                           	psect	intentry
  5611  0004                     __pintentry:	
  5612 ;; *************** function _INTERRUPT_InterruptManager *****************
  5613 ;; Defined at:
  5614 ;;		line 51 in file "interrupt_manager.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;		None
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;		None
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      void 
  5621 ;; Registers used:
  5622 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;Total ram usage:        1 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    4
  5635 ;; This function calls:
  5636 ;;		_I2C_BusCollisionISR
  5637 ;;		_TMR0_ISR
  5638 ;; This function is called by:
  5639 ;;		Interrupt level 1
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643  0004                     _INTERRUPT_InterruptManager:	
  5644                           
  5645                           ;incstack = 0
  5646  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5647                           
  5648                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5649  0005  3180               	pagesel	$
  5650  0006  0020               	movlb	0	; select bank0
  5651  0007  087F               	movf	127,w
  5652  0008  00CA               	movwf	??_INTERRUPT_InterruptManager
  5653                           
  5654                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  5655  0009  1A8B               	btfsc	11,5	;volatile
  5656  000A  1D0B               	btfss	11,2	;volatile
  5657  000B  2810               	goto	i1l320
  5658                           
  5659                           ;interrupt_manager.c: 55: {
  5660                           ;interrupt_manager.c: 56: TMR0_ISR();
  5661  000C  3182  22F9  3180   	fcall	_TMR0_ISR
  5662                           
  5663                           ;interrupt_manager.c: 57: }
  5664  000F  2823               	goto	i1l328
  5665  0010                     i1l320:	
  5666                           
  5667                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1)
  5668  0010  1F0B               	btfss	11,6	;volatile
  5669  0011  2823               	goto	i1l328
  5670                           
  5671                           ;interrupt_manager.c: 59: {
  5672                           ;interrupt_manager.c: 60: if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  5673  0012  0021               	movlb	1	; select bank1
  5674  0013  1D91               	btfss	17,3	;volatile
  5675  0014  281C               	goto	i1l323
  5676  0015  0020               	movlb	0	; select bank0
  5677  0016  1D91               	btfss	17,3	;volatile
  5678  0017  281C               	goto	i1l323
  5679                           
  5680                           ;interrupt_manager.c: 61: {
  5681                           ;interrupt_manager.c: 62: I2C_BusCollisionISR();
  5682  0018  3183  239A  3180   	fcall	_I2C_BusCollisionISR
  5683                           
  5684                           ;interrupt_manager.c: 63: }
  5685  001B  2823               	goto	i1l328
  5686  001C                     i1l323:	
  5687                           
  5688                           ;interrupt_manager.c: 64: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  5689  001C  0021               	movlb	1	; select bank1
  5690  001D  1D90               	btfss	16,3	;volatile
  5691  001E  2823               	goto	i1l328
  5692  001F  0020               	movlb	0	; select bank0
  5693  0020  1D90               	btfss	16,3	;volatile
  5694  0021  2823               	goto	i1l328
  5695                           
  5696                           ;interrupt_manager.c: 65: {
  5697                           ;interrupt_manager.c: 66: PIR1bits.SSP1IF = 0;
  5698  0022  1190               	bcf	16,3	;volatile
  5699  0023                     i1l328:	
  5700                           ;interrupt_manager.c: 74: else
  5701                           ;interrupt_manager.c: 75: {
  5702                           
  5703                           ;interrupt_manager.c: 72: }
  5704                           ;interrupt_manager.c: 73: }
  5705                           
  5706                           ;interrupt_manager.c: 69: else
  5707                           ;interrupt_manager.c: 70: {
  5708                           
  5709                           ;interrupt_manager.c: 68: }
  5710                           
  5711  0023  0020               	movlb	0	; select bank0
  5712  0024  084A               	movf	??_INTERRUPT_InterruptManager,w
  5713  0025  00FF               	movwf	127
  5714  0026  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5715  0027  0009               	retfie
  5716  0028                     __end_of_INTERRUPT_InterruptManager:	
  5717                           
  5718                           	psect	text14
  5719  02F9                     __ptext14:	
  5720 ;; *************** function _TMR0_ISR *****************
  5721 ;; Defined at:
  5722 ;;		line 115 in file "tmr0.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;		None
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;		None
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      void 
  5729 ;; Registers used:
  5730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5740 ;;Total ram usage:        0 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; Hardware stack levels required when called:    3
  5743 ;; This function calls:
  5744 ;;		_TMR0_CallBack
  5745 ;; This function is called by:
  5746 ;;		_INTERRUPT_InterruptManager
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           
  5751                           ;psect for function _TMR0_ISR
  5752  02F9                     _TMR0_ISR:	
  5753                           
  5754                           ;tmr0.c: 117: static volatile uint16_t CountCallBack = 0;
  5755                           ;tmr0.c: 120: INTCONbits.TMR0IF = 0;
  5756                           
  5757                           ;incstack = 0
  5758                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5759  02F9  110B               	bcf	11,2	;volatile
  5760                           
  5761                           ;tmr0.c: 122: TMR0 = timer0ReloadVal;
  5762  02FA  0020               	movlb	0	; select bank0
  5763  02FB  0861               	movf	_timer0ReloadVal,w	;volatile
  5764  02FC  0095               	movwf	21	;volatile
  5765                           
  5766                           ;tmr0.c: 125: if (++CountCallBack >= 5)
  5767  02FD  3001               	movlw	1
  5768  02FE  07AD               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  5769  02FF  3000               	movlw	0
  5770  0300  3DAE               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  5771  0301  3000               	movlw	0
  5772  0302  022E               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  5773  0303  3005               	movlw	5
  5774  0304  1903               	skipnz
  5775  0305  022D               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  5776  0306  1C03               	skipc
  5777  0307  2B0F               	goto	L2
  5778                           
  5779                           ;tmr0.c: 126: {
  5780                           ;tmr0.c: 128: TMR0_CallBack();
  5781  0308  3183  236C  3182   	fcall	_TMR0_CallBack
  5782                           
  5783                           ;tmr0.c: 131: CountCallBack = 0;
  5784  030B  0020               	movlb	0	; select bank0
  5785  030C  01AD               	clrf	TMR0_ISR@CountCallBack	;volatile
  5786  030D  01AE               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  5787                           
  5788                           ;tmr0.c: 132: }
  5789                           ;tmr0.c: 133: do { LATCbits.LATC5 = ~LATCbits.LATC5; } while(0);
  5790  030E  1003               	clrc
  5791  030F                     L2:	
  5792  030F  0022               	movlb	2	; select bank2
  5793  0310  1E8E               	btfss	14,5	;volatile
  5794  0311  1403               	setc
  5795  0312  1C03               	btfss	3,0
  5796  0313  2B17               	goto	u198_20
  5797  0314  0022               	movlb	2	; select bank2
  5798  0315  168E               	bsf	14,5	;volatile
  5799  0316  0008               	return
  5800  0317                     u198_20:	
  5801  0317  0022               	movlb	2	; select bank2
  5802  0318  128E               	bcf	14,5	;volatile
  5803  0319  0008               	return
  5804  031A                     __end_of_TMR0_ISR:	
  5805                           
  5806                           	psect	text15
  5807  036C                     __ptext15:	
  5808 ;; *************** function _TMR0_CallBack *****************
  5809 ;; Defined at:
  5810 ;;		line 138 in file "tmr0.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;		None
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;  DeviceID        1   13[COMMON] unsigned char 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  1    wreg      void 
  5817 ;; Registers used:
  5818 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5828 ;;Total ram usage:        2 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    2
  5831 ;; This function calls:
  5832 ;;		Absolute function
  5833 ;;		_TMR0_DefaultInterruptHandler
  5834 ;;		i1_ADXL345_GetRegisterValue
  5835 ;; This function is called by:
  5836 ;;		_TMR0_ISR
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           
  5841                           ;psect for function _TMR0_CallBack
  5842  036C                     _TMR0_CallBack:	
  5843                           
  5844                           ;tmr0.c: 141: unsigned char DeviceID;
  5845                           ;tmr0.c: 142: DeviceID = ADXL345_GetRegisterValue(0x00);
  5846                           
  5847                           ;incstack = 0
  5848                           ; Regs used in _TMR0_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5849  036C  3000               	movlw	0
  5850  036D  3182  2271  3183   	fcall	i1_ADXL345_GetRegisterValue
  5851  0370  00FC               	movwf	??_TMR0_CallBack
  5852  0371  087C               	movf	??_TMR0_CallBack,w
  5853  0372  00FD               	movwf	TMR0_CallBack@DeviceID
  5854                           
  5855                           ;tmr0.c: 143: if(TMR0_InterruptHandler)
  5856  0373  0020               	movlb	0	; select bank0
  5857  0374  085F               	movf	_TMR0_InterruptHandler,w
  5858  0375  0460               	iorwf	_TMR0_InterruptHandler+1,w
  5859  0376  1903               	btfsc	3,2
  5860  0377  0008               	return
  5861                           
  5862                           ;tmr0.c: 144: {
  5863                           ;tmr0.c: 145: TMR0_InterruptHandler();
  5864  0378  0860               	movf	_TMR0_InterruptHandler+1,w
  5865  0379  008A               	movwf	10
  5866  037A  085F               	movf	_TMR0_InterruptHandler,w
  5867  037B  000A               	callw
  5868  037C  3183               	pagesel	$
  5869  037D  0008               	return
  5870  037E                     __end_of_TMR0_CallBack:	
  5871                           
  5872                           	psect	text16
  5873  0271                     __ptext16:	
  5874 ;; *************** function i1_ADXL345_GetRegisterValue *****************
  5875 ;; Defined at:
  5876 ;;		line 67 in file "ADXL345.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  registerAddr    1    wreg     unsigned char 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;  registerAddr    1    2[BANK0 ] unsigned char 
  5881 ;;  ADXL345_GetR    2    0[BANK0 ] unsigned char [2]
  5882 ;;  ADXL345_GetR    1    3[BANK0 ] unsigned char 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      unsigned char 
  5885 ;; Registers used:
  5886 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5894 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;Total ram usage:        6 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    1
  5899 ;; This function calls:
  5900 ;;		i1_I2C_Read
  5901 ;;		i1_I2C_Write
  5902 ;;		i1_SPI_Read
  5903 ;; This function is called by:
  5904 ;;		_TMR0_CallBack
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           
  5909                           ;psect for function i1_ADXL345_GetRegisterValue
  5910  0271                     i1_ADXL345_GetRegisterValue:	
  5911                           
  5912                           ;incstack = 0
  5913                           ; Regs used in i1_ADXL345_GetRegisterValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5914                           ;i1ADXL345_GetRegisterValue@registerAddress stored from wreg
  5915  0271  0020               	movlb	0	; select bank0
  5916  0272  00C8               	movwf	i1ADXL345_GetRegisterValue@registerAddress
  5917                           
  5918                           ;ADXL345.c: 69: unsigned char dataBuffer[2] = {0, 0};
  5919  0273  082C               	movf	ADXL345_GetRegisterValue@F85+1,w
  5920  0274  00C7               	movwf	i1ADXL345_GetRegisterValue@dataBuffer+1
  5921  0275  082B               	movf	ADXL345_GetRegisterValue@F85,w
  5922  0276  00C6               	movwf	i1ADXL345_GetRegisterValue@dataBuffer
  5923                           
  5924                           ;ADXL345.c: 70: unsigned char registerValue = 0;
  5925  0277  01C9               	clrf	i1ADXL345_GetRegisterValue@registerValue
  5926                           
  5927                           ;ADXL345.c: 72: if(communicationType == 0)
  5928  0278  0831               	movf	_communicationType,w
  5929  0279  1D03               	btfss	3,2
  5930  027A  2A93               	goto	i1l2155
  5931                           
  5932                           ;ADXL345.c: 73: {
  5933                           ;ADXL345.c: 74: dataBuffer[0] = (1 << 7) | registerAddress;
  5934  027B  0848               	movf	i1ADXL345_GetRegisterValue@registerAddress,w
  5935  027C  3880               	iorlw	128
  5936  027D  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  5937  027E  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  5938  027F  00C6               	movwf	i1ADXL345_GetRegisterValue@dataBuffer
  5939                           
  5940                           ;ADXL345.c: 75: dataBuffer[1] = 0;
  5941  0280  01C7               	clrf	i1ADXL345_GetRegisterValue@dataBuffer+1
  5942                           
  5943                           ;ADXL345.c: 76: SPI_Read(1, dataBuffer, 2);
  5944  0281  3046               	movlw	(low (i1ADXL345_GetRegisterValue@dataBuffer| 0))& (0+255)
  5945  0282  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  5946  0283  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  5947  0284  00F0               	movwf	i1SPI_Read@data
  5948  0285  3002               	movlw	2
  5949  0286  00FB               	movwf	??i1_ADXL345_GetRegisterValue+1
  5950  0287  087B               	movf	??i1_ADXL345_GetRegisterValue+1,w
  5951  0288  00F1               	movwf	i1SPI_Read@bytesNumber
  5952  0289  3001               	movlw	1
  5953  028A  3181  2131  3182   	fcall	i1_SPI_Read
  5954                           
  5955                           ;ADXL345.c: 77: registerValue = dataBuffer[1];
  5956  028D  0020               	movlb	0	; select bank0
  5957  028E  0847               	movf	i1ADXL345_GetRegisterValue@dataBuffer+1,w
  5958  028F  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  5959  0290  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  5960  0291  00C9               	movwf	i1ADXL345_GetRegisterValue@registerValue
  5961                           
  5962                           ;ADXL345.c: 78: }
  5963  0292  2AA9               	goto	i1l2157
  5964  0293                     i1l2155:	
  5965                           
  5966                           ;ADXL345.c: 79: else
  5967                           ;ADXL345.c: 80: {
  5968                           ;ADXL345.c: 81: I2C_Write(0x1D,
  5969                           ;ADXL345.c: 82: &registerAddress,
  5970                           ;ADXL345.c: 83: 1,
  5971                           ;ADXL345.c: 84: 0);
  5972  0293  3048               	movlw	(low (i1ADXL345_GetRegisterValue@registerAddress| 0))& (0+255)
  5973  0294  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  5974  0295  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  5975  0296  00F0               	movwf	i1I2C_Write@dataBuffer
  5976  0297  01F1               	clrf	i1I2C_Write@bytesNumber
  5977  0298  0AF1               	incf	i1I2C_Write@bytesNumber,f
  5978  0299  01F2               	clrf	i1I2C_Write@stopBit
  5979  029A  301D               	movlw	29
  5980  029B  3182  2235  3182   	fcall	i1_I2C_Write
  5981                           
  5982                           ;ADXL345.c: 85: I2C_Read(0x1D,
  5983                           ;ADXL345.c: 86: &registerValue,
  5984                           ;ADXL345.c: 87: 1,
  5985                           ;ADXL345.c: 88: 1);
  5986  029E  3049               	movlw	(low (i1ADXL345_GetRegisterValue@registerValue| 0))& (0+255)
  5987  029F  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  5988  02A0  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  5989  02A1  00F0               	movwf	i1I2C_Read@dataBuffer
  5990  02A2  01F1               	clrf	i1I2C_Read@bytesNumber
  5991  02A3  0AF1               	incf	i1I2C_Read@bytesNumber,f
  5992  02A4  01F2               	clrf	i1I2C_Read@stopBit
  5993  02A5  0AF2               	incf	i1I2C_Read@stopBit,f
  5994  02A6  301D               	movlw	29
  5995  02A7  3180  20E3         	fcall	i1_I2C_Read
  5996  02A9                     i1l2157:	
  5997                           
  5998                           ;ADXL345.c: 89: }
  5999                           ;ADXL345.c: 91: return registerValue;
  6000  02A9  0020               	movlb	0	; select bank0
  6001  02AA  0849               	movf	i1ADXL345_GetRegisterValue@registerValue,w
  6002  02AB  0008               	return
  6003  02AC                     __end_ofi1_ADXL345_GetRegisterValue:	
  6004                           
  6005                           	psect	text17
  6006  0131                     __ptext17:	
  6007 ;; *************** function i1_SPI_Read *****************
  6008 ;; Defined at:
  6009 ;;		line 261 in file "Communication.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  slaveDeviceI    1    wreg     unsigned char 
  6012 ;;  data            1    0[COMMON] PTR unsigned char 
  6013 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@dataBuffer(2), 
  6014 ;;  bytesNumber     1    1[COMMON] unsigned char 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  slaveDeviceI    1    8[COMMON] unsigned char 
  6017 ;;  SPI_Read        4    4[COMMON] unsigned char [4]
  6018 ;;  SPI_Read        1    9[COMMON] unsigned char 
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  1    wreg      unsigned char 
  6021 ;; Registers used:
  6022 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6031 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6032 ;;Total ram usage:       10 bytes
  6033 ;; Hardware stack levels used:    1
  6034 ;; This function calls:
  6035 ;;		Nothing
  6036 ;; This function is called by:
  6037 ;;		i1_ADXL345_GetRegisterValue
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           
  6042                           ;psect for function i1_SPI_Read
  6043  0131                     i1_SPI_Read:	
  6044                           
  6045                           ;incstack = 0
  6046                           ; Regs used in i1_SPI_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6047                           ;i1SPI_Read@slaveDeviceId stored from wreg
  6048  0131  00F8               	movwf	i1SPI_Read@slaveDeviceId
  6049                           
  6050                           ;Communication.c: 265: unsigned char byte = 0;
  6051  0132  01F9               	clrf	i1SPI_Read@byte
  6052                           
  6053                           ;Communication.c: 266: unsigned char writeBuffer[4] = {0, 0, 0, 0};
  6054  0133  0020               	movlb	0	; select bank0
  6055  0134  0828               	movf	SPI_Read@F12019+3,w
  6056  0135  00F7               	movwf	i1SPI_Read@writeBuffer+3
  6057  0136  0827               	movf	SPI_Read@F12019+2,w
  6058  0137  00F6               	movwf	i1SPI_Read@writeBuffer+2
  6059  0138  0826               	movf	SPI_Read@F12019+1,w
  6060  0139  00F5               	movwf	i1SPI_Read@writeBuffer+1
  6061  013A  0825               	movf	SPI_Read@F12019,w
  6062  013B  00F4               	movwf	i1SPI_Read@writeBuffer
  6063                           
  6064                           ;Communication.c: 269: SSP1CON1bits.WCOL = 0;
  6065  013C  0024               	movlb	4	; select bank4
  6066  013D  1395               	bcf	21,7	;volatile
  6067                           
  6068                           ;Communication.c: 271: for(byte = 0; byte < bytesNumber; byte++)
  6069  013E  01F9               	clrf	i1SPI_Read@byte
  6070  013F                     i1l2041:	
  6071  013F  0871               	movf	i1SPI_Read@bytesNumber,w
  6072  0140  0279               	subwf	i1SPI_Read@byte,w
  6073  0141  1803               	btfsc	3,0
  6074  0142  2956               	goto	i1l2043
  6075                           
  6076                           ;Communication.c: 272: {
  6077                           ;Communication.c: 273: writeBuffer[byte] = data[byte];
  6078  0143  0879               	movf	i1SPI_Read@byte,w
  6079  0144  0770               	addwf	i1SPI_Read@data,w
  6080  0145  00F2               	movwf	??i1_SPI_Read
  6081  0146  0872               	movf	??i1_SPI_Read,w
  6082  0147  0086               	movwf	6
  6083  0148  0187               	clrf	7
  6084  0149  0801               	movf	1,w
  6085  014A  00F3               	movwf	??i1_SPI_Read+1
  6086  014B  0879               	movf	i1SPI_Read@byte,w
  6087  014C  3E74               	addlw	(low (i1SPI_Read@writeBuffer| 0))& (0+255)
  6088  014D  0086               	movwf	6
  6089  014E  0187               	clrf	7
  6090  014F  0873               	movf	??i1_SPI_Read+1,w
  6091  0150  0081               	movwf	1
  6092  0151  3001               	movlw	1
  6093  0152  00F2               	movwf	??i1_SPI_Read
  6094  0153  0872               	movf	??i1_SPI_Read,w
  6095  0154  07F9               	addwf	i1SPI_Read@byte,f
  6096  0155  293F               	goto	i1l2041
  6097  0156                     i1l2043:	
  6098                           
  6099                           ;Communication.c: 274: }
  6100                           ;Communication.c: 275: if(slaveDeviceId == 1)
  6101  0156  0378               	decf	i1SPI_Read@slaveDeviceId,w
  6102  0157  1D03               	btfss	3,2
  6103  0158  295B               	goto	i1l2045
  6104                           
  6105                           ;Communication.c: 276: {
  6106                           ;Communication.c: 277: do { LATCbits.LATC6 = 0; } while(0);
  6107  0159  0022               	movlb	2	; select bank2
  6108  015A  130E               	bcf	14,6	;volatile
  6109  015B                     i1l2045:	
  6110                           
  6111                           ;Communication.c: 278: }
  6112                           ;Communication.c: 279: for(byte = 0; byte < bytesNumber; byte++)
  6113  015B  01F9               	clrf	i1SPI_Read@byte
  6114  015C                     i1l2053:	
  6115  015C  0871               	movf	i1SPI_Read@bytesNumber,w
  6116  015D  0279               	subwf	i1SPI_Read@byte,w
  6117  015E  1803               	btfsc	3,0
  6118  015F  2978               	goto	i1l2055
  6119                           
  6120                           ;Communication.c: 280: {
  6121                           ;Communication.c: 281: SSP1BUF = writeBuffer[byte];
  6122  0160  0879               	movf	i1SPI_Read@byte,w
  6123  0161  3E74               	addlw	(low (i1SPI_Read@writeBuffer| 0))& (0+255)
  6124  0162  0086               	movwf	6
  6125  0163  0187               	clrf	7
  6126  0164  0801               	movf	1,w
  6127  0165  0024               	movlb	4	; select bank4
  6128  0166  0091               	movwf	17	;volatile
  6129  0167                     i1l661:	
  6130                           ;Communication.c: 282: while(SSP1STATbits.BF == 0);
  6131                           
  6132  0167  1C14               	btfss	20,0	;volatile
  6133  0168  2967               	goto	i1l661
  6134                           
  6135                           ;Communication.c: 283: data[byte] = SSP1BUF;
  6136  0169  0811               	movf	17,w	;volatile
  6137  016A  00F2               	movwf	??i1_SPI_Read
  6138  016B  0879               	movf	i1SPI_Read@byte,w
  6139  016C  0770               	addwf	i1SPI_Read@data,w
  6140  016D  00F3               	movwf	??i1_SPI_Read+1
  6141  016E  0873               	movf	??i1_SPI_Read+1,w
  6142  016F  0086               	movwf	6
  6143  0170  0187               	clrf	7
  6144  0171  0872               	movf	??i1_SPI_Read,w
  6145  0172  0081               	movwf	1
  6146  0173  3001               	movlw	1
  6147  0174  00F2               	movwf	??i1_SPI_Read
  6148  0175  0872               	movf	??i1_SPI_Read,w
  6149  0176  07F9               	addwf	i1SPI_Read@byte,f
  6150  0177  295C               	goto	i1l2053
  6151  0178                     i1l2055:	
  6152                           
  6153                           ;Communication.c: 284: }
  6154                           ;Communication.c: 286: if(slaveDeviceId == 1)
  6155  0178  0378               	decf	i1SPI_Read@slaveDeviceId,w
  6156  0179  1D03               	btfss	3,2
  6157  017A  0008               	return
  6158                           
  6159                           ;Communication.c: 287: {
  6160                           ;Communication.c: 288: do { LATCbits.LATC6 = 1; } while(0);
  6161  017B  0022               	movlb	2	; select bank2
  6162  017C  170E               	bsf	14,6	;volatile
  6163  017D  0008               	return
  6164  017E                     __end_ofi1_SPI_Read:	
  6165                           ;Communication.c: 289: }
  6166                           ;Communication.c: 291: return bytesNumber;
  6167                           ;	Return value of i1_SPI_Read is never used
  6168                           
  6169                           
  6170                           	psect	text18
  6171  0235                     __ptext18:	
  6172 ;; *************** function i1_I2C_Write *****************
  6173 ;; Defined at:
  6174 ;;		line 100 in file "Communication.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  slaveAddress    1    wreg     unsigned char 
  6177 ;;  dataBuffer      1    0[COMMON] PTR unsigned char 
  6178 ;;		 -> ADXL345_GetXyz@firstRegAddress(1), ADXL345_SetRegisterValue@dataBuffer(2), ADXL345_GetRegisterValue@registerAddr
      +ess(1), 
  6179 ;;  bytesNumber     1    1[COMMON] unsigned char 
  6180 ;;  stopBit         1    2[COMMON] unsigned char 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  slaveAddress    1    5[COMMON] unsigned char 
  6183 ;;  I2C_Write       1    7[COMMON] unsigned char 
  6184 ;;  I2C_Write       1    6[COMMON] unsigned char 
  6185 ;;  I2C_Write       1    4[COMMON] unsigned char 
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  1    wreg      unsigned char 
  6188 ;; Registers used:
  6189 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6195 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6198 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6199 ;;Total ram usage:        8 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; This function calls:
  6202 ;;		Nothing
  6203 ;; This function is called by:
  6204 ;;		i1_ADXL345_GetRegisterValue
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           
  6209                           ;psect for function i1_I2C_Write
  6210  0235                     i1_I2C_Write:	
  6211                           
  6212                           ;incstack = 0
  6213                           ; Regs used in i1_I2C_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  6214                           ;i1I2C_Write@slaveAddress stored from wreg
  6215  0235  00F5               	movwf	i1I2C_Write@slaveAddress
  6216                           
  6217                           ;Communication.c: 105: unsigned char status = 0;
  6218  0236  01F4               	clrf	i1I2C_Write@status
  6219                           
  6220                           ;Communication.c: 106: unsigned char acknowledge = 0;
  6221  0237  01F6               	clrf	i1I2C_Write@acknowledge
  6222                           
  6223                           ;Communication.c: 107: unsigned char byte = 0;
  6224  0238  01F7               	clrf	i1I2C_Write@byte
  6225                           
  6226                           ;Communication.c: 110: SSP1CON2bits.SEN = 1;
  6227  0239  0024               	movlb	4	; select bank4
  6228  023A  1416               	bsf	22,0	;volatile
  6229  023B                     i1l600:	
  6230                           ;Communication.c: 111: while(SSP1CON2bits.SEN);
  6231                           
  6232  023B  1816               	btfsc	22,0	;volatile
  6233  023C  2A3B               	goto	i1l600
  6234                           
  6235                           ;Communication.c: 112: PIR1bits.SSP1IF = 0;
  6236  023D  0020               	movlb	0	; select bank0
  6237  023E  1190               	bcf	16,3	;volatile
  6238                           
  6239                           ;Communication.c: 114: SSP1BUF = slaveAddress << 1;
  6240  023F  3575               	lslf	i1I2C_Write@slaveAddress,w
  6241  0240  0024               	movlb	4	; select bank4
  6242  0241  0091               	movwf	17	;volatile
  6243  0242                     i1l603:	
  6244                           ;Communication.c: 115: while(!PIR1bits.SSP1IF);
  6245                           
  6246  0242  0020               	movlb	0	; select bank0
  6247  0243  1D90               	btfss	16,3	;volatile
  6248  0244  2A42               	goto	i1l603
  6249                           
  6250                           ;Communication.c: 116: PIR1bits.SSP1IF = 0;
  6251  0245  1190               	bcf	16,3	;volatile
  6252                           
  6253                           ;Communication.c: 117: acknowledge = SSP1CON2bits.ACKSTAT;
  6254  0246  3000               	movlw	0
  6255  0247  0024               	movlb	4	; select bank4
  6256  0248  1B16               	btfsc	22,6	;volatile
  6257  0249  3001               	movlw	1
  6258  024A  00F6               	movwf	i1I2C_Write@acknowledge
  6259                           
  6260                           ;Communication.c: 118: if (acknowledge == 0)
  6261  024B  0876               	movf	i1I2C_Write@acknowledge,w
  6262  024C  1D03               	btfss	3,2
  6263  024D  2A65               	goto	i1l1993
  6264                           
  6265                           ;Communication.c: 119: {
  6266                           ;Communication.c: 120: for(byte = 0; byte < bytesNumber; byte++)
  6267  024E  01F7               	clrf	i1I2C_Write@byte
  6268  024F                     i1l1991:	
  6269  024F  0871               	movf	i1I2C_Write@bytesNumber,w
  6270  0250  0277               	subwf	i1I2C_Write@byte,w
  6271  0251  1803               	btfsc	3,0
  6272  0252  2A69               	goto	i1l1995
  6273                           
  6274                           ;Communication.c: 121: {
  6275                           ;Communication.c: 122: SSP1BUF = dataBuffer[byte];
  6276  0253  0877               	movf	i1I2C_Write@byte,w
  6277  0254  0770               	addwf	i1I2C_Write@dataBuffer,w
  6278  0255  00F3               	movwf	??i1_I2C_Write
  6279  0256  0873               	movf	??i1_I2C_Write,w
  6280  0257  0086               	movwf	6
  6281  0258  0187               	clrf	7
  6282  0259  0801               	movf	1,w
  6283  025A  0024               	movlb	4	; select bank4
  6284  025B  0091               	movwf	17	;volatile
  6285  025C                     i1l609:	
  6286                           ;Communication.c: 123: while(!PIR1bits.SSP1IF);
  6287                           
  6288  025C  0020               	movlb	0	; select bank0
  6289  025D  1D90               	btfss	16,3	;volatile
  6290  025E  2A5C               	goto	i1l609
  6291                           
  6292                           ;Communication.c: 124: PIR1bits.SSP1IF = 0;
  6293  025F  1190               	bcf	16,3	;volatile
  6294  0260  3001               	movlw	1
  6295  0261  00F3               	movwf	??i1_I2C_Write
  6296  0262  0873               	movf	??i1_I2C_Write,w
  6297  0263  07F7               	addwf	i1I2C_Write@byte,f
  6298  0264  2A4F               	goto	i1l1991
  6299  0265                     i1l1993:	
  6300                           ;Communication.c: 125: }
  6301                           ;Communication.c: 126: }
  6302                           
  6303                           
  6304                           ;Communication.c: 127: else
  6305                           ;Communication.c: 128: {
  6306                           ;Communication.c: 129: status = 0xFF;
  6307  0265  30FF               	movlw	255
  6308  0266  00F3               	movwf	??i1_I2C_Write
  6309  0267  0873               	movf	??i1_I2C_Write,w
  6310  0268  00F4               	movwf	i1I2C_Write@status
  6311  0269                     i1l1995:	
  6312                           
  6313                           ;Communication.c: 130: }
  6314                           ;Communication.c: 131: if(stopBit)
  6315  0269  0872               	movf	i1I2C_Write@stopBit,w
  6316  026A  1903               	btfsc	3,2
  6317  026B  0008               	return
  6318                           
  6319                           ;Communication.c: 132: {
  6320                           ;Communication.c: 133: SSP1CON2bits.PEN = 1;
  6321  026C  0024               	movlb	4	; select bank4
  6322  026D  1516               	bsf	22,2	;volatile
  6323  026E                     i1l615:	
  6324                           ;Communication.c: 134: while(SSP1CON2bits.PEN);
  6325                           
  6326  026E  1D16               	btfss	22,2	;volatile
  6327  026F  0008               	return
  6328  0270  2A6E               	goto	i1l615
  6329  0271                     __end_ofi1_I2C_Write:	
  6330                           ;Communication.c: 135: }
  6331                           ;Communication.c: 137: return status;
  6332                           ;	Return value of i1_I2C_Write is never used
  6333                           
  6334                           
  6335                           	psect	text19
  6336  00E3                     __ptext19:	
  6337 ;; *************** function i1_I2C_Read *****************
  6338 ;; Defined at:
  6339 ;;		line 152 in file "Communication.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  slaveAddress    1    wreg     unsigned char 
  6342 ;;  dataBuffer      1    0[COMMON] PTR unsigned char 
  6343 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@registerValue(1), 
  6344 ;;  bytesNumber     1    1[COMMON] unsigned char 
  6345 ;;  stopBit         1    2[COMMON] unsigned char 
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;  slaveAddress    1    6[COMMON] unsigned char 
  6348 ;;  I2C_Read        1    8[COMMON] unsigned char 
  6349 ;;  I2C_Read        1    7[COMMON] unsigned char 
  6350 ;;  I2C_Read        1    5[COMMON] unsigned char 
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      unsigned char 
  6353 ;; Registers used:
  6354 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6360 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6361 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6363 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6364 ;;Total ram usage:        9 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; This function calls:
  6367 ;;		Nothing
  6368 ;; This function is called by:
  6369 ;;		i1_ADXL345_GetRegisterValue
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           
  6374                           ;psect for function i1_I2C_Read
  6375  00E3                     i1_I2C_Read:	
  6376                           
  6377                           ;incstack = 0
  6378                           ; Regs used in i1_I2C_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6379                           ;i1I2C_Read@slaveAddress stored from wreg
  6380  00E3  00F6               	movwf	i1I2C_Read@slaveAddress
  6381                           
  6382                           ;Communication.c: 157: unsigned char status = bytesNumber;
  6383  00E4  0871               	movf	i1I2C_Read@bytesNumber,w
  6384  00E5  00F3               	movwf	??i1_I2C_Read
  6385  00E6  0873               	movf	??i1_I2C_Read,w
  6386  00E7  00F5               	movwf	i1I2C_Read@status
  6387                           
  6388                           ;Communication.c: 158: unsigned char acknowledge = 0;
  6389  00E8  01F7               	clrf	i1I2C_Read@acknowledge
  6390                           
  6391                           ;Communication.c: 159: unsigned char byte = 0;
  6392  00E9  01F8               	clrf	i1I2C_Read@byte
  6393                           
  6394                           ;Communication.c: 161: SSP1CON2bits.RSEN = 1;
  6395  00EA  0024               	movlb	4	; select bank4
  6396  00EB  1496               	bsf	22,1	;volatile
  6397  00EC                     i1l621:	
  6398                           ;Communication.c: 162: while(SSP1CON2bits.RSEN);
  6399                           
  6400  00EC  1896               	btfsc	22,1	;volatile
  6401  00ED  28EC               	goto	i1l621
  6402                           
  6403                           ;Communication.c: 163: PIR1bits.SSP1IF = 0;
  6404  00EE  0020               	movlb	0	; select bank0
  6405  00EF  1190               	bcf	16,3	;volatile
  6406                           
  6407                           ;Communication.c: 165: SSP1BUF = (slaveAddress << 1) + 1;
  6408  00F0  1403               	setc
  6409  00F1  0D76               	rlf	i1I2C_Read@slaveAddress,w
  6410  00F2  0024               	movlb	4	; select bank4
  6411  00F3  0091               	movwf	17	;volatile
  6412  00F4                     i1l624:	
  6413                           ;Communication.c: 166: while(!PIR1bits.SSP1IF);
  6414                           
  6415  00F4  0020               	movlb	0	; select bank0
  6416  00F5  1D90               	btfss	16,3	;volatile
  6417  00F6  28F4               	goto	i1l624
  6418                           
  6419                           ;Communication.c: 167: PIR1bits.SSP1IF = 0;
  6420  00F7  1190               	bcf	16,3	;volatile
  6421                           
  6422                           ;Communication.c: 168: acknowledge = SSP1CON2bits.ACKSTAT;
  6423  00F8  3000               	movlw	0
  6424  00F9  0024               	movlb	4	; select bank4
  6425  00FA  1B16               	btfsc	22,6	;volatile
  6426  00FB  3001               	movlw	1
  6427  00FC  00F7               	movwf	i1I2C_Read@acknowledge
  6428                           
  6429                           ;Communication.c: 169: if (acknowledge == 0)
  6430  00FD  0877               	movf	i1I2C_Read@acknowledge,w
  6431  00FE  1D03               	btfss	3,2
  6432  00FF  2929               	goto	i1l2025
  6433                           
  6434                           ;Communication.c: 170: {
  6435                           ;Communication.c: 171: for(byte = 0; byte < bytesNumber; byte++)
  6436  0100  01F8               	clrf	i1I2C_Read@byte
  6437  0101                     i1l2023:	
  6438  0101  0871               	movf	i1I2C_Read@bytesNumber,w
  6439  0102  0278               	subwf	i1I2C_Read@byte,w
  6440  0103  1803               	btfsc	3,0
  6441  0104  292D               	goto	i1l2027
  6442                           
  6443                           ;Communication.c: 172: {
  6444                           ;Communication.c: 173: SSP1CON2bits.RCEN = 1;
  6445  0105  1596               	bsf	22,3	;volatile
  6446  0106                     i1l630:	
  6447                           ;Communication.c: 174: while(!SSP1STATbits.BF);
  6448                           
  6449  0106  1C14               	btfss	20,0	;volatile
  6450  0107  2906               	goto	i1l630
  6451                           
  6452                           ;Communication.c: 175: dataBuffer[byte] = SSPBUF;
  6453  0108  0811               	movf	17,w	;volatile
  6454  0109  00F3               	movwf	??i1_I2C_Read
  6455  010A  0878               	movf	i1I2C_Read@byte,w
  6456  010B  0770               	addwf	i1I2C_Read@dataBuffer,w
  6457  010C  00F4               	movwf	??i1_I2C_Read+1
  6458  010D  0874               	movf	??i1_I2C_Read+1,w
  6459  010E  0086               	movwf	6
  6460  010F  0187               	clrf	7
  6461  0110  0873               	movf	??i1_I2C_Read,w
  6462  0111  0081               	movwf	1
  6463                           
  6464                           ;Communication.c: 176: if(byte == (bytesNumber - 1))
  6465  0112  0871               	movf	i1I2C_Read@bytesNumber,w
  6466  0113  3EFF               	addlw	255
  6467  0114  00F3               	movwf	??i1_I2C_Read
  6468  0115  30FF               	movlw	255
  6469  0116  1803               	skipnc
  6470  0117  3000               	movlw	0
  6471  0118  00F4               	movwf	??i1_I2C_Read+1
  6472  0119  0878               	movf	i1I2C_Read@byte,w
  6473  011A  0673               	xorwf	??i1_I2C_Read,w
  6474  011B  0474               	iorwf	??i1_I2C_Read+1,w
  6475  011C  1D03               	skipz
  6476  011D  2920               	goto	i1l633
  6477                           
  6478                           ;Communication.c: 177: {
  6479                           ;Communication.c: 178: SSP1CON2bits.ACKDT = 1;
  6480  011E  1696               	bsf	22,5	;volatile
  6481                           
  6482                           ;Communication.c: 179: }
  6483  011F  2921               	goto	i1l634
  6484  0120                     i1l633:	
  6485                           
  6486                           ;Communication.c: 180: else
  6487                           ;Communication.c: 181: {
  6488                           ;Communication.c: 182: SSP1CON2bits.ACKDT = 0;
  6489  0120  1296               	bcf	22,5	;volatile
  6490  0121                     i1l634:	
  6491                           
  6492                           ;Communication.c: 183: }
  6493                           ;Communication.c: 184: SSP1CON2bits.ACKEN = 1;
  6494  0121  1616               	bsf	22,4	;volatile
  6495  0122                     i1l635:	
  6496                           ;Communication.c: 185: while(SSP1CON2bits.ACKEN);
  6497                           
  6498  0122  1A16               	btfsc	22,4	;volatile
  6499  0123  2922               	goto	i1l635
  6500  0124  3001               	movlw	1
  6501  0125  00F3               	movwf	??i1_I2C_Read
  6502  0126  0873               	movf	??i1_I2C_Read,w
  6503  0127  07F8               	addwf	i1I2C_Read@byte,f
  6504  0128  2901               	goto	i1l2023
  6505  0129                     i1l2025:	
  6506                           ;Communication.c: 186: }
  6507                           ;Communication.c: 187: }
  6508                           
  6509                           
  6510                           ;Communication.c: 188: else
  6511                           ;Communication.c: 189: {
  6512                           ;Communication.c: 190: status = 0xFF;
  6513  0129  30FF               	movlw	255
  6514  012A  00F3               	movwf	??i1_I2C_Read
  6515  012B  0873               	movf	??i1_I2C_Read,w
  6516  012C  00F5               	movwf	i1I2C_Read@status
  6517  012D                     i1l2027:	
  6518                           
  6519                           ;Communication.c: 191: }
  6520                           ;Communication.c: 192: SSP1CON2bits.PEN = 1;
  6521  012D  1516               	bsf	22,2	;volatile
  6522  012E                     i1l640:	
  6523                           ;Communication.c: 193: while(SSP1CON2bits.PEN);
  6524                           
  6525  012E  1D16               	btfss	22,2	;volatile
  6526  012F  0008               	return
  6527  0130  292E               	goto	i1l640
  6528  0131                     __end_ofi1_I2C_Read:	
  6529                           ;Communication.c: 195: return status;
  6530                           ;	Return value of i1_I2C_Read is never used
  6531                           
  6532                           
  6533                           	psect	text20
  6534  039D                     __ptext20:	
  6535 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6536 ;; Defined at:
  6537 ;;		line 153 in file "tmr0.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;		None
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;		None
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  1    wreg      void 
  6544 ;; Registers used:
  6545 ;;		None
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6555 ;;Total ram usage:        0 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; This function calls:
  6558 ;;		Nothing
  6559 ;; This function is called by:
  6560 ;;		_TMR0_Initialize
  6561 ;;		_TMR0_CallBack
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           
  6566                           ;psect for function _TMR0_DefaultInterruptHandler
  6567  039D                     _TMR0_DefaultInterruptHandler:	
  6568                           
  6569                           ;incstack = 0
  6570                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6571  039D  0008               	return
  6572  039E                     __end_of_TMR0_DefaultInterruptHandler:	
  6573                           
  6574                           	psect	text21
  6575  039A                     __ptext21:	
  6576 ;; *************** function _I2C_BusCollisionISR *****************
  6577 ;; Defined at:
  6578 ;;		line 728 in file "i2c.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;		None
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;		None
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1    wreg      void 
  6585 ;; Registers used:
  6586 ;;		None
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6596 ;;Total ram usage:        0 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_INTERRUPT_InterruptManager
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           
  6606                           ;psect for function _I2C_BusCollisionISR
  6607  039A                     _I2C_BusCollisionISR:	
  6608                           
  6609                           ;i2c.c: 731: PIR2bits.BCL1IF = 0;
  6610                           
  6611                           ;incstack = 0
  6612                           ; Regs used in _I2C_BusCollisionISR: []
  6613  039A  0020               	movlb	0	; select bank0
  6614  039B  1191               	bcf	17,3	;volatile
  6615  039C  0008               	return
  6616  039D                     __end_of_I2C_BusCollisionISR:	
  6617  007E                     btemp	set	126	;btemp
  6618  007E                     int$flags	set	126
  6619  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         45
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      66
    BANK1            80     14      21
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_tr_queue.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    SPI_Read@data	PTR unsigned char  size(1) Largest target is 7
		 -> ADXL345_GetXyz@readBuffer(COMMON[7]), ADXL345_GetRegisterValue@dataBuffer(BANK0[2]), 

    I2C_Read@dataBuffer	PTR unsigned char  size(1) Largest target is 7
		 -> ADXL345_GetXyz@readBuffer(COMMON[7]), ADXL345_GetRegisterValue@registerValue(BANK0[1]), 

    I2C_Write@dataBuffer	PTR unsigned char  size(1) Largest target is 2
		 -> ADXL345_GetXyz@firstRegAddress(COMMON[1]), ADXL345_SetRegisterValue@dataBuffer(COMMON[2]), ADXL345_GetRegisterValue@registerAddress(BANK0[1]), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_object.pTrTail.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    F12099.pbuffer	PTR unsigned char  size(1) Largest target is 0

    F12094.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    S510$pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c_current.pbuffer	PTR unsigned char  size(1) Largest target is 0

    S522$pTrFlag	PTR enum E11987 size(1) Largest target is 0

    p_i2c_current.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    S522$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    p_i2c_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    p_i2c_current	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S533$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    i2c_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    S533$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    i2c_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_TMR0_CallBack
    _TMR0_CallBack->i1_ADXL345_GetRegisterValue
    i1_ADXL345_GetRegisterValue->i1_SPI_Read

Critical Paths under _main in BANK0

    _main->_ADXL345_Init
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _ADXL345_Init->_ADXL345_GetRegisterValue
    _ADXL345_GetRegisterValue->_SPI_Read

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_CallBack->i1_ADXL345_GetRegisterValue

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0    3468
                                             24 BANK0      1     1      0
                                              0 BANK1     14    14      0
                       _ADXL345_Init
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     108
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     108
                                              7 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     108
                                              5 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADXL345_Init                                         3     3      0    3336
                                             21 BANK0      3     3      0
           _ADXL345_GetRegisterValue
                           _I2C_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                            14     8      6     336
                                              5 BANK0     13     7      6
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                            11     7      4     120
                                              5 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (2) _ADXL345_GetRegisterValue                             6     6      0    2775
                                             15 BANK0      6     6      0
                           _I2C_Read
                          _I2C_Write
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                            10     8      2     785
                                              5 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            8     5      3     938
                                              5 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             9     6      3     769
                                              5 BANK0      9     6      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0    1065
                                              4 BANK0      1     1      0
                _I2C_BusCollisionISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0    1065
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        2     2      0    1065
                                             12 COMMON     2     2      0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
         i1_ADXL345_GetRegisterValue
 ---------------------------------------------------------------------------------
 (7) i1_ADXL345_GetRegisterValue                           6     6      0    1064
                                             10 COMMON     2     2      0
                                              0 BANK0      4     4      0
                         i1_I2C_Read
                        i1_I2C_Write
                         i1_SPI_Read
 ---------------------------------------------------------------------------------
 (8) i1_SPI_Read                                          10     8      2     372
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (8) i1_I2C_Write                                          8     5      3     245
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (8) i1_I2C_Read                                           9     6      3     289
                                              0 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADXL345_Init
     _ADXL345_GetRegisterValue
       _I2C_Read
       _I2C_Write
       _SPI_Read
     _I2C_Init
     _SPI_Init
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _I2C_BusCollisionISR
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       i1_ADXL345_GetRegisterValue *
         i1_I2C_Read
         i1_I2C_Write
         i1_SPI_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      42       5       82.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      E      15       7       26.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      65      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      65      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 04 15:05:21 2018

         __end_of_ADXL345_GetRegisterValue 0235               ??i1_ADXL345_GetRegisterValue 007A  
                    I2C_ISR@i2c_bytes_left 0033                                __CFG_CP$OFF 0000  
                       __size_of_I2C_Write 003E                                         l25 0356  
                          _timer0ReloadVal 0061                                ?i1_I2C_Read 0070  
                         SPI_Init@brgValue 0055                                __CFG_LVP$ON 0000  
                         SPI_Init@clockEdg 0050                                        l600 0185  
                                      l520 01F1                                        l603 018C  
                                      l621 0047                                        l630 0063  
                                      l615 01B9                                        l640 0090  
                                      l624 004F                                        l633 007F  
                                      l609 01A7                                        l634 0081  
                                      l635 0082                                        l661 00CB  
                         SPI_Init@clockPol 004F                       I2C_Read@slaveAddress 0051  
                             __CFG_BORV$LO 0000                                        wreg 0009  
                             __CFG_IESO$ON 0000                           SPI_Init@lsbFirst 0070  
                             __CFG_ZCD$OFF 0000                      __size_of_ADXL345_Init 003D  
                             ?i1_I2C_Write 0070                      i1SPI_Read@bytesNumber 0071  
                                     l3059 01D6                                       l2901 01B0  
                                     l2903 01B4                                       l2931 005D  
                                     l2933 008A                                       l2935 008E  
                                     l2871 00BE                                       l2881 00DD  
                                     l2867 00A2                                       l2963 021B  
                                     l2869 00B9                                       l2965 0232  
                                     l2879 00C0                                       l2899 019A  
                        SPI_Init@clockFreq 004B                              main@i2cStatus 00AC  
                                     _LATA 010C                                       _LATB 010D  
                                     _LATC 010E                                main@counter 00AD  
                                     _TMR0 0015                                       _WPUA 020C  
                                     _WPUB 020D                                       _WPUC 020E  
                             __CFG_WRT$OFF 0000                              __CFG_FCMEN$ON 0000  
                                     _main 033A        __size_ofi1_ADXL345_GetRegisterValue 003B  
                         __end_of_I2C_Init 033A                           __end_of_I2C_Read 0093  
                                     fsr0h 0005                                       fsr1h 0007  
                                     indf0 0000                                       fsr0l 0004  
                                     indf1 0001                                       fsr1l 0006  
                                     btemp 007E                              __CFG_BOREN$ON 0000  
                                     start 0028                              __CFG_MCLRE$ON 0000  
                              ?i1_SPI_Read 0070                       i1I2C_Read@dataBuffer 0070  
                  __end_of_TMR0_Initialize 036C                              __CFG_PLLEN$ON 0000  
           ??_TMR0_DefaultInterruptHandler 0070             __size_of_OSCILLATOR_Initialize 0007  
            __end_of_OSCILLATOR_Initialize 038E                                      ?_main 0070  
                            __CFG_WDTE$OFF 0000                              _i2c_trb_count 0037  
                                    i1l320 0010                                      i1l323 001C  
                                    i1l600 023B                                      i1l328 0023  
                                    i1l603 0242                                      i1l621 00EC  
                                    i1l630 0106                                      i1l615 026E  
                                    i1l640 012E                                      i1l624 00F4  
                                    i1l633 0120                                      i1l609 025C  
                                    i1l634 0121                                      i1l635 0122  
                                    i1l661 0167                               _ADXL345_Init 01BC  
                                    _TRISA 008C                                      _TRISB 008D  
                                    _TRISC 008E          __size_of_TMR0_SetInterruptHandler 0006  
                ?_TMR0_SetInterruptHandler 004B                           __end_of_TMR0_ISR 031A  
                         __end_of_SPI_Init 02F9                           __end_of_SPI_Read 00E3  
                        __end_of_I2C_Write 01BC                                      pclath 000A  
                                    status 0003                                      wtemp0 007E  
                      __size_ofi1_I2C_Read 004E                               SPI_Read@data 004B  
                             SPI_Read@byte 0054                                 _i2c_object 0020  
                          __initialization 002A                         ADXL345_GetXyz@F101 00AE  
                             __end_of_main 0357                             __CFG_LPBOR$OFF 0000  
              ?_INTERRUPT_InterruptManager 0070                   _ADXL345_GetRegisterValue 01F9  
                                   ??_main 005E                      i1I2C_Read@acknowledge 0077  
                                   _ANSELA 018C                                     _ANSELB 018D  
                                   _ANSELC 018E                                     _BORCON 0116  
                                   _RB4PPS 0E9C                                     _RB6PPS 0E9E  
                                   i1l2023 0101                                     i1l2025 0129  
                                   i1l2041 013F                                     i1l2027 012D  
                                   i1l2043 0156                                     i1l2053 015C  
                                   i1l2045 015B                                     i1l2055 0178  
                                   _ODCONA 028C                                     _ODCONB 028D  
                                   i1l2155 0293                                     _ODCONC 028E  
                                   i1l2157 02A9                        __size_ofi1_SPI_Read 004D  
                                   i1l1991 024F                                     i1l1993 0265  
                                   i1l1995 0269                                     u198_20 0317  
                                   _OSCCON 0099                        SPI_Init@pbFrequency 0051  
                                   _SSPBUF 0211                      i1I2C_Write@dataBuffer 0070  
                           __CFG_PWRTE$OFF 0000         __end_ofi1_ADXL345_GetRegisterValue 02AC  
               i1_ADXL345_GetRegisterValue 0271                             i1SPI_Read@data 0070  
                           i1SPI_Read@byte 0079                             __CFG_STVREN$ON 0000  
                         ?_TMR0_Initialize 0070                         ADXL345_Init@status 005D  
                                ?_I2C_Init 004B                                  ?_I2C_Read 004B  
                    __end_of_TMR0_CallBack 037E   TMR0_SetInterruptHandler@InterruptHandler 004B  
                          I2C_Write@status 004F                          _SYSTEM_Initialize 037E  
                  __end_of__initialization 0039                       __size_ofi1_I2C_Write 003C  
                       ?_SYSTEM_Initialize 0070                             __pcstackCOMMON 0070  
                      ??_SYSTEM_Initialize 004E                                  ?_TMR0_ISR 0070  
                                ?_SPI_Init 004B                                  ?_SPI_Read 004B  
                             ??i1_I2C_Read 0073                          i1I2C_Read@stopBit 0072  
                               ??_I2C_Init 004F                             _OPTION_REGbits 0095  
                               ??_I2C_Read 004E                      TMR0_ISR@CountCallBack 002D  
                    TMR0_CallBack@DeviceID 007D                      i1SPI_Read@writeBuffer 0074  
                __end_of_SYSTEM_Initialize 0387                           I2C_Init@brgValue 0053  
                               __pbssBANK0 0020                                 __pbssBANK1 00AE  
             __size_of_I2C_BusCollisionISR 0003                         __end_ofi1_I2C_Read 0131  
                               __pmaintext 033A                               I2C_Read@byte 0053  
         __end_of_TMR0_SetInterruptHandler 039A                             I2C_Init@status 0055  
                               ??_TMR0_ISR 007E                            __CFG_PPS1WAY$ON 0000  
                             ??i1_SPI_Read 0072                                 __pintentry 0004  
                       I2C_Read@dataBuffer 004B                             I2C_Read@status 0050  
                               ??_SPI_Init 0051                                 ??_SPI_Read 004D  
                          __CFG_WDTCCS$SWC 0000                                    _OSCTUNE 0098  
                    i1I2C_Read@bytesNumber 0071                                    _SSP1ADD 0212  
                                  _SSP1BUF 0211                         __end_ofi1_SPI_Read 017E  
                   i1I2C_Write@acknowledge 0076                                  _I2C_Write 017E  
                        _fullResolutionSet 002F                 ??_ADXL345_GetRegisterValue 0055  
                  i1I2C_Write@slaveAddress 0075                             i1I2C_Read@byte 0078  
                                  __ptext1 037E                                    __ptext2 0357  
                                  __ptext3 0394                                    __ptext4 02AC  
                                  __ptext5 0387                                    __ptext6 01BC  
                                  __ptext7 02D3                                    __ptext8 031A  
                                  __ptext9 01F9                      _OSCILLATOR_Initialize 0387  
                 ??_PIN_MANAGER_Initialize 004B                 __size_of_SYSTEM_Initialize 0009  
                                  clrloop0 038F                       end_of_initialization 0039  
                 ADXL345_Init@commProtocol 005C                       I2C_Write@acknowledge 0051  
                               ?_I2C_Write 004B                ?i1_ADXL345_GetRegisterValue 0070  
                           SPI_Read@F12019 0025                   _TMR0_SetInterruptHandler 0394  
                       I2C_ISR@i2c_address 0044                                  _SSPDATPPS 0E21  
                                _SSPCLKPPS 0E20                           I2C_Write@stopBit 004D  
                         __CFG_FOSC$INTOSC 0000                                 main@AccelX 00A0  
                               main@AccelY 00A2                                 main@AccelZ 00A4  
                        __size_of_I2C_Init 0020                          __size_of_I2C_Read 0056  
  ADXL345_GetRegisterValue@registerAddress 0057  i1ADXL345_GetRegisterValue@registerAddress 0048  
         I2C_ISR@i2c_10bit_address_restart 0032                        I2C_Init@pbFrequency 004F  
                           SPI_Init@status 0057                          _p_i2c_trb_current 0036  
                    I2C_Write@slaveAddress 0050                               _i2c_tr_queue 0041  
                        __size_of_TMR0_ISR 0021                     ?_OSCILLATOR_Initialize 0070  
                        __size_of_SPI_Init 0026                          __size_of_SPI_Read 0050  
                      _I2C_BusCollisionISR 039A                        start_initialization 002A  
                 __size_of_TMR0_Initialize 0015            __size_of_PIN_MANAGER_Initialize 0027  
                                _i2c_state 0038                              ??i1_I2C_Write 0073  
                      SPI_Read@bytesNumber 004C                                ??_I2C_Write 004E  
                     ?_I2C_BusCollisionISR 0070                     i1I2C_Write@bytesNumber 0071  
                   __size_of_TMR0_CallBack 0012                    i1SPI_Read@slaveDeviceId 0078  
                            ?_ADXL345_Init 0070                          I2C_Init@clockFreq 004B  
                            _selectedRange 0030                                  ___latbits 0002  
                            __pcstackBANK0 0046                              __pcstackBANK1 00A0  
                         i1I2C_Read@status 0075                          _communicationType 0031  
                    ??_I2C_BusCollisionISR 0070                      _TMR0_InterruptHandler 005F  
                                __pnvBANK0 005F                        __end_ofi1_I2C_Write 0271  
                     I2C_Write@bytesNumber 004C                     _PIN_MANAGER_Initialize 02AC  
                       i1I2C_Write@stopBit 0072               ??_INTERRUPT_InterruptManager 004A  
                           ??_ADXL345_Init 005B                                   _I2C_Init 031A  
                                 _I2C_Read 003D                            I2C_Read@stopBit 004D  
                      I2C_Read@acknowledge 0052                              _TMR0_CallBack 036C  
                            _p_i2c_current 0035                          ??_TMR0_Initialize 004D  
                                 _LATCbits 010E                                  clear_ram0 038E  
                      I2C_Write@dataBuffer 004B                                   _PIE1bits 0090  
                                 _PIE2bits 0091        __size_of_INTERRUPT_InterruptManager 0024  
               ??_TMR0_SetInterruptHandler 004D                                   _PIR1bits 0010  
                                 _PIR2bits 0011                       __CFG_WDTCPS$WDTCPS1F 0000  
                                 _SSP1CON1 0215                                   _SSP1CON3 0217  
                                 _TMR0_ISR 02F9                        I2C_ISR@pi2c_buf_ptr 0034  
                                 _SSP1STAT 0214                                   _SPI_Init 02D3  
                                 _SPI_Read 0093                      SPI_Read@slaveDeviceId 0053  
        __size_of_ADXL345_GetRegisterValue 003C                  ?_ADXL345_GetRegisterValue 0070  
                           ?_TMR0_CallBack 0070                                i1_I2C_Write 0235  
       ADXL345_GetRegisterValue@dataBuffer 0058       i1ADXL345_GetRegisterValue@dataBuffer 0046  
              ADXL345_GetRegisterValue@F85 002B                ADXL345_SetRegisterValue@F90 0029  
                  ??_OSCILLATOR_Initialize 004B                              I2C_Write@byte 0052  
                                 __ptext10 0093                                   __ptext11 017E  
                                 __ptext20 039D                                   __ptext12 003D  
                                 __ptext21 039A                                   __ptext14 02F9  
                                 __ptext15 036C                                   __ptext16 0271  
                                 __ptext17 0131                                   __ptext18 0235  
                                 __ptext19 00E3                        SPI_Read@writeBuffer 004F  
                        i1I2C_Write@status 0074                               _SSP1CON1bits 0215  
                             _SSP1CON2bits 0216                              __size_of_main 001D  
                     __end_of_ADXL345_Init 01F9       __end_of_TMR0_DefaultInterruptHandler 039E  
    __size_of_TMR0_DefaultInterruptHandler 0001               _TMR0_DefaultInterruptHandler 039D  
                     __CFG_WDTCWS$WDTCWSSW 0000                                   int$flags 007E  
       __end_of_INTERRUPT_InterruptManager 0028                 _INTERRUPT_InterruptManager 0004  
                             _SSP1STATbits 0214                                 i1_I2C_Read 00E3  
                               _INTCONbits 000B                            ??_TMR0_CallBack 007C  
                      I2C_Read@bytesNumber 004C                                   intlevel1 0000  
                  ?_PIN_MANAGER_Initialize 0070                      I2C_MasterRead@trBlock 0039  
                        __CFG_CLKOUTEN$OFF 0000              ?_TMR0_DefaultInterruptHandler 0070  
    ADXL345_GetRegisterValue@registerValue 005A    i1ADXL345_GetRegisterValue@registerValue 0049  
                               i1_SPI_Read 0131                     i1I2C_Read@slaveAddress 0076  
                   I2C_MasterWrite@trBlock 003D                                 _OPTION_REG 0095  
                          i1I2C_Write@byte 0077                            _TMR0_Initialize 0357  
                           main@AccelXtemp 00A6                             main@AccelYtemp 00A8  
                           main@AccelZtemp 00AA                __end_of_I2C_BusCollisionISR 039D  
           __end_of_PIN_MANAGER_Initialize 02D3  
