

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 02 18:30:41 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F1619 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  011C                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  018E                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0194                     	;# 
   147  0195                     	;# 
   148  0196                     	;# 
   149  0197                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019D                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019E                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020D                     	;# 
   177  020E                     	;# 
   178  0211                     	;# 
   179  0211                     	;# 
   180  0212                     	;# 
   181  0212                     	;# 
   182  0213                     	;# 
   183  0213                     	;# 
   184  0214                     	;# 
   185  0214                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0216                     	;# 
   191  0216                     	;# 
   192  0217                     	;# 
   193  0217                     	;# 
   194  028C                     	;# 
   195  028D                     	;# 
   196  028E                     	;# 
   197  0291                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0294                     	;# 
   202  0298                     	;# 
   203  0298                     	;# 
   204  0299                     	;# 
   205  029A                     	;# 
   206  029B                     	;# 
   207  029E                     	;# 
   208  030C                     	;# 
   209  030D                     	;# 
   210  030E                     	;# 
   211  038C                     	;# 
   212  038D                     	;# 
   213  038E                     	;# 
   214  0391                     	;# 
   215  0392                     	;# 
   216  0393                     	;# 
   217  0394                     	;# 
   218  0395                     	;# 
   219  0396                     	;# 
   220  0397                     	;# 
   221  0398                     	;# 
   222  0399                     	;# 
   223  040E                     	;# 
   224  0413                     	;# 
   225  0413                     	;# 
   226  0414                     	;# 
   227  0414                     	;# 
   228  0415                     	;# 
   229  0416                     	;# 
   230  0417                     	;# 
   231  0418                     	;# 
   232  041A                     	;# 
   233  041A                     	;# 
   234  041B                     	;# 
   235  041B                     	;# 
   236  041C                     	;# 
   237  041D                     	;# 
   238  041E                     	;# 
   239  041F                     	;# 
   240  0493                     	;# 
   241  0494                     	;# 
   242  0495                     	;# 
   243  0496                     	;# 
   244  049A                     	;# 
   245  049B                     	;# 
   246  049C                     	;# 
   247  049D                     	;# 
   248  058C                     	;# 
   249  058C                     	;# 
   250  058D                     	;# 
   251  058E                     	;# 
   252  058E                     	;# 
   253  058F                     	;# 
   254  0590                     	;# 
   255  0590                     	;# 
   256  0591                     	;# 
   257  0592                     	;# 
   258  0592                     	;# 
   259  0593                     	;# 
   260  0594                     	;# 
   261  0594                     	;# 
   262  0595                     	;# 
   263  0596                     	;# 
   264  0596                     	;# 
   265  0597                     	;# 
   266  0598                     	;# 
   267  0599                     	;# 
   268  059A                     	;# 
   269  059B                     	;# 
   270  059B                     	;# 
   271  059C                     	;# 
   272  059D                     	;# 
   273  060C                     	;# 
   274  060C                     	;# 
   275  060D                     	;# 
   276  060E                     	;# 
   277  060F                     	;# 
   278  060F                     	;# 
   279  0610                     	;# 
   280  0611                     	;# 
   281  0612                     	;# 
   282  0613                     	;# 
   283  0614                     	;# 
   284  0617                     	;# 
   285  0618                     	;# 
   286  0619                     	;# 
   287  061A                     	;# 
   288  061B                     	;# 
   289  061C                     	;# 
   290  0691                     	;# 
   291  0692                     	;# 
   292  0693                     	;# 
   293  0694                     	;# 
   294  0695                     	;# 
   295  0696                     	;# 
   296  0697                     	;# 
   297  0699                     	;# 
   298  069A                     	;# 
   299  0711                     	;# 
   300  0712                     	;# 
   301  0713                     	;# 
   302  0714                     	;# 
   303  0715                     	;# 
   304  0718                     	;# 
   305  0718                     	;# 
   306  0719                     	;# 
   307  071A                     	;# 
   308  071A                     	;# 
   309  071B                     	;# 
   310  071C                     	;# 
   311  071D                     	;# 
   312  0791                     	;# 
   313  0791                     	;# 
   314  0792                     	;# 
   315  0793                     	;# 
   316  0793                     	;# 
   317  0794                     	;# 
   318  0795                     	;# 
   319  0795                     	;# 
   320  0796                     	;# 
   321  0797                     	;# 
   322  0797                     	;# 
   323  0798                     	;# 
   324  0799                     	;# 
   325  079A                     	;# 
   326  080C                     	;# 
   327  080C                     	;# 
   328  080D                     	;# 
   329  080E                     	;# 
   330  080E                     	;# 
   331  080F                     	;# 
   332  0810                     	;# 
   333  0810                     	;# 
   334  0811                     	;# 
   335  0812                     	;# 
   336  0812                     	;# 
   337  0813                     	;# 
   338  0814                     	;# 
   339  0815                     	;# 
   340  0816                     	;# 
   341  0817                     	;# 
   342  0818                     	;# 
   343  0819                     	;# 
   344  081A                     	;# 
   345  081A                     	;# 
   346  081B                     	;# 
   347  081C                     	;# 
   348  081C                     	;# 
   349  081D                     	;# 
   350  088C                     	;# 
   351  088D                     	;# 
   352  088E                     	;# 
   353  088F                     	;# 
   354  088F                     	;# 
   355  0890                     	;# 
   356  0891                     	;# 
   357  0892                     	;# 
   358  0893                     	;# 
   359  0893                     	;# 
   360  0894                     	;# 
   361  0895                     	;# 
   362  0896                     	;# 
   363  0897                     	;# 
   364  0897                     	;# 
   365  0898                     	;# 
   366  0899                     	;# 
   367  0D8C                     	;# 
   368  0D8C                     	;# 
   369  0D8D                     	;# 
   370  0D8E                     	;# 
   371  0D8F                     	;# 
   372  0D8F                     	;# 
   373  0D90                     	;# 
   374  0D91                     	;# 
   375  0D92                     	;# 
   376  0D92                     	;# 
   377  0D93                     	;# 
   378  0D94                     	;# 
   379  0D95                     	;# 
   380  0D95                     	;# 
   381  0D96                     	;# 
   382  0D97                     	;# 
   383  0D98                     	;# 
   384  0D99                     	;# 
   385  0D9A                     	;# 
   386  0D9B                     	;# 
   387  0D9C                     	;# 
   388  0D9D                     	;# 
   389  0D9E                     	;# 
   390  0D9E                     	;# 
   391  0D9F                     	;# 
   392  0DA0                     	;# 
   393  0DA1                     	;# 
   394  0DA1                     	;# 
   395  0DA2                     	;# 
   396  0DA3                     	;# 
   397  0DA4                     	;# 
   398  0DA4                     	;# 
   399  0DA5                     	;# 
   400  0DA6                     	;# 
   401  0DA7                     	;# 
   402  0DA7                     	;# 
   403  0DA8                     	;# 
   404  0DA9                     	;# 
   405  0DAA                     	;# 
   406  0DAB                     	;# 
   407  0DAC                     	;# 
   408  0DAD                     	;# 
   409  0DAE                     	;# 
   410  0DAF                     	;# 
   411  0E0F                     	;# 
   412  0E10                     	;# 
   413  0E11                     	;# 
   414  0E12                     	;# 
   415  0E13                     	;# 
   416  0E14                     	;# 
   417  0E15                     	;# 
   418  0E16                     	;# 
   419  0E17                     	;# 
   420  0E18                     	;# 
   421  0E19                     	;# 
   422  0E1A                     	;# 
   423  0E1B                     	;# 
   424  0E1C                     	;# 
   425  0E1D                     	;# 
   426  0E1E                     	;# 
   427  0E1F                     	;# 
   428  0E20                     	;# 
   429  0E21                     	;# 
   430  0E22                     	;# 
   431  0E23                     	;# 
   432  0E24                     	;# 
   433  0E25                     	;# 
   434  0E26                     	;# 
   435  0E27                     	;# 
   436  0E28                     	;# 
   437  0E29                     	;# 
   438  0E2A                     	;# 
   439  0E2B                     	;# 
   440  0E2C                     	;# 
   441  0E2D                     	;# 
   442  0E2E                     	;# 
   443  0E90                     	;# 
   444  0E91                     	;# 
   445  0E92                     	;# 
   446  0E94                     	;# 
   447  0E95                     	;# 
   448  0E9C                     	;# 
   449  0E9D                     	;# 
   450  0E9E                     	;# 
   451  0E9F                     	;# 
   452  0EA0                     	;# 
   453  0EA1                     	;# 
   454  0EA2                     	;# 
   455  0EA3                     	;# 
   456  0EA4                     	;# 
   457  0EA5                     	;# 
   458  0EA6                     	;# 
   459  0EA7                     	;# 
   460  0F0F                     	;# 
   461  0F10                     	;# 
   462  0F11                     	;# 
   463  0F12                     	;# 
   464  0F13                     	;# 
   465  0F14                     	;# 
   466  0F15                     	;# 
   467  0F16                     	;# 
   468  0F17                     	;# 
   469  0F18                     	;# 
   470  0F19                     	;# 
   471  0F1A                     	;# 
   472  0F1B                     	;# 
   473  0F1C                     	;# 
   474  0F1D                     	;# 
   475  0F1E                     	;# 
   476  0F1F                     	;# 
   477  0F20                     	;# 
   478  0F21                     	;# 
   479  0F22                     	;# 
   480  0F23                     	;# 
   481  0F24                     	;# 
   482  0F25                     	;# 
   483  0F26                     	;# 
   484  0F27                     	;# 
   485  0F28                     	;# 
   486  0F29                     	;# 
   487  0F2A                     	;# 
   488  0F2B                     	;# 
   489  0F2C                     	;# 
   490  0F2D                     	;# 
   491  0F2E                     	;# 
   492  0F2F                     	;# 
   493  0F30                     	;# 
   494  0F31                     	;# 
   495  0F32                     	;# 
   496  0F33                     	;# 
   497  0F34                     	;# 
   498  0F35                     	;# 
   499  0F36                     	;# 
   500  0F37                     	;# 
   501  0FE4                     	;# 
   502  0FE5                     	;# 
   503  0FE6                     	;# 
   504  0FE7                     	;# 
   505  0FE8                     	;# 
   506  0FE9                     	;# 
   507  0FEA                     	;# 
   508  0FEB                     	;# 
   509  0FED                     	;# 
   510  0FEE                     	;# 
   511  0FEF                     	;# 
   512  0000                     	;# 
   513  0001                     	;# 
   514  0002                     	;# 
   515  0003                     	;# 
   516  0004                     	;# 
   517  0005                     	;# 
   518  0006                     	;# 
   519  0007                     	;# 
   520  0008                     	;# 
   521  0009                     	;# 
   522  000A                     	;# 
   523  000B                     	;# 
   524  000C                     	;# 
   525  000D                     	;# 
   526  000E                     	;# 
   527  0010                     	;# 
   528  0011                     	;# 
   529  0012                     	;# 
   530  0013                     	;# 
   531  0014                     	;# 
   532  0015                     	;# 
   533  0016                     	;# 
   534  0016                     	;# 
   535  0017                     	;# 
   536  0018                     	;# 
   537  0019                     	;# 
   538  001A                     	;# 
   539  001A                     	;# 
   540  001B                     	;# 
   541  001B                     	;# 
   542  001C                     	;# 
   543  001D                     	;# 
   544  001E                     	;# 
   545  001F                     	;# 
   546  008C                     	;# 
   547  008D                     	;# 
   548  008E                     	;# 
   549  0090                     	;# 
   550  0091                     	;# 
   551  0092                     	;# 
   552  0093                     	;# 
   553  0094                     	;# 
   554  0095                     	;# 
   555  0096                     	;# 
   556  0098                     	;# 
   557  0099                     	;# 
   558  009A                     	;# 
   559  009B                     	;# 
   560  009B                     	;# 
   561  009C                     	;# 
   562  009D                     	;# 
   563  009E                     	;# 
   564  009F                     	;# 
   565  010C                     	;# 
   566  010D                     	;# 
   567  010E                     	;# 
   568  0111                     	;# 
   569  0112                     	;# 
   570  0113                     	;# 
   571  0114                     	;# 
   572  0115                     	;# 
   573  0116                     	;# 
   574  0117                     	;# 
   575  0118                     	;# 
   576  0119                     	;# 
   577  011C                     	;# 
   578  018C                     	;# 
   579  018D                     	;# 
   580  018E                     	;# 
   581  0191                     	;# 
   582  0191                     	;# 
   583  0192                     	;# 
   584  0193                     	;# 
   585  0193                     	;# 
   586  0194                     	;# 
   587  0195                     	;# 
   588  0196                     	;# 
   589  0197                     	;# 
   590  0199                     	;# 
   591  0199                     	;# 
   592  0199                     	;# 
   593  019A                     	;# 
   594  019A                     	;# 
   595  019A                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019C                     	;# 
   602  019C                     	;# 
   603  019C                     	;# 
   604  019D                     	;# 
   605  019D                     	;# 
   606  019D                     	;# 
   607  019E                     	;# 
   608  019E                     	;# 
   609  019E                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  019F                     	;# 
   615  020C                     	;# 
   616  020D                     	;# 
   617  020E                     	;# 
   618  0211                     	;# 
   619  0211                     	;# 
   620  0212                     	;# 
   621  0212                     	;# 
   622  0213                     	;# 
   623  0213                     	;# 
   624  0214                     	;# 
   625  0214                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0215                     	;# 
   630  0216                     	;# 
   631  0216                     	;# 
   632  0217                     	;# 
   633  0217                     	;# 
   634  028C                     	;# 
   635  028D                     	;# 
   636  028E                     	;# 
   637  0291                     	;# 
   638  0291                     	;# 
   639  0292                     	;# 
   640  0293                     	;# 
   641  0294                     	;# 
   642  0298                     	;# 
   643  0298                     	;# 
   644  0299                     	;# 
   645  029A                     	;# 
   646  029B                     	;# 
   647  029E                     	;# 
   648  030C                     	;# 
   649  030D                     	;# 
   650  030E                     	;# 
   651  038C                     	;# 
   652  038D                     	;# 
   653  038E                     	;# 
   654  0391                     	;# 
   655  0392                     	;# 
   656  0393                     	;# 
   657  0394                     	;# 
   658  0395                     	;# 
   659  0396                     	;# 
   660  0397                     	;# 
   661  0398                     	;# 
   662  0399                     	;# 
   663  040E                     	;# 
   664  0413                     	;# 
   665  0413                     	;# 
   666  0414                     	;# 
   667  0414                     	;# 
   668  0415                     	;# 
   669  0416                     	;# 
   670  0417                     	;# 
   671  0418                     	;# 
   672  041A                     	;# 
   673  041A                     	;# 
   674  041B                     	;# 
   675  041B                     	;# 
   676  041C                     	;# 
   677  041D                     	;# 
   678  041E                     	;# 
   679  041F                     	;# 
   680  0493                     	;# 
   681  0494                     	;# 
   682  0495                     	;# 
   683  0496                     	;# 
   684  049A                     	;# 
   685  049B                     	;# 
   686  049C                     	;# 
   687  049D                     	;# 
   688  058C                     	;# 
   689  058C                     	;# 
   690  058D                     	;# 
   691  058E                     	;# 
   692  058E                     	;# 
   693  058F                     	;# 
   694  0590                     	;# 
   695  0590                     	;# 
   696  0591                     	;# 
   697  0592                     	;# 
   698  0592                     	;# 
   699  0593                     	;# 
   700  0594                     	;# 
   701  0594                     	;# 
   702  0595                     	;# 
   703  0596                     	;# 
   704  0596                     	;# 
   705  0597                     	;# 
   706  0598                     	;# 
   707  0599                     	;# 
   708  059A                     	;# 
   709  059B                     	;# 
   710  059B                     	;# 
   711  059C                     	;# 
   712  059D                     	;# 
   713  060C                     	;# 
   714  060C                     	;# 
   715  060D                     	;# 
   716  060E                     	;# 
   717  060F                     	;# 
   718  060F                     	;# 
   719  0610                     	;# 
   720  0611                     	;# 
   721  0612                     	;# 
   722  0613                     	;# 
   723  0614                     	;# 
   724  0617                     	;# 
   725  0618                     	;# 
   726  0619                     	;# 
   727  061A                     	;# 
   728  061B                     	;# 
   729  061C                     	;# 
   730  0691                     	;# 
   731  0692                     	;# 
   732  0693                     	;# 
   733  0694                     	;# 
   734  0695                     	;# 
   735  0696                     	;# 
   736  0697                     	;# 
   737  0699                     	;# 
   738  069A                     	;# 
   739  0711                     	;# 
   740  0712                     	;# 
   741  0713                     	;# 
   742  0714                     	;# 
   743  0715                     	;# 
   744  0718                     	;# 
   745  0718                     	;# 
   746  0719                     	;# 
   747  071A                     	;# 
   748  071A                     	;# 
   749  071B                     	;# 
   750  071C                     	;# 
   751  071D                     	;# 
   752  0791                     	;# 
   753  0791                     	;# 
   754  0792                     	;# 
   755  0793                     	;# 
   756  0793                     	;# 
   757  0794                     	;# 
   758  0795                     	;# 
   759  0795                     	;# 
   760  0796                     	;# 
   761  0797                     	;# 
   762  0797                     	;# 
   763  0798                     	;# 
   764  0799                     	;# 
   765  079A                     	;# 
   766  080C                     	;# 
   767  080C                     	;# 
   768  080D                     	;# 
   769  080E                     	;# 
   770  080E                     	;# 
   771  080F                     	;# 
   772  0810                     	;# 
   773  0810                     	;# 
   774  0811                     	;# 
   775  0812                     	;# 
   776  0812                     	;# 
   777  0813                     	;# 
   778  0814                     	;# 
   779  0815                     	;# 
   780  0816                     	;# 
   781  0817                     	;# 
   782  0818                     	;# 
   783  0819                     	;# 
   784  081A                     	;# 
   785  081A                     	;# 
   786  081B                     	;# 
   787  081C                     	;# 
   788  081C                     	;# 
   789  081D                     	;# 
   790  088C                     	;# 
   791  088D                     	;# 
   792  088E                     	;# 
   793  088F                     	;# 
   794  088F                     	;# 
   795  0890                     	;# 
   796  0891                     	;# 
   797  0892                     	;# 
   798  0893                     	;# 
   799  0893                     	;# 
   800  0894                     	;# 
   801  0895                     	;# 
   802  0896                     	;# 
   803  0897                     	;# 
   804  0897                     	;# 
   805  0898                     	;# 
   806  0899                     	;# 
   807  0D8C                     	;# 
   808  0D8C                     	;# 
   809  0D8D                     	;# 
   810  0D8E                     	;# 
   811  0D8F                     	;# 
   812  0D8F                     	;# 
   813  0D90                     	;# 
   814  0D91                     	;# 
   815  0D92                     	;# 
   816  0D92                     	;# 
   817  0D93                     	;# 
   818  0D94                     	;# 
   819  0D95                     	;# 
   820  0D95                     	;# 
   821  0D96                     	;# 
   822  0D97                     	;# 
   823  0D98                     	;# 
   824  0D99                     	;# 
   825  0D9A                     	;# 
   826  0D9B                     	;# 
   827  0D9C                     	;# 
   828  0D9D                     	;# 
   829  0D9E                     	;# 
   830  0D9E                     	;# 
   831  0D9F                     	;# 
   832  0DA0                     	;# 
   833  0DA1                     	;# 
   834  0DA1                     	;# 
   835  0DA2                     	;# 
   836  0DA3                     	;# 
   837  0DA4                     	;# 
   838  0DA4                     	;# 
   839  0DA5                     	;# 
   840  0DA6                     	;# 
   841  0DA7                     	;# 
   842  0DA7                     	;# 
   843  0DA8                     	;# 
   844  0DA9                     	;# 
   845  0DAA                     	;# 
   846  0DAB                     	;# 
   847  0DAC                     	;# 
   848  0DAD                     	;# 
   849  0DAE                     	;# 
   850  0DAF                     	;# 
   851  0E0F                     	;# 
   852  0E10                     	;# 
   853  0E11                     	;# 
   854  0E12                     	;# 
   855  0E13                     	;# 
   856  0E14                     	;# 
   857  0E15                     	;# 
   858  0E16                     	;# 
   859  0E17                     	;# 
   860  0E18                     	;# 
   861  0E19                     	;# 
   862  0E1A                     	;# 
   863  0E1B                     	;# 
   864  0E1C                     	;# 
   865  0E1D                     	;# 
   866  0E1E                     	;# 
   867  0E1F                     	;# 
   868  0E20                     	;# 
   869  0E21                     	;# 
   870  0E22                     	;# 
   871  0E23                     	;# 
   872  0E24                     	;# 
   873  0E25                     	;# 
   874  0E26                     	;# 
   875  0E27                     	;# 
   876  0E28                     	;# 
   877  0E29                     	;# 
   878  0E2A                     	;# 
   879  0E2B                     	;# 
   880  0E2C                     	;# 
   881  0E2D                     	;# 
   882  0E2E                     	;# 
   883  0E90                     	;# 
   884  0E91                     	;# 
   885  0E92                     	;# 
   886  0E94                     	;# 
   887  0E95                     	;# 
   888  0E9C                     	;# 
   889  0E9D                     	;# 
   890  0E9E                     	;# 
   891  0E9F                     	;# 
   892  0EA0                     	;# 
   893  0EA1                     	;# 
   894  0EA2                     	;# 
   895  0EA3                     	;# 
   896  0EA4                     	;# 
   897  0EA5                     	;# 
   898  0EA6                     	;# 
   899  0EA7                     	;# 
   900  0F0F                     	;# 
   901  0F10                     	;# 
   902  0F11                     	;# 
   903  0F12                     	;# 
   904  0F13                     	;# 
   905  0F14                     	;# 
   906  0F15                     	;# 
   907  0F16                     	;# 
   908  0F17                     	;# 
   909  0F18                     	;# 
   910  0F19                     	;# 
   911  0F1A                     	;# 
   912  0F1B                     	;# 
   913  0F1C                     	;# 
   914  0F1D                     	;# 
   915  0F1E                     	;# 
   916  0F1F                     	;# 
   917  0F20                     	;# 
   918  0F21                     	;# 
   919  0F22                     	;# 
   920  0F23                     	;# 
   921  0F24                     	;# 
   922  0F25                     	;# 
   923  0F26                     	;# 
   924  0F27                     	;# 
   925  0F28                     	;# 
   926  0F29                     	;# 
   927  0F2A                     	;# 
   928  0F2B                     	;# 
   929  0F2C                     	;# 
   930  0F2D                     	;# 
   931  0F2E                     	;# 
   932  0F2F                     	;# 
   933  0F30                     	;# 
   934  0F31                     	;# 
   935  0F32                     	;# 
   936  0F33                     	;# 
   937  0F34                     	;# 
   938  0F35                     	;# 
   939  0F36                     	;# 
   940  0F37                     	;# 
   941  0FE4                     	;# 
   942  0FE5                     	;# 
   943  0FE6                     	;# 
   944  0FE7                     	;# 
   945  0FE8                     	;# 
   946  0FE9                     	;# 
   947  0FEA                     	;# 
   948  0FEB                     	;# 
   949  0FED                     	;# 
   950  0FEE                     	;# 
   951  0FEF                     	;# 
   952  0000                     	;# 
   953  0001                     	;# 
   954  0002                     	;# 
   955  0003                     	;# 
   956  0004                     	;# 
   957  0005                     	;# 
   958  0006                     	;# 
   959  0007                     	;# 
   960  0008                     	;# 
   961  0009                     	;# 
   962  000A                     	;# 
   963  000B                     	;# 
   964  000C                     	;# 
   965  000D                     	;# 
   966  000E                     	;# 
   967  0010                     	;# 
   968  0011                     	;# 
   969  0012                     	;# 
   970  0013                     	;# 
   971  0014                     	;# 
   972  0015                     	;# 
   973  0016                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001A                     	;# 
   980  001B                     	;# 
   981  001B                     	;# 
   982  001C                     	;# 
   983  001D                     	;# 
   984  001E                     	;# 
   985  001F                     	;# 
   986  008C                     	;# 
   987  008D                     	;# 
   988  008E                     	;# 
   989  0090                     	;# 
   990  0091                     	;# 
   991  0092                     	;# 
   992  0093                     	;# 
   993  0094                     	;# 
   994  0095                     	;# 
   995  0096                     	;# 
   996  0098                     	;# 
   997  0099                     	;# 
   998  009A                     	;# 
   999  009B                     	;# 
  1000  009B                     	;# 
  1001  009C                     	;# 
  1002  009D                     	;# 
  1003  009E                     	;# 
  1004  009F                     	;# 
  1005  010C                     	;# 
  1006  010D                     	;# 
  1007  010E                     	;# 
  1008  0111                     	;# 
  1009  0112                     	;# 
  1010  0113                     	;# 
  1011  0114                     	;# 
  1012  0115                     	;# 
  1013  0116                     	;# 
  1014  0117                     	;# 
  1015  0118                     	;# 
  1016  0119                     	;# 
  1017  011C                     	;# 
  1018  018C                     	;# 
  1019  018D                     	;# 
  1020  018E                     	;# 
  1021  0191                     	;# 
  1022  0191                     	;# 
  1023  0192                     	;# 
  1024  0193                     	;# 
  1025  0193                     	;# 
  1026  0194                     	;# 
  1027  0195                     	;# 
  1028  0196                     	;# 
  1029  0197                     	;# 
  1030  0199                     	;# 
  1031  0199                     	;# 
  1032  0199                     	;# 
  1033  019A                     	;# 
  1034  019A                     	;# 
  1035  019A                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019B                     	;# 
  1039  019B                     	;# 
  1040  019B                     	;# 
  1041  019C                     	;# 
  1042  019C                     	;# 
  1043  019C                     	;# 
  1044  019D                     	;# 
  1045  019D                     	;# 
  1046  019D                     	;# 
  1047  019E                     	;# 
  1048  019E                     	;# 
  1049  019E                     	;# 
  1050  019F                     	;# 
  1051  019F                     	;# 
  1052  019F                     	;# 
  1053  019F                     	;# 
  1054  019F                     	;# 
  1055  020C                     	;# 
  1056  020D                     	;# 
  1057  020E                     	;# 
  1058  0211                     	;# 
  1059  0211                     	;# 
  1060  0212                     	;# 
  1061  0212                     	;# 
  1062  0213                     	;# 
  1063  0213                     	;# 
  1064  0214                     	;# 
  1065  0214                     	;# 
  1066  0215                     	;# 
  1067  0215                     	;# 
  1068  0215                     	;# 
  1069  0215                     	;# 
  1070  0216                     	;# 
  1071  0216                     	;# 
  1072  0217                     	;# 
  1073  0217                     	;# 
  1074  028C                     	;# 
  1075  028D                     	;# 
  1076  028E                     	;# 
  1077  0291                     	;# 
  1078  0291                     	;# 
  1079  0292                     	;# 
  1080  0293                     	;# 
  1081  0294                     	;# 
  1082  0298                     	;# 
  1083  0298                     	;# 
  1084  0299                     	;# 
  1085  029A                     	;# 
  1086  029B                     	;# 
  1087  029E                     	;# 
  1088  030C                     	;# 
  1089  030D                     	;# 
  1090  030E                     	;# 
  1091  038C                     	;# 
  1092  038D                     	;# 
  1093  038E                     	;# 
  1094  0391                     	;# 
  1095  0392                     	;# 
  1096  0393                     	;# 
  1097  0394                     	;# 
  1098  0395                     	;# 
  1099  0396                     	;# 
  1100  0397                     	;# 
  1101  0398                     	;# 
  1102  0399                     	;# 
  1103  040E                     	;# 
  1104  0413                     	;# 
  1105  0413                     	;# 
  1106  0414                     	;# 
  1107  0414                     	;# 
  1108  0415                     	;# 
  1109  0416                     	;# 
  1110  0417                     	;# 
  1111  0418                     	;# 
  1112  041A                     	;# 
  1113  041A                     	;# 
  1114  041B                     	;# 
  1115  041B                     	;# 
  1116  041C                     	;# 
  1117  041D                     	;# 
  1118  041E                     	;# 
  1119  041F                     	;# 
  1120  0493                     	;# 
  1121  0494                     	;# 
  1122  0495                     	;# 
  1123  0496                     	;# 
  1124  049A                     	;# 
  1125  049B                     	;# 
  1126  049C                     	;# 
  1127  049D                     	;# 
  1128  058C                     	;# 
  1129  058C                     	;# 
  1130  058D                     	;# 
  1131  058E                     	;# 
  1132  058E                     	;# 
  1133  058F                     	;# 
  1134  0590                     	;# 
  1135  0590                     	;# 
  1136  0591                     	;# 
  1137  0592                     	;# 
  1138  0592                     	;# 
  1139  0593                     	;# 
  1140  0594                     	;# 
  1141  0594                     	;# 
  1142  0595                     	;# 
  1143  0596                     	;# 
  1144  0596                     	;# 
  1145  0597                     	;# 
  1146  0598                     	;# 
  1147  0599                     	;# 
  1148  059A                     	;# 
  1149  059B                     	;# 
  1150  059B                     	;# 
  1151  059C                     	;# 
  1152  059D                     	;# 
  1153  060C                     	;# 
  1154  060C                     	;# 
  1155  060D                     	;# 
  1156  060E                     	;# 
  1157  060F                     	;# 
  1158  060F                     	;# 
  1159  0610                     	;# 
  1160  0611                     	;# 
  1161  0612                     	;# 
  1162  0613                     	;# 
  1163  0614                     	;# 
  1164  0617                     	;# 
  1165  0618                     	;# 
  1166  0619                     	;# 
  1167  061A                     	;# 
  1168  061B                     	;# 
  1169  061C                     	;# 
  1170  0691                     	;# 
  1171  0692                     	;# 
  1172  0693                     	;# 
  1173  0694                     	;# 
  1174  0695                     	;# 
  1175  0696                     	;# 
  1176  0697                     	;# 
  1177  0699                     	;# 
  1178  069A                     	;# 
  1179  0711                     	;# 
  1180  0712                     	;# 
  1181  0713                     	;# 
  1182  0714                     	;# 
  1183  0715                     	;# 
  1184  0718                     	;# 
  1185  0718                     	;# 
  1186  0719                     	;# 
  1187  071A                     	;# 
  1188  071A                     	;# 
  1189  071B                     	;# 
  1190  071C                     	;# 
  1191  071D                     	;# 
  1192  0791                     	;# 
  1193  0791                     	;# 
  1194  0792                     	;# 
  1195  0793                     	;# 
  1196  0793                     	;# 
  1197  0794                     	;# 
  1198  0795                     	;# 
  1199  0795                     	;# 
  1200  0796                     	;# 
  1201  0797                     	;# 
  1202  0797                     	;# 
  1203  0798                     	;# 
  1204  0799                     	;# 
  1205  079A                     	;# 
  1206  080C                     	;# 
  1207  080C                     	;# 
  1208  080D                     	;# 
  1209  080E                     	;# 
  1210  080E                     	;# 
  1211  080F                     	;# 
  1212  0810                     	;# 
  1213  0810                     	;# 
  1214  0811                     	;# 
  1215  0812                     	;# 
  1216  0812                     	;# 
  1217  0813                     	;# 
  1218  0814                     	;# 
  1219  0815                     	;# 
  1220  0816                     	;# 
  1221  0817                     	;# 
  1222  0818                     	;# 
  1223  0819                     	;# 
  1224  081A                     	;# 
  1225  081A                     	;# 
  1226  081B                     	;# 
  1227  081C                     	;# 
  1228  081C                     	;# 
  1229  081D                     	;# 
  1230  088C                     	;# 
  1231  088D                     	;# 
  1232  088E                     	;# 
  1233  088F                     	;# 
  1234  088F                     	;# 
  1235  0890                     	;# 
  1236  0891                     	;# 
  1237  0892                     	;# 
  1238  0893                     	;# 
  1239  0893                     	;# 
  1240  0894                     	;# 
  1241  0895                     	;# 
  1242  0896                     	;# 
  1243  0897                     	;# 
  1244  0897                     	;# 
  1245  0898                     	;# 
  1246  0899                     	;# 
  1247  0D8C                     	;# 
  1248  0D8C                     	;# 
  1249  0D8D                     	;# 
  1250  0D8E                     	;# 
  1251  0D8F                     	;# 
  1252  0D8F                     	;# 
  1253  0D90                     	;# 
  1254  0D91                     	;# 
  1255  0D92                     	;# 
  1256  0D92                     	;# 
  1257  0D93                     	;# 
  1258  0D94                     	;# 
  1259  0D95                     	;# 
  1260  0D95                     	;# 
  1261  0D96                     	;# 
  1262  0D97                     	;# 
  1263  0D98                     	;# 
  1264  0D99                     	;# 
  1265  0D9A                     	;# 
  1266  0D9B                     	;# 
  1267  0D9C                     	;# 
  1268  0D9D                     	;# 
  1269  0D9E                     	;# 
  1270  0D9E                     	;# 
  1271  0D9F                     	;# 
  1272  0DA0                     	;# 
  1273  0DA1                     	;# 
  1274  0DA1                     	;# 
  1275  0DA2                     	;# 
  1276  0DA3                     	;# 
  1277  0DA4                     	;# 
  1278  0DA4                     	;# 
  1279  0DA5                     	;# 
  1280  0DA6                     	;# 
  1281  0DA7                     	;# 
  1282  0DA7                     	;# 
  1283  0DA8                     	;# 
  1284  0DA9                     	;# 
  1285  0DAA                     	;# 
  1286  0DAB                     	;# 
  1287  0DAC                     	;# 
  1288  0DAD                     	;# 
  1289  0DAE                     	;# 
  1290  0DAF                     	;# 
  1291  0E0F                     	;# 
  1292  0E10                     	;# 
  1293  0E11                     	;# 
  1294  0E12                     	;# 
  1295  0E13                     	;# 
  1296  0E14                     	;# 
  1297  0E15                     	;# 
  1298  0E16                     	;# 
  1299  0E17                     	;# 
  1300  0E18                     	;# 
  1301  0E19                     	;# 
  1302  0E1A                     	;# 
  1303  0E1B                     	;# 
  1304  0E1C                     	;# 
  1305  0E1D                     	;# 
  1306  0E1E                     	;# 
  1307  0E1F                     	;# 
  1308  0E20                     	;# 
  1309  0E21                     	;# 
  1310  0E22                     	;# 
  1311  0E23                     	;# 
  1312  0E24                     	;# 
  1313  0E25                     	;# 
  1314  0E26                     	;# 
  1315  0E27                     	;# 
  1316  0E28                     	;# 
  1317  0E29                     	;# 
  1318  0E2A                     	;# 
  1319  0E2B                     	;# 
  1320  0E2C                     	;# 
  1321  0E2D                     	;# 
  1322  0E2E                     	;# 
  1323  0E90                     	;# 
  1324  0E91                     	;# 
  1325  0E92                     	;# 
  1326  0E94                     	;# 
  1327  0E95                     	;# 
  1328  0E9C                     	;# 
  1329  0E9D                     	;# 
  1330  0E9E                     	;# 
  1331  0E9F                     	;# 
  1332  0EA0                     	;# 
  1333  0EA1                     	;# 
  1334  0EA2                     	;# 
  1335  0EA3                     	;# 
  1336  0EA4                     	;# 
  1337  0EA5                     	;# 
  1338  0EA6                     	;# 
  1339  0EA7                     	;# 
  1340  0F0F                     	;# 
  1341  0F10                     	;# 
  1342  0F11                     	;# 
  1343  0F12                     	;# 
  1344  0F13                     	;# 
  1345  0F14                     	;# 
  1346  0F15                     	;# 
  1347  0F16                     	;# 
  1348  0F17                     	;# 
  1349  0F18                     	;# 
  1350  0F19                     	;# 
  1351  0F1A                     	;# 
  1352  0F1B                     	;# 
  1353  0F1C                     	;# 
  1354  0F1D                     	;# 
  1355  0F1E                     	;# 
  1356  0F1F                     	;# 
  1357  0F20                     	;# 
  1358  0F21                     	;# 
  1359  0F22                     	;# 
  1360  0F23                     	;# 
  1361  0F24                     	;# 
  1362  0F25                     	;# 
  1363  0F26                     	;# 
  1364  0F27                     	;# 
  1365  0F28                     	;# 
  1366  0F29                     	;# 
  1367  0F2A                     	;# 
  1368  0F2B                     	;# 
  1369  0F2C                     	;# 
  1370  0F2D                     	;# 
  1371  0F2E                     	;# 
  1372  0F2F                     	;# 
  1373  0F30                     	;# 
  1374  0F31                     	;# 
  1375  0F32                     	;# 
  1376  0F33                     	;# 
  1377  0F34                     	;# 
  1378  0F35                     	;# 
  1379  0F36                     	;# 
  1380  0F37                     	;# 
  1381  0FE4                     	;# 
  1382  0FE5                     	;# 
  1383  0FE6                     	;# 
  1384  0FE7                     	;# 
  1385  0FE8                     	;# 
  1386  0FE9                     	;# 
  1387  0FEA                     	;# 
  1388  0FEB                     	;# 
  1389  0FED                     	;# 
  1390  0FEE                     	;# 
  1391  0FEF                     	;# 
  1392  0000                     	;# 
  1393  0001                     	;# 
  1394  0002                     	;# 
  1395  0003                     	;# 
  1396  0004                     	;# 
  1397  0005                     	;# 
  1398  0006                     	;# 
  1399  0007                     	;# 
  1400  0008                     	;# 
  1401  0009                     	;# 
  1402  000A                     	;# 
  1403  000B                     	;# 
  1404  000C                     	;# 
  1405  000D                     	;# 
  1406  000E                     	;# 
  1407  0010                     	;# 
  1408  0011                     	;# 
  1409  0012                     	;# 
  1410  0013                     	;# 
  1411  0014                     	;# 
  1412  0015                     	;# 
  1413  0016                     	;# 
  1414  0016                     	;# 
  1415  0017                     	;# 
  1416  0018                     	;# 
  1417  0019                     	;# 
  1418  001A                     	;# 
  1419  001A                     	;# 
  1420  001B                     	;# 
  1421  001B                     	;# 
  1422  001C                     	;# 
  1423  001D                     	;# 
  1424  001E                     	;# 
  1425  001F                     	;# 
  1426  008C                     	;# 
  1427  008D                     	;# 
  1428  008E                     	;# 
  1429  0090                     	;# 
  1430  0091                     	;# 
  1431  0092                     	;# 
  1432  0093                     	;# 
  1433  0094                     	;# 
  1434  0095                     	;# 
  1435  0096                     	;# 
  1436  0098                     	;# 
  1437  0099                     	;# 
  1438  009A                     	;# 
  1439  009B                     	;# 
  1440  009B                     	;# 
  1441  009C                     	;# 
  1442  009D                     	;# 
  1443  009E                     	;# 
  1444  009F                     	;# 
  1445  010C                     	;# 
  1446  010D                     	;# 
  1447  010E                     	;# 
  1448  0111                     	;# 
  1449  0112                     	;# 
  1450  0113                     	;# 
  1451  0114                     	;# 
  1452  0115                     	;# 
  1453  0116                     	;# 
  1454  0117                     	;# 
  1455  0118                     	;# 
  1456  0119                     	;# 
  1457  011C                     	;# 
  1458  018C                     	;# 
  1459  018D                     	;# 
  1460  018E                     	;# 
  1461  0191                     	;# 
  1462  0191                     	;# 
  1463  0192                     	;# 
  1464  0193                     	;# 
  1465  0193                     	;# 
  1466  0194                     	;# 
  1467  0195                     	;# 
  1468  0196                     	;# 
  1469  0197                     	;# 
  1470  0199                     	;# 
  1471  0199                     	;# 
  1472  0199                     	;# 
  1473  019A                     	;# 
  1474  019A                     	;# 
  1475  019A                     	;# 
  1476  019B                     	;# 
  1477  019B                     	;# 
  1478  019B                     	;# 
  1479  019B                     	;# 
  1480  019B                     	;# 
  1481  019C                     	;# 
  1482  019C                     	;# 
  1483  019C                     	;# 
  1484  019D                     	;# 
  1485  019D                     	;# 
  1486  019D                     	;# 
  1487  019E                     	;# 
  1488  019E                     	;# 
  1489  019E                     	;# 
  1490  019F                     	;# 
  1491  019F                     	;# 
  1492  019F                     	;# 
  1493  019F                     	;# 
  1494  019F                     	;# 
  1495  020C                     	;# 
  1496  020D                     	;# 
  1497  020E                     	;# 
  1498  0211                     	;# 
  1499  0211                     	;# 
  1500  0212                     	;# 
  1501  0212                     	;# 
  1502  0213                     	;# 
  1503  0213                     	;# 
  1504  0214                     	;# 
  1505  0214                     	;# 
  1506  0215                     	;# 
  1507  0215                     	;# 
  1508  0215                     	;# 
  1509  0215                     	;# 
  1510  0216                     	;# 
  1511  0216                     	;# 
  1512  0217                     	;# 
  1513  0217                     	;# 
  1514  028C                     	;# 
  1515  028D                     	;# 
  1516  028E                     	;# 
  1517  0291                     	;# 
  1518  0291                     	;# 
  1519  0292                     	;# 
  1520  0293                     	;# 
  1521  0294                     	;# 
  1522  0298                     	;# 
  1523  0298                     	;# 
  1524  0299                     	;# 
  1525  029A                     	;# 
  1526  029B                     	;# 
  1527  029E                     	;# 
  1528  030C                     	;# 
  1529  030D                     	;# 
  1530  030E                     	;# 
  1531  038C                     	;# 
  1532  038D                     	;# 
  1533  038E                     	;# 
  1534  0391                     	;# 
  1535  0392                     	;# 
  1536  0393                     	;# 
  1537  0394                     	;# 
  1538  0395                     	;# 
  1539  0396                     	;# 
  1540  0397                     	;# 
  1541  0398                     	;# 
  1542  0399                     	;# 
  1543  040E                     	;# 
  1544  0413                     	;# 
  1545  0413                     	;# 
  1546  0414                     	;# 
  1547  0414                     	;# 
  1548  0415                     	;# 
  1549  0416                     	;# 
  1550  0417                     	;# 
  1551  0418                     	;# 
  1552  041A                     	;# 
  1553  041A                     	;# 
  1554  041B                     	;# 
  1555  041B                     	;# 
  1556  041C                     	;# 
  1557  041D                     	;# 
  1558  041E                     	;# 
  1559  041F                     	;# 
  1560  0493                     	;# 
  1561  0494                     	;# 
  1562  0495                     	;# 
  1563  0496                     	;# 
  1564  049A                     	;# 
  1565  049B                     	;# 
  1566  049C                     	;# 
  1567  049D                     	;# 
  1568  058C                     	;# 
  1569  058C                     	;# 
  1570  058D                     	;# 
  1571  058E                     	;# 
  1572  058E                     	;# 
  1573  058F                     	;# 
  1574  0590                     	;# 
  1575  0590                     	;# 
  1576  0591                     	;# 
  1577  0592                     	;# 
  1578  0592                     	;# 
  1579  0593                     	;# 
  1580  0594                     	;# 
  1581  0594                     	;# 
  1582  0595                     	;# 
  1583  0596                     	;# 
  1584  0596                     	;# 
  1585  0597                     	;# 
  1586  0598                     	;# 
  1587  0599                     	;# 
  1588  059A                     	;# 
  1589  059B                     	;# 
  1590  059B                     	;# 
  1591  059C                     	;# 
  1592  059D                     	;# 
  1593  060C                     	;# 
  1594  060C                     	;# 
  1595  060D                     	;# 
  1596  060E                     	;# 
  1597  060F                     	;# 
  1598  060F                     	;# 
  1599  0610                     	;# 
  1600  0611                     	;# 
  1601  0612                     	;# 
  1602  0613                     	;# 
  1603  0614                     	;# 
  1604  0617                     	;# 
  1605  0618                     	;# 
  1606  0619                     	;# 
  1607  061A                     	;# 
  1608  061B                     	;# 
  1609  061C                     	;# 
  1610  0691                     	;# 
  1611  0692                     	;# 
  1612  0693                     	;# 
  1613  0694                     	;# 
  1614  0695                     	;# 
  1615  0696                     	;# 
  1616  0697                     	;# 
  1617  0699                     	;# 
  1618  069A                     	;# 
  1619  0711                     	;# 
  1620  0712                     	;# 
  1621  0713                     	;# 
  1622  0714                     	;# 
  1623  0715                     	;# 
  1624  0718                     	;# 
  1625  0718                     	;# 
  1626  0719                     	;# 
  1627  071A                     	;# 
  1628  071A                     	;# 
  1629  071B                     	;# 
  1630  071C                     	;# 
  1631  071D                     	;# 
  1632  0791                     	;# 
  1633  0791                     	;# 
  1634  0792                     	;# 
  1635  0793                     	;# 
  1636  0793                     	;# 
  1637  0794                     	;# 
  1638  0795                     	;# 
  1639  0795                     	;# 
  1640  0796                     	;# 
  1641  0797                     	;# 
  1642  0797                     	;# 
  1643  0798                     	;# 
  1644  0799                     	;# 
  1645  079A                     	;# 
  1646  080C                     	;# 
  1647  080C                     	;# 
  1648  080D                     	;# 
  1649  080E                     	;# 
  1650  080E                     	;# 
  1651  080F                     	;# 
  1652  0810                     	;# 
  1653  0810                     	;# 
  1654  0811                     	;# 
  1655  0812                     	;# 
  1656  0812                     	;# 
  1657  0813                     	;# 
  1658  0814                     	;# 
  1659  0815                     	;# 
  1660  0816                     	;# 
  1661  0817                     	;# 
  1662  0818                     	;# 
  1663  0819                     	;# 
  1664  081A                     	;# 
  1665  081A                     	;# 
  1666  081B                     	;# 
  1667  081C                     	;# 
  1668  081C                     	;# 
  1669  081D                     	;# 
  1670  088C                     	;# 
  1671  088D                     	;# 
  1672  088E                     	;# 
  1673  088F                     	;# 
  1674  088F                     	;# 
  1675  0890                     	;# 
  1676  0891                     	;# 
  1677  0892                     	;# 
  1678  0893                     	;# 
  1679  0893                     	;# 
  1680  0894                     	;# 
  1681  0895                     	;# 
  1682  0896                     	;# 
  1683  0897                     	;# 
  1684  0897                     	;# 
  1685  0898                     	;# 
  1686  0899                     	;# 
  1687  0D8C                     	;# 
  1688  0D8C                     	;# 
  1689  0D8D                     	;# 
  1690  0D8E                     	;# 
  1691  0D8F                     	;# 
  1692  0D8F                     	;# 
  1693  0D90                     	;# 
  1694  0D91                     	;# 
  1695  0D92                     	;# 
  1696  0D92                     	;# 
  1697  0D93                     	;# 
  1698  0D94                     	;# 
  1699  0D95                     	;# 
  1700  0D95                     	;# 
  1701  0D96                     	;# 
  1702  0D97                     	;# 
  1703  0D98                     	;# 
  1704  0D99                     	;# 
  1705  0D9A                     	;# 
  1706  0D9B                     	;# 
  1707  0D9C                     	;# 
  1708  0D9D                     	;# 
  1709  0D9E                     	;# 
  1710  0D9E                     	;# 
  1711  0D9F                     	;# 
  1712  0DA0                     	;# 
  1713  0DA1                     	;# 
  1714  0DA1                     	;# 
  1715  0DA2                     	;# 
  1716  0DA3                     	;# 
  1717  0DA4                     	;# 
  1718  0DA4                     	;# 
  1719  0DA5                     	;# 
  1720  0DA6                     	;# 
  1721  0DA7                     	;# 
  1722  0DA7                     	;# 
  1723  0DA8                     	;# 
  1724  0DA9                     	;# 
  1725  0DAA                     	;# 
  1726  0DAB                     	;# 
  1727  0DAC                     	;# 
  1728  0DAD                     	;# 
  1729  0DAE                     	;# 
  1730  0DAF                     	;# 
  1731  0E0F                     	;# 
  1732  0E10                     	;# 
  1733  0E11                     	;# 
  1734  0E12                     	;# 
  1735  0E13                     	;# 
  1736  0E14                     	;# 
  1737  0E15                     	;# 
  1738  0E16                     	;# 
  1739  0E17                     	;# 
  1740  0E18                     	;# 
  1741  0E19                     	;# 
  1742  0E1A                     	;# 
  1743  0E1B                     	;# 
  1744  0E1C                     	;# 
  1745  0E1D                     	;# 
  1746  0E1E                     	;# 
  1747  0E1F                     	;# 
  1748  0E20                     	;# 
  1749  0E21                     	;# 
  1750  0E22                     	;# 
  1751  0E23                     	;# 
  1752  0E24                     	;# 
  1753  0E25                     	;# 
  1754  0E26                     	;# 
  1755  0E27                     	;# 
  1756  0E28                     	;# 
  1757  0E29                     	;# 
  1758  0E2A                     	;# 
  1759  0E2B                     	;# 
  1760  0E2C                     	;# 
  1761  0E2D                     	;# 
  1762  0E2E                     	;# 
  1763  0E90                     	;# 
  1764  0E91                     	;# 
  1765  0E92                     	;# 
  1766  0E94                     	;# 
  1767  0E95                     	;# 
  1768  0E9C                     	;# 
  1769  0E9D                     	;# 
  1770  0E9E                     	;# 
  1771  0E9F                     	;# 
  1772  0EA0                     	;# 
  1773  0EA1                     	;# 
  1774  0EA2                     	;# 
  1775  0EA3                     	;# 
  1776  0EA4                     	;# 
  1777  0EA5                     	;# 
  1778  0EA6                     	;# 
  1779  0EA7                     	;# 
  1780  0F0F                     	;# 
  1781  0F10                     	;# 
  1782  0F11                     	;# 
  1783  0F12                     	;# 
  1784  0F13                     	;# 
  1785  0F14                     	;# 
  1786  0F15                     	;# 
  1787  0F16                     	;# 
  1788  0F17                     	;# 
  1789  0F18                     	;# 
  1790  0F19                     	;# 
  1791  0F1A                     	;# 
  1792  0F1B                     	;# 
  1793  0F1C                     	;# 
  1794  0F1D                     	;# 
  1795  0F1E                     	;# 
  1796  0F1F                     	;# 
  1797  0F20                     	;# 
  1798  0F21                     	;# 
  1799  0F22                     	;# 
  1800  0F23                     	;# 
  1801  0F24                     	;# 
  1802  0F25                     	;# 
  1803  0F26                     	;# 
  1804  0F27                     	;# 
  1805  0F28                     	;# 
  1806  0F29                     	;# 
  1807  0F2A                     	;# 
  1808  0F2B                     	;# 
  1809  0F2C                     	;# 
  1810  0F2D                     	;# 
  1811  0F2E                     	;# 
  1812  0F2F                     	;# 
  1813  0F30                     	;# 
  1814  0F31                     	;# 
  1815  0F32                     	;# 
  1816  0F33                     	;# 
  1817  0F34                     	;# 
  1818  0F35                     	;# 
  1819  0F36                     	;# 
  1820  0F37                     	;# 
  1821  0FE4                     	;# 
  1822  0FE5                     	;# 
  1823  0FE6                     	;# 
  1824  0FE7                     	;# 
  1825  0FE8                     	;# 
  1826  0FE9                     	;# 
  1827  0FEA                     	;# 
  1828  0FEB                     	;# 
  1829  0FED                     	;# 
  1830  0FEE                     	;# 
  1831  0FEF                     	;# 
  1832  0000                     	;# 
  1833  0001                     	;# 
  1834  0002                     	;# 
  1835  0003                     	;# 
  1836  0004                     	;# 
  1837  0005                     	;# 
  1838  0006                     	;# 
  1839  0007                     	;# 
  1840  0008                     	;# 
  1841  0009                     	;# 
  1842  000A                     	;# 
  1843  000B                     	;# 
  1844  000C                     	;# 
  1845  000D                     	;# 
  1846  000E                     	;# 
  1847  0010                     	;# 
  1848  0011                     	;# 
  1849  0012                     	;# 
  1850  0013                     	;# 
  1851  0014                     	;# 
  1852  0015                     	;# 
  1853  0016                     	;# 
  1854  0016                     	;# 
  1855  0017                     	;# 
  1856  0018                     	;# 
  1857  0019                     	;# 
  1858  001A                     	;# 
  1859  001A                     	;# 
  1860  001B                     	;# 
  1861  001B                     	;# 
  1862  001C                     	;# 
  1863  001D                     	;# 
  1864  001E                     	;# 
  1865  001F                     	;# 
  1866  008C                     	;# 
  1867  008D                     	;# 
  1868  008E                     	;# 
  1869  0090                     	;# 
  1870  0091                     	;# 
  1871  0092                     	;# 
  1872  0093                     	;# 
  1873  0094                     	;# 
  1874  0095                     	;# 
  1875  0096                     	;# 
  1876  0098                     	;# 
  1877  0099                     	;# 
  1878  009A                     	;# 
  1879  009B                     	;# 
  1880  009B                     	;# 
  1881  009C                     	;# 
  1882  009D                     	;# 
  1883  009E                     	;# 
  1884  009F                     	;# 
  1885  010C                     	;# 
  1886  010D                     	;# 
  1887  010E                     	;# 
  1888  0111                     	;# 
  1889  0112                     	;# 
  1890  0113                     	;# 
  1891  0114                     	;# 
  1892  0115                     	;# 
  1893  0116                     	;# 
  1894  0117                     	;# 
  1895  0118                     	;# 
  1896  0119                     	;# 
  1897  011C                     	;# 
  1898  018C                     	;# 
  1899  018D                     	;# 
  1900  018E                     	;# 
  1901  0191                     	;# 
  1902  0191                     	;# 
  1903  0192                     	;# 
  1904  0193                     	;# 
  1905  0193                     	;# 
  1906  0194                     	;# 
  1907  0195                     	;# 
  1908  0196                     	;# 
  1909  0197                     	;# 
  1910  0199                     	;# 
  1911  0199                     	;# 
  1912  0199                     	;# 
  1913  019A                     	;# 
  1914  019A                     	;# 
  1915  019A                     	;# 
  1916  019B                     	;# 
  1917  019B                     	;# 
  1918  019B                     	;# 
  1919  019B                     	;# 
  1920  019B                     	;# 
  1921  019C                     	;# 
  1922  019C                     	;# 
  1923  019C                     	;# 
  1924  019D                     	;# 
  1925  019D                     	;# 
  1926  019D                     	;# 
  1927  019E                     	;# 
  1928  019E                     	;# 
  1929  019E                     	;# 
  1930  019F                     	;# 
  1931  019F                     	;# 
  1932  019F                     	;# 
  1933  019F                     	;# 
  1934  019F                     	;# 
  1935  020C                     	;# 
  1936  020D                     	;# 
  1937  020E                     	;# 
  1938  0211                     	;# 
  1939  0211                     	;# 
  1940  0212                     	;# 
  1941  0212                     	;# 
  1942  0213                     	;# 
  1943  0213                     	;# 
  1944  0214                     	;# 
  1945  0214                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0215                     	;# 
  1949  0215                     	;# 
  1950  0216                     	;# 
  1951  0216                     	;# 
  1952  0217                     	;# 
  1953  0217                     	;# 
  1954  028C                     	;# 
  1955  028D                     	;# 
  1956  028E                     	;# 
  1957  0291                     	;# 
  1958  0291                     	;# 
  1959  0292                     	;# 
  1960  0293                     	;# 
  1961  0294                     	;# 
  1962  0298                     	;# 
  1963  0298                     	;# 
  1964  0299                     	;# 
  1965  029A                     	;# 
  1966  029B                     	;# 
  1967  029E                     	;# 
  1968  030C                     	;# 
  1969  030D                     	;# 
  1970  030E                     	;# 
  1971  038C                     	;# 
  1972  038D                     	;# 
  1973  038E                     	;# 
  1974  0391                     	;# 
  1975  0392                     	;# 
  1976  0393                     	;# 
  1977  0394                     	;# 
  1978  0395                     	;# 
  1979  0396                     	;# 
  1980  0397                     	;# 
  1981  0398                     	;# 
  1982  0399                     	;# 
  1983  040E                     	;# 
  1984  0413                     	;# 
  1985  0413                     	;# 
  1986  0414                     	;# 
  1987  0414                     	;# 
  1988  0415                     	;# 
  1989  0416                     	;# 
  1990  0417                     	;# 
  1991  0418                     	;# 
  1992  041A                     	;# 
  1993  041A                     	;# 
  1994  041B                     	;# 
  1995  041B                     	;# 
  1996  041C                     	;# 
  1997  041D                     	;# 
  1998  041E                     	;# 
  1999  041F                     	;# 
  2000  0493                     	;# 
  2001  0494                     	;# 
  2002  0495                     	;# 
  2003  0496                     	;# 
  2004  049A                     	;# 
  2005  049B                     	;# 
  2006  049C                     	;# 
  2007  049D                     	;# 
  2008  058C                     	;# 
  2009  058C                     	;# 
  2010  058D                     	;# 
  2011  058E                     	;# 
  2012  058E                     	;# 
  2013  058F                     	;# 
  2014  0590                     	;# 
  2015  0590                     	;# 
  2016  0591                     	;# 
  2017  0592                     	;# 
  2018  0592                     	;# 
  2019  0593                     	;# 
  2020  0594                     	;# 
  2021  0594                     	;# 
  2022  0595                     	;# 
  2023  0596                     	;# 
  2024  0596                     	;# 
  2025  0597                     	;# 
  2026  0598                     	;# 
  2027  0599                     	;# 
  2028  059A                     	;# 
  2029  059B                     	;# 
  2030  059B                     	;# 
  2031  059C                     	;# 
  2032  059D                     	;# 
  2033  060C                     	;# 
  2034  060C                     	;# 
  2035  060D                     	;# 
  2036  060E                     	;# 
  2037  060F                     	;# 
  2038  060F                     	;# 
  2039  0610                     	;# 
  2040  0611                     	;# 
  2041  0612                     	;# 
  2042  0613                     	;# 
  2043  0614                     	;# 
  2044  0617                     	;# 
  2045  0618                     	;# 
  2046  0619                     	;# 
  2047  061A                     	;# 
  2048  061B                     	;# 
  2049  061C                     	;# 
  2050  0691                     	;# 
  2051  0692                     	;# 
  2052  0693                     	;# 
  2053  0694                     	;# 
  2054  0695                     	;# 
  2055  0696                     	;# 
  2056  0697                     	;# 
  2057  0699                     	;# 
  2058  069A                     	;# 
  2059  0711                     	;# 
  2060  0712                     	;# 
  2061  0713                     	;# 
  2062  0714                     	;# 
  2063  0715                     	;# 
  2064  0718                     	;# 
  2065  0718                     	;# 
  2066  0719                     	;# 
  2067  071A                     	;# 
  2068  071A                     	;# 
  2069  071B                     	;# 
  2070  071C                     	;# 
  2071  071D                     	;# 
  2072  0791                     	;# 
  2073  0791                     	;# 
  2074  0792                     	;# 
  2075  0793                     	;# 
  2076  0793                     	;# 
  2077  0794                     	;# 
  2078  0795                     	;# 
  2079  0795                     	;# 
  2080  0796                     	;# 
  2081  0797                     	;# 
  2082  0797                     	;# 
  2083  0798                     	;# 
  2084  0799                     	;# 
  2085  079A                     	;# 
  2086  080C                     	;# 
  2087  080C                     	;# 
  2088  080D                     	;# 
  2089  080E                     	;# 
  2090  080E                     	;# 
  2091  080F                     	;# 
  2092  0810                     	;# 
  2093  0810                     	;# 
  2094  0811                     	;# 
  2095  0812                     	;# 
  2096  0812                     	;# 
  2097  0813                     	;# 
  2098  0814                     	;# 
  2099  0815                     	;# 
  2100  0816                     	;# 
  2101  0817                     	;# 
  2102  0818                     	;# 
  2103  0819                     	;# 
  2104  081A                     	;# 
  2105  081A                     	;# 
  2106  081B                     	;# 
  2107  081C                     	;# 
  2108  081C                     	;# 
  2109  081D                     	;# 
  2110  088C                     	;# 
  2111  088D                     	;# 
  2112  088E                     	;# 
  2113  088F                     	;# 
  2114  088F                     	;# 
  2115  0890                     	;# 
  2116  0891                     	;# 
  2117  0892                     	;# 
  2118  0893                     	;# 
  2119  0893                     	;# 
  2120  0894                     	;# 
  2121  0895                     	;# 
  2122  0896                     	;# 
  2123  0897                     	;# 
  2124  0897                     	;# 
  2125  0898                     	;# 
  2126  0899                     	;# 
  2127  0D8C                     	;# 
  2128  0D8C                     	;# 
  2129  0D8D                     	;# 
  2130  0D8E                     	;# 
  2131  0D8F                     	;# 
  2132  0D8F                     	;# 
  2133  0D90                     	;# 
  2134  0D91                     	;# 
  2135  0D92                     	;# 
  2136  0D92                     	;# 
  2137  0D93                     	;# 
  2138  0D94                     	;# 
  2139  0D95                     	;# 
  2140  0D95                     	;# 
  2141  0D96                     	;# 
  2142  0D97                     	;# 
  2143  0D98                     	;# 
  2144  0D99                     	;# 
  2145  0D9A                     	;# 
  2146  0D9B                     	;# 
  2147  0D9C                     	;# 
  2148  0D9D                     	;# 
  2149  0D9E                     	;# 
  2150  0D9E                     	;# 
  2151  0D9F                     	;# 
  2152  0DA0                     	;# 
  2153  0DA1                     	;# 
  2154  0DA1                     	;# 
  2155  0DA2                     	;# 
  2156  0DA3                     	;# 
  2157  0DA4                     	;# 
  2158  0DA4                     	;# 
  2159  0DA5                     	;# 
  2160  0DA6                     	;# 
  2161  0DA7                     	;# 
  2162  0DA7                     	;# 
  2163  0DA8                     	;# 
  2164  0DA9                     	;# 
  2165  0DAA                     	;# 
  2166  0DAB                     	;# 
  2167  0DAC                     	;# 
  2168  0DAD                     	;# 
  2169  0DAE                     	;# 
  2170  0DAF                     	;# 
  2171  0E0F                     	;# 
  2172  0E10                     	;# 
  2173  0E11                     	;# 
  2174  0E12                     	;# 
  2175  0E13                     	;# 
  2176  0E14                     	;# 
  2177  0E15                     	;# 
  2178  0E16                     	;# 
  2179  0E17                     	;# 
  2180  0E18                     	;# 
  2181  0E19                     	;# 
  2182  0E1A                     	;# 
  2183  0E1B                     	;# 
  2184  0E1C                     	;# 
  2185  0E1D                     	;# 
  2186  0E1E                     	;# 
  2187  0E1F                     	;# 
  2188  0E20                     	;# 
  2189  0E21                     	;# 
  2190  0E22                     	;# 
  2191  0E23                     	;# 
  2192  0E24                     	;# 
  2193  0E25                     	;# 
  2194  0E26                     	;# 
  2195  0E27                     	;# 
  2196  0E28                     	;# 
  2197  0E29                     	;# 
  2198  0E2A                     	;# 
  2199  0E2B                     	;# 
  2200  0E2C                     	;# 
  2201  0E2D                     	;# 
  2202  0E2E                     	;# 
  2203  0E90                     	;# 
  2204  0E91                     	;# 
  2205  0E92                     	;# 
  2206  0E94                     	;# 
  2207  0E95                     	;# 
  2208  0E9C                     	;# 
  2209  0E9D                     	;# 
  2210  0E9E                     	;# 
  2211  0E9F                     	;# 
  2212  0EA0                     	;# 
  2213  0EA1                     	;# 
  2214  0EA2                     	;# 
  2215  0EA3                     	;# 
  2216  0EA4                     	;# 
  2217  0EA5                     	;# 
  2218  0EA6                     	;# 
  2219  0EA7                     	;# 
  2220  0F0F                     	;# 
  2221  0F10                     	;# 
  2222  0F11                     	;# 
  2223  0F12                     	;# 
  2224  0F13                     	;# 
  2225  0F14                     	;# 
  2226  0F15                     	;# 
  2227  0F16                     	;# 
  2228  0F17                     	;# 
  2229  0F18                     	;# 
  2230  0F19                     	;# 
  2231  0F1A                     	;# 
  2232  0F1B                     	;# 
  2233  0F1C                     	;# 
  2234  0F1D                     	;# 
  2235  0F1E                     	;# 
  2236  0F1F                     	;# 
  2237  0F20                     	;# 
  2238  0F21                     	;# 
  2239  0F22                     	;# 
  2240  0F23                     	;# 
  2241  0F24                     	;# 
  2242  0F25                     	;# 
  2243  0F26                     	;# 
  2244  0F27                     	;# 
  2245  0F28                     	;# 
  2246  0F29                     	;# 
  2247  0F2A                     	;# 
  2248  0F2B                     	;# 
  2249  0F2C                     	;# 
  2250  0F2D                     	;# 
  2251  0F2E                     	;# 
  2252  0F2F                     	;# 
  2253  0F30                     	;# 
  2254  0F31                     	;# 
  2255  0F32                     	;# 
  2256  0F33                     	;# 
  2257  0F34                     	;# 
  2258  0F35                     	;# 
  2259  0F36                     	;# 
  2260  0F37                     	;# 
  2261  0FE4                     	;# 
  2262  0FE5                     	;# 
  2263  0FE6                     	;# 
  2264  0FE7                     	;# 
  2265  0FE8                     	;# 
  2266  0FE9                     	;# 
  2267  0FEA                     	;# 
  2268  0FEB                     	;# 
  2269  0FED                     	;# 
  2270  0FEE                     	;# 
  2271  0FEF                     	;# 
  2272  0000                     	;# 
  2273  0001                     	;# 
  2274  0002                     	;# 
  2275  0003                     	;# 
  2276  0004                     	;# 
  2277  0005                     	;# 
  2278  0006                     	;# 
  2279  0007                     	;# 
  2280  0008                     	;# 
  2281  0009                     	;# 
  2282  000A                     	;# 
  2283  000B                     	;# 
  2284  000C                     	;# 
  2285  000D                     	;# 
  2286  000E                     	;# 
  2287  0010                     	;# 
  2288  0011                     	;# 
  2289  0012                     	;# 
  2290  0013                     	;# 
  2291  0014                     	;# 
  2292  0015                     	;# 
  2293  0016                     	;# 
  2294  0016                     	;# 
  2295  0017                     	;# 
  2296  0018                     	;# 
  2297  0019                     	;# 
  2298  001A                     	;# 
  2299  001A                     	;# 
  2300  001B                     	;# 
  2301  001B                     	;# 
  2302  001C                     	;# 
  2303  001D                     	;# 
  2304  001E                     	;# 
  2305  001F                     	;# 
  2306  008C                     	;# 
  2307  008D                     	;# 
  2308  008E                     	;# 
  2309  0090                     	;# 
  2310  0091                     	;# 
  2311  0092                     	;# 
  2312  0093                     	;# 
  2313  0094                     	;# 
  2314  0095                     	;# 
  2315  0096                     	;# 
  2316  0098                     	;# 
  2317  0099                     	;# 
  2318  009A                     	;# 
  2319  009B                     	;# 
  2320  009B                     	;# 
  2321  009C                     	;# 
  2322  009D                     	;# 
  2323  009E                     	;# 
  2324  009F                     	;# 
  2325  010C                     	;# 
  2326  010D                     	;# 
  2327  010E                     	;# 
  2328  0111                     	;# 
  2329  0112                     	;# 
  2330  0113                     	;# 
  2331  0114                     	;# 
  2332  0115                     	;# 
  2333  0116                     	;# 
  2334  0117                     	;# 
  2335  0118                     	;# 
  2336  0119                     	;# 
  2337  011C                     	;# 
  2338  018C                     	;# 
  2339  018D                     	;# 
  2340  018E                     	;# 
  2341  0191                     	;# 
  2342  0191                     	;# 
  2343  0192                     	;# 
  2344  0193                     	;# 
  2345  0193                     	;# 
  2346  0194                     	;# 
  2347  0195                     	;# 
  2348  0196                     	;# 
  2349  0197                     	;# 
  2350  0199                     	;# 
  2351  0199                     	;# 
  2352  0199                     	;# 
  2353  019A                     	;# 
  2354  019A                     	;# 
  2355  019A                     	;# 
  2356  019B                     	;# 
  2357  019B                     	;# 
  2358  019B                     	;# 
  2359  019B                     	;# 
  2360  019B                     	;# 
  2361  019C                     	;# 
  2362  019C                     	;# 
  2363  019C                     	;# 
  2364  019D                     	;# 
  2365  019D                     	;# 
  2366  019D                     	;# 
  2367  019E                     	;# 
  2368  019E                     	;# 
  2369  019E                     	;# 
  2370  019F                     	;# 
  2371  019F                     	;# 
  2372  019F                     	;# 
  2373  019F                     	;# 
  2374  019F                     	;# 
  2375  020C                     	;# 
  2376  020D                     	;# 
  2377  020E                     	;# 
  2378  0211                     	;# 
  2379  0211                     	;# 
  2380  0212                     	;# 
  2381  0212                     	;# 
  2382  0213                     	;# 
  2383  0213                     	;# 
  2384  0214                     	;# 
  2385  0214                     	;# 
  2386  0215                     	;# 
  2387  0215                     	;# 
  2388  0215                     	;# 
  2389  0215                     	;# 
  2390  0216                     	;# 
  2391  0216                     	;# 
  2392  0217                     	;# 
  2393  0217                     	;# 
  2394  028C                     	;# 
  2395  028D                     	;# 
  2396  028E                     	;# 
  2397  0291                     	;# 
  2398  0291                     	;# 
  2399  0292                     	;# 
  2400  0293                     	;# 
  2401  0294                     	;# 
  2402  0298                     	;# 
  2403  0298                     	;# 
  2404  0299                     	;# 
  2405  029A                     	;# 
  2406  029B                     	;# 
  2407  029E                     	;# 
  2408  030C                     	;# 
  2409  030D                     	;# 
  2410  030E                     	;# 
  2411  038C                     	;# 
  2412  038D                     	;# 
  2413  038E                     	;# 
  2414  0391                     	;# 
  2415  0392                     	;# 
  2416  0393                     	;# 
  2417  0394                     	;# 
  2418  0395                     	;# 
  2419  0396                     	;# 
  2420  0397                     	;# 
  2421  0398                     	;# 
  2422  0399                     	;# 
  2423  040E                     	;# 
  2424  0413                     	;# 
  2425  0413                     	;# 
  2426  0414                     	;# 
  2427  0414                     	;# 
  2428  0415                     	;# 
  2429  0416                     	;# 
  2430  0417                     	;# 
  2431  0418                     	;# 
  2432  041A                     	;# 
  2433  041A                     	;# 
  2434  041B                     	;# 
  2435  041B                     	;# 
  2436  041C                     	;# 
  2437  041D                     	;# 
  2438  041E                     	;# 
  2439  041F                     	;# 
  2440  0493                     	;# 
  2441  0494                     	;# 
  2442  0495                     	;# 
  2443  0496                     	;# 
  2444  049A                     	;# 
  2445  049B                     	;# 
  2446  049C                     	;# 
  2447  049D                     	;# 
  2448  058C                     	;# 
  2449  058C                     	;# 
  2450  058D                     	;# 
  2451  058E                     	;# 
  2452  058E                     	;# 
  2453  058F                     	;# 
  2454  0590                     	;# 
  2455  0590                     	;# 
  2456  0591                     	;# 
  2457  0592                     	;# 
  2458  0592                     	;# 
  2459  0593                     	;# 
  2460  0594                     	;# 
  2461  0594                     	;# 
  2462  0595                     	;# 
  2463  0596                     	;# 
  2464  0596                     	;# 
  2465  0597                     	;# 
  2466  0598                     	;# 
  2467  0599                     	;# 
  2468  059A                     	;# 
  2469  059B                     	;# 
  2470  059B                     	;# 
  2471  059C                     	;# 
  2472  059D                     	;# 
  2473  060C                     	;# 
  2474  060C                     	;# 
  2475  060D                     	;# 
  2476  060E                     	;# 
  2477  060F                     	;# 
  2478  060F                     	;# 
  2479  0610                     	;# 
  2480  0611                     	;# 
  2481  0612                     	;# 
  2482  0613                     	;# 
  2483  0614                     	;# 
  2484  0617                     	;# 
  2485  0618                     	;# 
  2486  0619                     	;# 
  2487  061A                     	;# 
  2488  061B                     	;# 
  2489  061C                     	;# 
  2490  0691                     	;# 
  2491  0692                     	;# 
  2492  0693                     	;# 
  2493  0694                     	;# 
  2494  0695                     	;# 
  2495  0696                     	;# 
  2496  0697                     	;# 
  2497  0699                     	;# 
  2498  069A                     	;# 
  2499  0711                     	;# 
  2500  0712                     	;# 
  2501  0713                     	;# 
  2502  0714                     	;# 
  2503  0715                     	;# 
  2504  0718                     	;# 
  2505  0718                     	;# 
  2506  0719                     	;# 
  2507  071A                     	;# 
  2508  071A                     	;# 
  2509  071B                     	;# 
  2510  071C                     	;# 
  2511  071D                     	;# 
  2512  0791                     	;# 
  2513  0791                     	;# 
  2514  0792                     	;# 
  2515  0793                     	;# 
  2516  0793                     	;# 
  2517  0794                     	;# 
  2518  0795                     	;# 
  2519  0795                     	;# 
  2520  0796                     	;# 
  2521  0797                     	;# 
  2522  0797                     	;# 
  2523  0798                     	;# 
  2524  0799                     	;# 
  2525  079A                     	;# 
  2526  080C                     	;# 
  2527  080C                     	;# 
  2528  080D                     	;# 
  2529  080E                     	;# 
  2530  080E                     	;# 
  2531  080F                     	;# 
  2532  0810                     	;# 
  2533  0810                     	;# 
  2534  0811                     	;# 
  2535  0812                     	;# 
  2536  0812                     	;# 
  2537  0813                     	;# 
  2538  0814                     	;# 
  2539  0815                     	;# 
  2540  0816                     	;# 
  2541  0817                     	;# 
  2542  0818                     	;# 
  2543  0819                     	;# 
  2544  081A                     	;# 
  2545  081A                     	;# 
  2546  081B                     	;# 
  2547  081C                     	;# 
  2548  081C                     	;# 
  2549  081D                     	;# 
  2550  088C                     	;# 
  2551  088D                     	;# 
  2552  088E                     	;# 
  2553  088F                     	;# 
  2554  088F                     	;# 
  2555  0890                     	;# 
  2556  0891                     	;# 
  2557  0892                     	;# 
  2558  0893                     	;# 
  2559  0893                     	;# 
  2560  0894                     	;# 
  2561  0895                     	;# 
  2562  0896                     	;# 
  2563  0897                     	;# 
  2564  0897                     	;# 
  2565  0898                     	;# 
  2566  0899                     	;# 
  2567  0D8C                     	;# 
  2568  0D8C                     	;# 
  2569  0D8D                     	;# 
  2570  0D8E                     	;# 
  2571  0D8F                     	;# 
  2572  0D8F                     	;# 
  2573  0D90                     	;# 
  2574  0D91                     	;# 
  2575  0D92                     	;# 
  2576  0D92                     	;# 
  2577  0D93                     	;# 
  2578  0D94                     	;# 
  2579  0D95                     	;# 
  2580  0D95                     	;# 
  2581  0D96                     	;# 
  2582  0D97                     	;# 
  2583  0D98                     	;# 
  2584  0D99                     	;# 
  2585  0D9A                     	;# 
  2586  0D9B                     	;# 
  2587  0D9C                     	;# 
  2588  0D9D                     	;# 
  2589  0D9E                     	;# 
  2590  0D9E                     	;# 
  2591  0D9F                     	;# 
  2592  0DA0                     	;# 
  2593  0DA1                     	;# 
  2594  0DA1                     	;# 
  2595  0DA2                     	;# 
  2596  0DA3                     	;# 
  2597  0DA4                     	;# 
  2598  0DA4                     	;# 
  2599  0DA5                     	;# 
  2600  0DA6                     	;# 
  2601  0DA7                     	;# 
  2602  0DA7                     	;# 
  2603  0DA8                     	;# 
  2604  0DA9                     	;# 
  2605  0DAA                     	;# 
  2606  0DAB                     	;# 
  2607  0DAC                     	;# 
  2608  0DAD                     	;# 
  2609  0DAE                     	;# 
  2610  0DAF                     	;# 
  2611  0E0F                     	;# 
  2612  0E10                     	;# 
  2613  0E11                     	;# 
  2614  0E12                     	;# 
  2615  0E13                     	;# 
  2616  0E14                     	;# 
  2617  0E15                     	;# 
  2618  0E16                     	;# 
  2619  0E17                     	;# 
  2620  0E18                     	;# 
  2621  0E19                     	;# 
  2622  0E1A                     	;# 
  2623  0E1B                     	;# 
  2624  0E1C                     	;# 
  2625  0E1D                     	;# 
  2626  0E1E                     	;# 
  2627  0E1F                     	;# 
  2628  0E20                     	;# 
  2629  0E21                     	;# 
  2630  0E22                     	;# 
  2631  0E23                     	;# 
  2632  0E24                     	;# 
  2633  0E25                     	;# 
  2634  0E26                     	;# 
  2635  0E27                     	;# 
  2636  0E28                     	;# 
  2637  0E29                     	;# 
  2638  0E2A                     	;# 
  2639  0E2B                     	;# 
  2640  0E2C                     	;# 
  2641  0E2D                     	;# 
  2642  0E2E                     	;# 
  2643  0E90                     	;# 
  2644  0E91                     	;# 
  2645  0E92                     	;# 
  2646  0E94                     	;# 
  2647  0E95                     	;# 
  2648  0E9C                     	;# 
  2649  0E9D                     	;# 
  2650  0E9E                     	;# 
  2651  0E9F                     	;# 
  2652  0EA0                     	;# 
  2653  0EA1                     	;# 
  2654  0EA2                     	;# 
  2655  0EA3                     	;# 
  2656  0EA4                     	;# 
  2657  0EA5                     	;# 
  2658  0EA6                     	;# 
  2659  0EA7                     	;# 
  2660  0F0F                     	;# 
  2661  0F10                     	;# 
  2662  0F11                     	;# 
  2663  0F12                     	;# 
  2664  0F13                     	;# 
  2665  0F14                     	;# 
  2666  0F15                     	;# 
  2667  0F16                     	;# 
  2668  0F17                     	;# 
  2669  0F18                     	;# 
  2670  0F19                     	;# 
  2671  0F1A                     	;# 
  2672  0F1B                     	;# 
  2673  0F1C                     	;# 
  2674  0F1D                     	;# 
  2675  0F1E                     	;# 
  2676  0F1F                     	;# 
  2677  0F20                     	;# 
  2678  0F21                     	;# 
  2679  0F22                     	;# 
  2680  0F23                     	;# 
  2681  0F24                     	;# 
  2682  0F25                     	;# 
  2683  0F26                     	;# 
  2684  0F27                     	;# 
  2685  0F28                     	;# 
  2686  0F29                     	;# 
  2687  0F2A                     	;# 
  2688  0F2B                     	;# 
  2689  0F2C                     	;# 
  2690  0F2D                     	;# 
  2691  0F2E                     	;# 
  2692  0F2F                     	;# 
  2693  0F30                     	;# 
  2694  0F31                     	;# 
  2695  0F32                     	;# 
  2696  0F33                     	;# 
  2697  0F34                     	;# 
  2698  0F35                     	;# 
  2699  0F36                     	;# 
  2700  0F37                     	;# 
  2701  0FE4                     	;# 
  2702  0FE5                     	;# 
  2703  0FE6                     	;# 
  2704  0FE7                     	;# 
  2705  0FE8                     	;# 
  2706  0FE9                     	;# 
  2707  0FEA                     	;# 
  2708  0FEB                     	;# 
  2709  0FED                     	;# 
  2710  0FEE                     	;# 
  2711  0FEF                     	;# 
  2712  0000                     	;# 
  2713  0001                     	;# 
  2714  0002                     	;# 
  2715  0003                     	;# 
  2716  0004                     	;# 
  2717  0005                     	;# 
  2718  0006                     	;# 
  2719  0007                     	;# 
  2720  0008                     	;# 
  2721  0009                     	;# 
  2722  000A                     	;# 
  2723  000B                     	;# 
  2724  000C                     	;# 
  2725  000D                     	;# 
  2726  000E                     	;# 
  2727  0010                     	;# 
  2728  0011                     	;# 
  2729  0012                     	;# 
  2730  0013                     	;# 
  2731  0014                     	;# 
  2732  0015                     	;# 
  2733  0016                     	;# 
  2734  0016                     	;# 
  2735  0017                     	;# 
  2736  0018                     	;# 
  2737  0019                     	;# 
  2738  001A                     	;# 
  2739  001A                     	;# 
  2740  001B                     	;# 
  2741  001B                     	;# 
  2742  001C                     	;# 
  2743  001D                     	;# 
  2744  001E                     	;# 
  2745  001F                     	;# 
  2746  008C                     	;# 
  2747  008D                     	;# 
  2748  008E                     	;# 
  2749  0090                     	;# 
  2750  0091                     	;# 
  2751  0092                     	;# 
  2752  0093                     	;# 
  2753  0094                     	;# 
  2754  0095                     	;# 
  2755  0096                     	;# 
  2756  0098                     	;# 
  2757  0099                     	;# 
  2758  009A                     	;# 
  2759  009B                     	;# 
  2760  009B                     	;# 
  2761  009C                     	;# 
  2762  009D                     	;# 
  2763  009E                     	;# 
  2764  009F                     	;# 
  2765  010C                     	;# 
  2766  010D                     	;# 
  2767  010E                     	;# 
  2768  0111                     	;# 
  2769  0112                     	;# 
  2770  0113                     	;# 
  2771  0114                     	;# 
  2772  0115                     	;# 
  2773  0116                     	;# 
  2774  0117                     	;# 
  2775  0118                     	;# 
  2776  0119                     	;# 
  2777  011C                     	;# 
  2778  018C                     	;# 
  2779  018D                     	;# 
  2780  018E                     	;# 
  2781  0191                     	;# 
  2782  0191                     	;# 
  2783  0192                     	;# 
  2784  0193                     	;# 
  2785  0193                     	;# 
  2786  0194                     	;# 
  2787  0195                     	;# 
  2788  0196                     	;# 
  2789  0197                     	;# 
  2790  0199                     	;# 
  2791  0199                     	;# 
  2792  0199                     	;# 
  2793  019A                     	;# 
  2794  019A                     	;# 
  2795  019A                     	;# 
  2796  019B                     	;# 
  2797  019B                     	;# 
  2798  019B                     	;# 
  2799  019B                     	;# 
  2800  019B                     	;# 
  2801  019C                     	;# 
  2802  019C                     	;# 
  2803  019C                     	;# 
  2804  019D                     	;# 
  2805  019D                     	;# 
  2806  019D                     	;# 
  2807  019E                     	;# 
  2808  019E                     	;# 
  2809  019E                     	;# 
  2810  019F                     	;# 
  2811  019F                     	;# 
  2812  019F                     	;# 
  2813  019F                     	;# 
  2814  019F                     	;# 
  2815  020C                     	;# 
  2816  020D                     	;# 
  2817  020E                     	;# 
  2818  0211                     	;# 
  2819  0211                     	;# 
  2820  0212                     	;# 
  2821  0212                     	;# 
  2822  0213                     	;# 
  2823  0213                     	;# 
  2824  0214                     	;# 
  2825  0214                     	;# 
  2826  0215                     	;# 
  2827  0215                     	;# 
  2828  0215                     	;# 
  2829  0215                     	;# 
  2830  0216                     	;# 
  2831  0216                     	;# 
  2832  0217                     	;# 
  2833  0217                     	;# 
  2834  028C                     	;# 
  2835  028D                     	;# 
  2836  028E                     	;# 
  2837  0291                     	;# 
  2838  0291                     	;# 
  2839  0292                     	;# 
  2840  0293                     	;# 
  2841  0294                     	;# 
  2842  0298                     	;# 
  2843  0298                     	;# 
  2844  0299                     	;# 
  2845  029A                     	;# 
  2846  029B                     	;# 
  2847  029E                     	;# 
  2848  030C                     	;# 
  2849  030D                     	;# 
  2850  030E                     	;# 
  2851  038C                     	;# 
  2852  038D                     	;# 
  2853  038E                     	;# 
  2854  0391                     	;# 
  2855  0392                     	;# 
  2856  0393                     	;# 
  2857  0394                     	;# 
  2858  0395                     	;# 
  2859  0396                     	;# 
  2860  0397                     	;# 
  2861  0398                     	;# 
  2862  0399                     	;# 
  2863  040E                     	;# 
  2864  0413                     	;# 
  2865  0413                     	;# 
  2866  0414                     	;# 
  2867  0414                     	;# 
  2868  0415                     	;# 
  2869  0416                     	;# 
  2870  0417                     	;# 
  2871  0418                     	;# 
  2872  041A                     	;# 
  2873  041A                     	;# 
  2874  041B                     	;# 
  2875  041B                     	;# 
  2876  041C                     	;# 
  2877  041D                     	;# 
  2878  041E                     	;# 
  2879  041F                     	;# 
  2880  0493                     	;# 
  2881  0494                     	;# 
  2882  0495                     	;# 
  2883  0496                     	;# 
  2884  049A                     	;# 
  2885  049B                     	;# 
  2886  049C                     	;# 
  2887  049D                     	;# 
  2888  058C                     	;# 
  2889  058C                     	;# 
  2890  058D                     	;# 
  2891  058E                     	;# 
  2892  058E                     	;# 
  2893  058F                     	;# 
  2894  0590                     	;# 
  2895  0590                     	;# 
  2896  0591                     	;# 
  2897  0592                     	;# 
  2898  0592                     	;# 
  2899  0593                     	;# 
  2900  0594                     	;# 
  2901  0594                     	;# 
  2902  0595                     	;# 
  2903  0596                     	;# 
  2904  0596                     	;# 
  2905  0597                     	;# 
  2906  0598                     	;# 
  2907  0599                     	;# 
  2908  059A                     	;# 
  2909  059B                     	;# 
  2910  059B                     	;# 
  2911  059C                     	;# 
  2912  059D                     	;# 
  2913  060C                     	;# 
  2914  060C                     	;# 
  2915  060D                     	;# 
  2916  060E                     	;# 
  2917  060F                     	;# 
  2918  060F                     	;# 
  2919  0610                     	;# 
  2920  0611                     	;# 
  2921  0612                     	;# 
  2922  0613                     	;# 
  2923  0614                     	;# 
  2924  0617                     	;# 
  2925  0618                     	;# 
  2926  0619                     	;# 
  2927  061A                     	;# 
  2928  061B                     	;# 
  2929  061C                     	;# 
  2930  0691                     	;# 
  2931  0692                     	;# 
  2932  0693                     	;# 
  2933  0694                     	;# 
  2934  0695                     	;# 
  2935  0696                     	;# 
  2936  0697                     	;# 
  2937  0699                     	;# 
  2938  069A                     	;# 
  2939  0711                     	;# 
  2940  0712                     	;# 
  2941  0713                     	;# 
  2942  0714                     	;# 
  2943  0715                     	;# 
  2944  0718                     	;# 
  2945  0718                     	;# 
  2946  0719                     	;# 
  2947  071A                     	;# 
  2948  071A                     	;# 
  2949  071B                     	;# 
  2950  071C                     	;# 
  2951  071D                     	;# 
  2952  0791                     	;# 
  2953  0791                     	;# 
  2954  0792                     	;# 
  2955  0793                     	;# 
  2956  0793                     	;# 
  2957  0794                     	;# 
  2958  0795                     	;# 
  2959  0795                     	;# 
  2960  0796                     	;# 
  2961  0797                     	;# 
  2962  0797                     	;# 
  2963  0798                     	;# 
  2964  0799                     	;# 
  2965  079A                     	;# 
  2966  080C                     	;# 
  2967  080C                     	;# 
  2968  080D                     	;# 
  2969  080E                     	;# 
  2970  080E                     	;# 
  2971  080F                     	;# 
  2972  0810                     	;# 
  2973  0810                     	;# 
  2974  0811                     	;# 
  2975  0812                     	;# 
  2976  0812                     	;# 
  2977  0813                     	;# 
  2978  0814                     	;# 
  2979  0815                     	;# 
  2980  0816                     	;# 
  2981  0817                     	;# 
  2982  0818                     	;# 
  2983  0819                     	;# 
  2984  081A                     	;# 
  2985  081A                     	;# 
  2986  081B                     	;# 
  2987  081C                     	;# 
  2988  081C                     	;# 
  2989  081D                     	;# 
  2990  088C                     	;# 
  2991  088D                     	;# 
  2992  088E                     	;# 
  2993  088F                     	;# 
  2994  088F                     	;# 
  2995  0890                     	;# 
  2996  0891                     	;# 
  2997  0892                     	;# 
  2998  0893                     	;# 
  2999  0893                     	;# 
  3000  0894                     	;# 
  3001  0895                     	;# 
  3002  0896                     	;# 
  3003  0897                     	;# 
  3004  0897                     	;# 
  3005  0898                     	;# 
  3006  0899                     	;# 
  3007  0D8C                     	;# 
  3008  0D8C                     	;# 
  3009  0D8D                     	;# 
  3010  0D8E                     	;# 
  3011  0D8F                     	;# 
  3012  0D8F                     	;# 
  3013  0D90                     	;# 
  3014  0D91                     	;# 
  3015  0D92                     	;# 
  3016  0D92                     	;# 
  3017  0D93                     	;# 
  3018  0D94                     	;# 
  3019  0D95                     	;# 
  3020  0D95                     	;# 
  3021  0D96                     	;# 
  3022  0D97                     	;# 
  3023  0D98                     	;# 
  3024  0D99                     	;# 
  3025  0D9A                     	;# 
  3026  0D9B                     	;# 
  3027  0D9C                     	;# 
  3028  0D9D                     	;# 
  3029  0D9E                     	;# 
  3030  0D9E                     	;# 
  3031  0D9F                     	;# 
  3032  0DA0                     	;# 
  3033  0DA1                     	;# 
  3034  0DA1                     	;# 
  3035  0DA2                     	;# 
  3036  0DA3                     	;# 
  3037  0DA4                     	;# 
  3038  0DA4                     	;# 
  3039  0DA5                     	;# 
  3040  0DA6                     	;# 
  3041  0DA7                     	;# 
  3042  0DA7                     	;# 
  3043  0DA8                     	;# 
  3044  0DA9                     	;# 
  3045  0DAA                     	;# 
  3046  0DAB                     	;# 
  3047  0DAC                     	;# 
  3048  0DAD                     	;# 
  3049  0DAE                     	;# 
  3050  0DAF                     	;# 
  3051  0E0F                     	;# 
  3052  0E10                     	;# 
  3053  0E11                     	;# 
  3054  0E12                     	;# 
  3055  0E13                     	;# 
  3056  0E14                     	;# 
  3057  0E15                     	;# 
  3058  0E16                     	;# 
  3059  0E17                     	;# 
  3060  0E18                     	;# 
  3061  0E19                     	;# 
  3062  0E1A                     	;# 
  3063  0E1B                     	;# 
  3064  0E1C                     	;# 
  3065  0E1D                     	;# 
  3066  0E1E                     	;# 
  3067  0E1F                     	;# 
  3068  0E20                     	;# 
  3069  0E21                     	;# 
  3070  0E22                     	;# 
  3071  0E23                     	;# 
  3072  0E24                     	;# 
  3073  0E25                     	;# 
  3074  0E26                     	;# 
  3075  0E27                     	;# 
  3076  0E28                     	;# 
  3077  0E29                     	;# 
  3078  0E2A                     	;# 
  3079  0E2B                     	;# 
  3080  0E2C                     	;# 
  3081  0E2D                     	;# 
  3082  0E2E                     	;# 
  3083  0E90                     	;# 
  3084  0E91                     	;# 
  3085  0E92                     	;# 
  3086  0E94                     	;# 
  3087  0E95                     	;# 
  3088  0E9C                     	;# 
  3089  0E9D                     	;# 
  3090  0E9E                     	;# 
  3091  0E9F                     	;# 
  3092  0EA0                     	;# 
  3093  0EA1                     	;# 
  3094  0EA2                     	;# 
  3095  0EA3                     	;# 
  3096  0EA4                     	;# 
  3097  0EA5                     	;# 
  3098  0EA6                     	;# 
  3099  0EA7                     	;# 
  3100  0F0F                     	;# 
  3101  0F10                     	;# 
  3102  0F11                     	;# 
  3103  0F12                     	;# 
  3104  0F13                     	;# 
  3105  0F14                     	;# 
  3106  0F15                     	;# 
  3107  0F16                     	;# 
  3108  0F17                     	;# 
  3109  0F18                     	;# 
  3110  0F19                     	;# 
  3111  0F1A                     	;# 
  3112  0F1B                     	;# 
  3113  0F1C                     	;# 
  3114  0F1D                     	;# 
  3115  0F1E                     	;# 
  3116  0F1F                     	;# 
  3117  0F20                     	;# 
  3118  0F21                     	;# 
  3119  0F22                     	;# 
  3120  0F23                     	;# 
  3121  0F24                     	;# 
  3122  0F25                     	;# 
  3123  0F26                     	;# 
  3124  0F27                     	;# 
  3125  0F28                     	;# 
  3126  0F29                     	;# 
  3127  0F2A                     	;# 
  3128  0F2B                     	;# 
  3129  0F2C                     	;# 
  3130  0F2D                     	;# 
  3131  0F2E                     	;# 
  3132  0F2F                     	;# 
  3133  0F30                     	;# 
  3134  0F31                     	;# 
  3135  0F32                     	;# 
  3136  0F33                     	;# 
  3137  0F34                     	;# 
  3138  0F35                     	;# 
  3139  0F36                     	;# 
  3140  0F37                     	;# 
  3141  0FE4                     	;# 
  3142  0FE5                     	;# 
  3143  0FE6                     	;# 
  3144  0FE7                     	;# 
  3145  0FE8                     	;# 
  3146  0FE9                     	;# 
  3147  0FEA                     	;# 
  3148  0FEB                     	;# 
  3149  0FED                     	;# 
  3150  0FEE                     	;# 
  3151  0FEF                     	;# 
  3152  0000                     	;# 
  3153  0001                     	;# 
  3154  0002                     	;# 
  3155  0003                     	;# 
  3156  0004                     	;# 
  3157  0005                     	;# 
  3158  0006                     	;# 
  3159  0007                     	;# 
  3160  0008                     	;# 
  3161  0009                     	;# 
  3162  000A                     	;# 
  3163  000B                     	;# 
  3164  000C                     	;# 
  3165  000D                     	;# 
  3166  000E                     	;# 
  3167  0010                     	;# 
  3168  0011                     	;# 
  3169  0012                     	;# 
  3170  0013                     	;# 
  3171  0014                     	;# 
  3172  0015                     	;# 
  3173  0016                     	;# 
  3174  0016                     	;# 
  3175  0017                     	;# 
  3176  0018                     	;# 
  3177  0019                     	;# 
  3178  001A                     	;# 
  3179  001A                     	;# 
  3180  001B                     	;# 
  3181  001B                     	;# 
  3182  001C                     	;# 
  3183  001D                     	;# 
  3184  001E                     	;# 
  3185  001F                     	;# 
  3186  008C                     	;# 
  3187  008D                     	;# 
  3188  008E                     	;# 
  3189  0090                     	;# 
  3190  0091                     	;# 
  3191  0092                     	;# 
  3192  0093                     	;# 
  3193  0094                     	;# 
  3194  0095                     	;# 
  3195  0096                     	;# 
  3196  0098                     	;# 
  3197  0099                     	;# 
  3198  009A                     	;# 
  3199  009B                     	;# 
  3200  009B                     	;# 
  3201  009C                     	;# 
  3202  009D                     	;# 
  3203  009E                     	;# 
  3204  009F                     	;# 
  3205  010C                     	;# 
  3206  010D                     	;# 
  3207  010E                     	;# 
  3208  0111                     	;# 
  3209  0112                     	;# 
  3210  0113                     	;# 
  3211  0114                     	;# 
  3212  0115                     	;# 
  3213  0116                     	;# 
  3214  0117                     	;# 
  3215  0118                     	;# 
  3216  0119                     	;# 
  3217  011C                     	;# 
  3218  018C                     	;# 
  3219  018D                     	;# 
  3220  018E                     	;# 
  3221  0191                     	;# 
  3222  0191                     	;# 
  3223  0192                     	;# 
  3224  0193                     	;# 
  3225  0193                     	;# 
  3226  0194                     	;# 
  3227  0195                     	;# 
  3228  0196                     	;# 
  3229  0197                     	;# 
  3230  0199                     	;# 
  3231  0199                     	;# 
  3232  0199                     	;# 
  3233  019A                     	;# 
  3234  019A                     	;# 
  3235  019A                     	;# 
  3236  019B                     	;# 
  3237  019B                     	;# 
  3238  019B                     	;# 
  3239  019B                     	;# 
  3240  019B                     	;# 
  3241  019C                     	;# 
  3242  019C                     	;# 
  3243  019C                     	;# 
  3244  019D                     	;# 
  3245  019D                     	;# 
  3246  019D                     	;# 
  3247  019E                     	;# 
  3248  019E                     	;# 
  3249  019E                     	;# 
  3250  019F                     	;# 
  3251  019F                     	;# 
  3252  019F                     	;# 
  3253  019F                     	;# 
  3254  019F                     	;# 
  3255  020C                     	;# 
  3256  020D                     	;# 
  3257  020E                     	;# 
  3258  0211                     	;# 
  3259  0211                     	;# 
  3260  0212                     	;# 
  3261  0212                     	;# 
  3262  0213                     	;# 
  3263  0213                     	;# 
  3264  0214                     	;# 
  3265  0214                     	;# 
  3266  0215                     	;# 
  3267  0215                     	;# 
  3268  0215                     	;# 
  3269  0215                     	;# 
  3270  0216                     	;# 
  3271  0216                     	;# 
  3272  0217                     	;# 
  3273  0217                     	;# 
  3274  028C                     	;# 
  3275  028D                     	;# 
  3276  028E                     	;# 
  3277  0291                     	;# 
  3278  0291                     	;# 
  3279  0292                     	;# 
  3280  0293                     	;# 
  3281  0294                     	;# 
  3282  0298                     	;# 
  3283  0298                     	;# 
  3284  0299                     	;# 
  3285  029A                     	;# 
  3286  029B                     	;# 
  3287  029E                     	;# 
  3288  030C                     	;# 
  3289  030D                     	;# 
  3290  030E                     	;# 
  3291  038C                     	;# 
  3292  038D                     	;# 
  3293  038E                     	;# 
  3294  0391                     	;# 
  3295  0392                     	;# 
  3296  0393                     	;# 
  3297  0394                     	;# 
  3298  0395                     	;# 
  3299  0396                     	;# 
  3300  0397                     	;# 
  3301  0398                     	;# 
  3302  0399                     	;# 
  3303  040E                     	;# 
  3304  0413                     	;# 
  3305  0413                     	;# 
  3306  0414                     	;# 
  3307  0414                     	;# 
  3308  0415                     	;# 
  3309  0416                     	;# 
  3310  0417                     	;# 
  3311  0418                     	;# 
  3312  041A                     	;# 
  3313  041A                     	;# 
  3314  041B                     	;# 
  3315  041B                     	;# 
  3316  041C                     	;# 
  3317  041D                     	;# 
  3318  041E                     	;# 
  3319  041F                     	;# 
  3320  0493                     	;# 
  3321  0494                     	;# 
  3322  0495                     	;# 
  3323  0496                     	;# 
  3324  049A                     	;# 
  3325  049B                     	;# 
  3326  049C                     	;# 
  3327  049D                     	;# 
  3328  058C                     	;# 
  3329  058C                     	;# 
  3330  058D                     	;# 
  3331  058E                     	;# 
  3332  058E                     	;# 
  3333  058F                     	;# 
  3334  0590                     	;# 
  3335  0590                     	;# 
  3336  0591                     	;# 
  3337  0592                     	;# 
  3338  0592                     	;# 
  3339  0593                     	;# 
  3340  0594                     	;# 
  3341  0594                     	;# 
  3342  0595                     	;# 
  3343  0596                     	;# 
  3344  0596                     	;# 
  3345  0597                     	;# 
  3346  0598                     	;# 
  3347  0599                     	;# 
  3348  059A                     	;# 
  3349  059B                     	;# 
  3350  059B                     	;# 
  3351  059C                     	;# 
  3352  059D                     	;# 
  3353  060C                     	;# 
  3354  060C                     	;# 
  3355  060D                     	;# 
  3356  060E                     	;# 
  3357  060F                     	;# 
  3358  060F                     	;# 
  3359  0610                     	;# 
  3360  0611                     	;# 
  3361  0612                     	;# 
  3362  0613                     	;# 
  3363  0614                     	;# 
  3364  0617                     	;# 
  3365  0618                     	;# 
  3366  0619                     	;# 
  3367  061A                     	;# 
  3368  061B                     	;# 
  3369  061C                     	;# 
  3370  0691                     	;# 
  3371  0692                     	;# 
  3372  0693                     	;# 
  3373  0694                     	;# 
  3374  0695                     	;# 
  3375  0696                     	;# 
  3376  0697                     	;# 
  3377  0699                     	;# 
  3378  069A                     	;# 
  3379  0711                     	;# 
  3380  0712                     	;# 
  3381  0713                     	;# 
  3382  0714                     	;# 
  3383  0715                     	;# 
  3384  0718                     	;# 
  3385  0718                     	;# 
  3386  0719                     	;# 
  3387  071A                     	;# 
  3388  071A                     	;# 
  3389  071B                     	;# 
  3390  071C                     	;# 
  3391  071D                     	;# 
  3392  0791                     	;# 
  3393  0791                     	;# 
  3394  0792                     	;# 
  3395  0793                     	;# 
  3396  0793                     	;# 
  3397  0794                     	;# 
  3398  0795                     	;# 
  3399  0795                     	;# 
  3400  0796                     	;# 
  3401  0797                     	;# 
  3402  0797                     	;# 
  3403  0798                     	;# 
  3404  0799                     	;# 
  3405  079A                     	;# 
  3406  080C                     	;# 
  3407  080C                     	;# 
  3408  080D                     	;# 
  3409  080E                     	;# 
  3410  080E                     	;# 
  3411  080F                     	;# 
  3412  0810                     	;# 
  3413  0810                     	;# 
  3414  0811                     	;# 
  3415  0812                     	;# 
  3416  0812                     	;# 
  3417  0813                     	;# 
  3418  0814                     	;# 
  3419  0815                     	;# 
  3420  0816                     	;# 
  3421  0817                     	;# 
  3422  0818                     	;# 
  3423  0819                     	;# 
  3424  081A                     	;# 
  3425  081A                     	;# 
  3426  081B                     	;# 
  3427  081C                     	;# 
  3428  081C                     	;# 
  3429  081D                     	;# 
  3430  088C                     	;# 
  3431  088D                     	;# 
  3432  088E                     	;# 
  3433  088F                     	;# 
  3434  088F                     	;# 
  3435  0890                     	;# 
  3436  0891                     	;# 
  3437  0892                     	;# 
  3438  0893                     	;# 
  3439  0893                     	;# 
  3440  0894                     	;# 
  3441  0895                     	;# 
  3442  0896                     	;# 
  3443  0897                     	;# 
  3444  0897                     	;# 
  3445  0898                     	;# 
  3446  0899                     	;# 
  3447  0D8C                     	;# 
  3448  0D8C                     	;# 
  3449  0D8D                     	;# 
  3450  0D8E                     	;# 
  3451  0D8F                     	;# 
  3452  0D8F                     	;# 
  3453  0D90                     	;# 
  3454  0D91                     	;# 
  3455  0D92                     	;# 
  3456  0D92                     	;# 
  3457  0D93                     	;# 
  3458  0D94                     	;# 
  3459  0D95                     	;# 
  3460  0D95                     	;# 
  3461  0D96                     	;# 
  3462  0D97                     	;# 
  3463  0D98                     	;# 
  3464  0D99                     	;# 
  3465  0D9A                     	;# 
  3466  0D9B                     	;# 
  3467  0D9C                     	;# 
  3468  0D9D                     	;# 
  3469  0D9E                     	;# 
  3470  0D9E                     	;# 
  3471  0D9F                     	;# 
  3472  0DA0                     	;# 
  3473  0DA1                     	;# 
  3474  0DA1                     	;# 
  3475  0DA2                     	;# 
  3476  0DA3                     	;# 
  3477  0DA4                     	;# 
  3478  0DA4                     	;# 
  3479  0DA5                     	;# 
  3480  0DA6                     	;# 
  3481  0DA7                     	;# 
  3482  0DA7                     	;# 
  3483  0DA8                     	;# 
  3484  0DA9                     	;# 
  3485  0DAA                     	;# 
  3486  0DAB                     	;# 
  3487  0DAC                     	;# 
  3488  0DAD                     	;# 
  3489  0DAE                     	;# 
  3490  0DAF                     	;# 
  3491  0E0F                     	;# 
  3492  0E10                     	;# 
  3493  0E11                     	;# 
  3494  0E12                     	;# 
  3495  0E13                     	;# 
  3496  0E14                     	;# 
  3497  0E15                     	;# 
  3498  0E16                     	;# 
  3499  0E17                     	;# 
  3500  0E18                     	;# 
  3501  0E19                     	;# 
  3502  0E1A                     	;# 
  3503  0E1B                     	;# 
  3504  0E1C                     	;# 
  3505  0E1D                     	;# 
  3506  0E1E                     	;# 
  3507  0E1F                     	;# 
  3508  0E20                     	;# 
  3509  0E21                     	;# 
  3510  0E22                     	;# 
  3511  0E23                     	;# 
  3512  0E24                     	;# 
  3513  0E25                     	;# 
  3514  0E26                     	;# 
  3515  0E27                     	;# 
  3516  0E28                     	;# 
  3517  0E29                     	;# 
  3518  0E2A                     	;# 
  3519  0E2B                     	;# 
  3520  0E2C                     	;# 
  3521  0E2D                     	;# 
  3522  0E2E                     	;# 
  3523  0E90                     	;# 
  3524  0E91                     	;# 
  3525  0E92                     	;# 
  3526  0E94                     	;# 
  3527  0E95                     	;# 
  3528  0E9C                     	;# 
  3529  0E9D                     	;# 
  3530  0E9E                     	;# 
  3531  0E9F                     	;# 
  3532  0EA0                     	;# 
  3533  0EA1                     	;# 
  3534  0EA2                     	;# 
  3535  0EA3                     	;# 
  3536  0EA4                     	;# 
  3537  0EA5                     	;# 
  3538  0EA6                     	;# 
  3539  0EA7                     	;# 
  3540  0F0F                     	;# 
  3541  0F10                     	;# 
  3542  0F11                     	;# 
  3543  0F12                     	;# 
  3544  0F13                     	;# 
  3545  0F14                     	;# 
  3546  0F15                     	;# 
  3547  0F16                     	;# 
  3548  0F17                     	;# 
  3549  0F18                     	;# 
  3550  0F19                     	;# 
  3551  0F1A                     	;# 
  3552  0F1B                     	;# 
  3553  0F1C                     	;# 
  3554  0F1D                     	;# 
  3555  0F1E                     	;# 
  3556  0F1F                     	;# 
  3557  0F20                     	;# 
  3558  0F21                     	;# 
  3559  0F22                     	;# 
  3560  0F23                     	;# 
  3561  0F24                     	;# 
  3562  0F25                     	;# 
  3563  0F26                     	;# 
  3564  0F27                     	;# 
  3565  0F28                     	;# 
  3566  0F29                     	;# 
  3567  0F2A                     	;# 
  3568  0F2B                     	;# 
  3569  0F2C                     	;# 
  3570  0F2D                     	;# 
  3571  0F2E                     	;# 
  3572  0F2F                     	;# 
  3573  0F30                     	;# 
  3574  0F31                     	;# 
  3575  0F32                     	;# 
  3576  0F33                     	;# 
  3577  0F34                     	;# 
  3578  0F35                     	;# 
  3579  0F36                     	;# 
  3580  0F37                     	;# 
  3581  0FE4                     	;# 
  3582  0FE5                     	;# 
  3583  0FE6                     	;# 
  3584  0FE7                     	;# 
  3585  0FE8                     	;# 
  3586  0FE9                     	;# 
  3587  0FEA                     	;# 
  3588  0FEB                     	;# 
  3589  0FED                     	;# 
  3590  0FEE                     	;# 
  3591  0FEF                     	;# 
  3592                           
  3593                           	psect	nvBANK0
  3594  005F                     __pnvBANK0:	
  3595  005F                     _TMR0_InterruptHandler:	
  3596  005F                     	ds	2
  3597  0061                     _timer0ReloadVal:	
  3598  0061                     	ds	1
  3599  0011                     _PIR2bits	set	17
  3600  0015                     _TMR0	set	21
  3601  0010                     _PIR1bits	set	16
  3602  000B                     _INTCONbits	set	11
  3603  0090                     _PIE1bits	set	144
  3604  0091                     _PIE2bits	set	145
  3605  0098                     _OSCTUNE	set	152
  3606  0099                     _OSCCON	set	153
  3607  0095                     _OPTION_REGbits	set	149
  3608  008E                     _TRISC	set	142
  3609  008D                     _TRISB	set	141
  3610  008C                     _TRISA	set	140
  3611  0095                     _OPTION_REG	set	149
  3612  0116                     _BORCON	set	278
  3613  010E                     _LATC	set	270
  3614  010D                     _LATB	set	269
  3615  010C                     _LATA	set	268
  3616  010E                     _LATCbits	set	270
  3617  0199                     _RC1REG	set	409
  3618  019D                     _RC1STAbits	set	413
  3619  019A                     _TX1REG	set	410
  3620  019C                     _SPBRGH	set	412
  3621  019B                     _SPBRGL	set	411
  3622  019E                     _TX1STA	set	414
  3623  019D                     _RC1STA	set	413
  3624  019F                     _BAUD1CON	set	415
  3625  018C                     _ANSELA	set	396
  3626  018D                     _ANSELB	set	397
  3627  018E                     _ANSELC	set	398
  3628  0215                     _SSP1CON1bits	set	533
  3629  0212                     _SSP1ADD	set	530
  3630  0217                     _SSP1CON3	set	535
  3631  0215                     _SSP1CON1	set	533
  3632  0214                     _SSP1STAT	set	532
  3633  020E                     _WPUC	set	526
  3634  020C                     _WPUA	set	524
  3635  020D                     _WPUB	set	525
  3636  0211                     _SSPBUF	set	529
  3637  0214                     _SSP1STATbits	set	532
  3638  0211                     _SSP1BUF	set	529
  3639  0216                     _SSP1CON2bits	set	534
  3640  028E                     _ODCONC	set	654
  3641  028D                     _ODCONB	set	653
  3642  028C                     _ODCONA	set	652
  3643  0391                     _IOCAPbits	set	913
  3644  0392                     _IOCANbits	set	914
  3645  0393                     _IOCAFbits	set	915
  3646  0E21                     _SSPDATPPS	set	3617
  3647  0E20                     _SSPCLKPPS	set	3616
  3648  0E24                     _RXPPS	set	3620
  3649  0E9C                     _RB4PPS	set	3740
  3650  0E9E                     _RB6PPS	set	3742
  3651  0E9F                     _RB7PPS	set	3743
  3652                           
  3653                           ; #config settings
  3654  0000                     
  3655                           	psect	cinit
  3656  0031                     start_initialization:	
  3657  0031                     __initialization:	
  3658                           
  3659                           ; Clear objects allocated to BANK0
  3660  0031  3020               	movlw	low __pbssBANK0
  3661  0032  0084               	movwf	4
  3662  0033  3000               	movlw	high __pbssBANK0
  3663  0034  0085               	movwf	5
  3664  0035  3026               	movlw	38
  3665  0036  3183  23A0  3180   	fcall	clear_ram0
  3666                           
  3667                           ; Clear objects allocated to BANK1
  3668  0039  30AE               	movlw	low __pbssBANK1
  3669  003A  0084               	movwf	4
  3670  003B  3000               	movlw	high __pbssBANK1
  3671  003C  0085               	movwf	5
  3672  003D  3007               	movlw	7
  3673  003E  3183  23A0         	fcall	clear_ram0
  3674  0040                     end_of_initialization:	
  3675                           ;End of C runtime variable initialization code
  3676                           
  3677  0040                     __end_of__initialization:	
  3678  0040  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3679  0041  0020               	movlb	0
  3680  0042  3183  2B4C         	ljmp	_main	;jump to C main() function
  3681                           
  3682                           	psect	bssBANK0
  3683  0020                     __pbssBANK0:	
  3684  0020                     _i2c_object:	
  3685  0020                     	ds	5
  3686  0025                     SPI_Read@F12027:	
  3687  0025                     	ds	4
  3688  0029                     ADXL345_SetRegisterValue@F96:	
  3689  0029                     	ds	2
  3690  002B                     ADXL345_GetRegisterValue@F91:	
  3691  002B                     	ds	2
  3692  002D                     TMR0_ISR@CountCallBack:	
  3693  002D                     	ds	2
  3694  002F                     _fullResolutionSet:	
  3695  002F                     	ds	1
  3696  0030                     _selectedRange:	
  3697  0030                     	ds	1
  3698  0031                     _communicationType:	
  3699  0031                     	ds	1
  3700  0032                     I2C_ISR@i2c_10bit_address_restart:	
  3701  0032                     	ds	1
  3702  0033                     I2C_ISR@i2c_bytes_left:	
  3703  0033                     	ds	1
  3704  0034                     I2C_ISR@pi2c_buf_ptr:	
  3705  0034                     	ds	1
  3706  0035                     _p_i2c_current:	
  3707  0035                     	ds	1
  3708  0036                     _p_i2c_trb_current:	
  3709  0036                     	ds	1
  3710  0037                     _i2c_trb_count:	
  3711  0037                     	ds	1
  3712  0038                     _i2c_state:	
  3713  0038                     	ds	1
  3714  0039                     I2C_MasterRead@trBlock:	
  3715  0039                     	ds	4
  3716  003D                     I2C_MasterWrite@trBlock:	
  3717  003D                     	ds	4
  3718  0041                     _i2c_tr_queue:	
  3719  0041                     	ds	3
  3720  0044                     I2C_ISR@i2c_address:	
  3721  0044                     	ds	2
  3722                           
  3723                           	psect	bssBANK1
  3724  00AE                     __pbssBANK1:	
  3725  00AE                     ADXL345_GetXyz@F107:	
  3726  00AE                     	ds	7
  3727                           
  3728                           	psect	clrtext
  3729  03A0                     clear_ram0:	
  3730                           ;	Called with FSR0 containing the base address, and
  3731                           ;	WREG with the size to clear
  3732                           
  3733  03A0  0064               	clrwdt	;clear the watchdog before getting into this loop
  3734  03A1                     clrloop0:	
  3735  03A1  0180               	clrf	0	;clear RAM location pointed to by FSR
  3736  03A2  3101               	addfsr 0,1
  3737  03A3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3738  03A4  2BA1               	goto	clrloop0	;have we reached the end yet?
  3739  03A5  3400               	retlw	0	;all done for this memory range, return
  3740                           
  3741                           	psect	cstackBANK1
  3742  00A0                     __pcstackBANK1:	
  3743  00A0                     main@AccelX:	
  3744                           
  3745                           ; 2 bytes @ 0x0
  3746  00A0                     	ds	2
  3747  00A2                     main@AccelY:	
  3748                           
  3749                           ; 2 bytes @ 0x2
  3750  00A2                     	ds	2
  3751  00A4                     main@AccelZ:	
  3752                           
  3753                           ; 2 bytes @ 0x4
  3754  00A4                     	ds	2
  3755  00A6                     main@AccelXtemp:	
  3756                           
  3757                           ; 2 bytes @ 0x6
  3758  00A6                     	ds	2
  3759  00A8                     main@AccelYtemp:	
  3760                           
  3761                           ; 2 bytes @ 0x8
  3762  00A8                     	ds	2
  3763  00AA                     main@AccelZtemp:	
  3764                           
  3765                           ; 2 bytes @ 0xA
  3766  00AA                     	ds	2
  3767  00AC                     main@i2cStatus:	
  3768                           
  3769                           ; 1 bytes @ 0xC
  3770  00AC                     	ds	1
  3771  00AD                     main@counter:	
  3772                           
  3773                           ; 1 bytes @ 0xD
  3774  00AD                     	ds	1
  3775                           
  3776                           	psect	cstackCOMMON
  3777  0070                     __pcstackCOMMON:	
  3778  0070                     ?_SYSTEM_Initialize:	
  3779  0070                     ?_ADXL345_Init:	
  3780                           ; 1 bytes @ 0x0
  3781                           
  3782  0070                     ?_TMR0_DefaultInterruptHandler:	
  3783                           ; 1 bytes @ 0x0
  3784                           
  3785  0070                     ??_TMR0_DefaultInterruptHandler:	
  3786                           ; 1 bytes @ 0x0
  3787                           
  3788  0070                     ?_TMR0_CallBack:	
  3789                           ; 1 bytes @ 0x0
  3790                           
  3791  0070                     ?_ADXL345_GetRegisterValue:	
  3792                           ; 1 bytes @ 0x0
  3793                           
  3794  0070                     ?_IOCAF2_ISR:	
  3795                           ; 1 bytes @ 0x0
  3796                           
  3797  0070                     ??_IOCAF2_ISR:	
  3798                           ; 1 bytes @ 0x0
  3799                           
  3800  0070                     ?_OSCILLATOR_Initialize:	
  3801                           ; 1 bytes @ 0x0
  3802                           
  3803  0070                     ?_I2C_BusCollisionISR:	
  3804                           ; 1 bytes @ 0x0
  3805                           
  3806  0070                     ??_I2C_BusCollisionISR:	
  3807                           ; 1 bytes @ 0x0
  3808                           
  3809  0070                     ?_main:	
  3810                           ; 1 bytes @ 0x0
  3811                           
  3812  0070                     ?_TMR0_Initialize:	
  3813                           ; 1 bytes @ 0x0
  3814                           
  3815  0070                     ?_TMR0_ISR:	
  3816                           ; 1 bytes @ 0x0
  3817                           
  3818  0070                     ?_PIN_MANAGER_Initialize:	
  3819                           ; 1 bytes @ 0x0
  3820                           
  3821  0070                     ?_PIN_MANAGER_IOC:	
  3822                           ; 1 bytes @ 0x0
  3823                           
  3824  0070                     ??_PIN_MANAGER_IOC:	
  3825                           ; 1 bytes @ 0x0
  3826                           
  3827  0070                     ?_INTERRUPT_InterruptManager:	
  3828                           ; 1 bytes @ 0x0
  3829                           
  3830  0070                     ?i1_ADXL345_GetRegisterValue:	
  3831                           ; 1 bytes @ 0x0
  3832                           
  3833  0070                     ?i1_I2C_Write:	
  3834                           ; 1 bytes @ 0x0
  3835                           
  3836  0070                     ?i1_I2C_Read:	
  3837                           ; 1 bytes @ 0x0
  3838                           
  3839  0070                     ?i1_SPI_Read:	
  3840                           ; 1 bytes @ 0x0
  3841                           
  3842  0070                     SPI_Init@lsbFirst:	
  3843                           ; 1 bytes @ 0x0
  3844                           
  3845  0070                     i1I2C_Write@dataBuffer:	
  3846                           ; 1 bytes @ 0x0
  3847                           
  3848  0070                     i1I2C_Read@dataBuffer:	
  3849                           ; 1 bytes @ 0x0
  3850                           
  3851  0070                     i1SPI_Read@data:	
  3852                           ; 1 bytes @ 0x0
  3853                           
  3854                           
  3855                           ; 1 bytes @ 0x0
  3856  0070                     	ds	1
  3857  0071                     i1I2C_Write@bytesNumber:	
  3858  0071                     i1I2C_Read@bytesNumber:	
  3859                           ; 1 bytes @ 0x1
  3860                           
  3861  0071                     i1SPI_Read@bytesNumber:	
  3862                           ; 1 bytes @ 0x1
  3863                           
  3864                           
  3865                           ; 1 bytes @ 0x1
  3866  0071                     	ds	1
  3867  0072                     ??i1_SPI_Read:	
  3868  0072                     i1I2C_Write@stopBit:	
  3869                           ; 1 bytes @ 0x2
  3870                           
  3871  0072                     i1I2C_Read@stopBit:	
  3872                           ; 1 bytes @ 0x2
  3873                           
  3874                           
  3875                           ; 1 bytes @ 0x2
  3876  0072                     	ds	1
  3877  0073                     ??i1_I2C_Write:	
  3878  0073                     ??i1_I2C_Read:	
  3879                           ; 1 bytes @ 0x3
  3880                           
  3881                           
  3882                           ; 1 bytes @ 0x3
  3883  0073                     	ds	1
  3884  0074                     i1I2C_Write@status:	
  3885  0074                     i1SPI_Read@writeBuffer:	
  3886                           ; 1 bytes @ 0x4
  3887                           
  3888                           
  3889                           ; 4 bytes @ 0x4
  3890  0074                     	ds	1
  3891  0075                     i1I2C_Write@slaveAddress:	
  3892  0075                     i1I2C_Read@status:	
  3893                           ; 1 bytes @ 0x5
  3894                           
  3895                           
  3896                           ; 1 bytes @ 0x5
  3897  0075                     	ds	1
  3898  0076                     i1I2C_Write@acknowledge:	
  3899  0076                     i1I2C_Read@slaveAddress:	
  3900                           ; 1 bytes @ 0x6
  3901                           
  3902                           
  3903                           ; 1 bytes @ 0x6
  3904  0076                     	ds	1
  3905  0077                     i1I2C_Write@byte:	
  3906  0077                     i1I2C_Read@acknowledge:	
  3907                           ; 1 bytes @ 0x7
  3908                           
  3909                           
  3910                           ; 1 bytes @ 0x7
  3911  0077                     	ds	1
  3912  0078                     i1I2C_Read@byte:	
  3913  0078                     i1SPI_Read@slaveDeviceId:	
  3914                           ; 1 bytes @ 0x8
  3915                           
  3916                           
  3917                           ; 1 bytes @ 0x8
  3918  0078                     	ds	1
  3919  0079                     i1SPI_Read@byte:	
  3920                           
  3921                           ; 1 bytes @ 0x9
  3922  0079                     	ds	1
  3923  007A                     ??i1_ADXL345_GetRegisterValue:	
  3924                           
  3925                           ; 1 bytes @ 0xA
  3926  007A                     	ds	2
  3927  007C                     ??_TMR0_CallBack:	
  3928                           
  3929                           ; 1 bytes @ 0xC
  3930  007C                     	ds	1
  3931  007D                     TMR0_CallBack@DeviceID:	
  3932                           
  3933                           ; 1 bytes @ 0xD
  3934  007D                     	ds	1
  3935  007E                     ??_TMR0_ISR:	
  3936                           
  3937                           	psect	cstackBANK0
  3938  0046                     __pcstackBANK0:	
  3939                           ; 1 bytes @ 0xE
  3940                           
  3941  0046                     i1ADXL345_GetRegisterValue@dataBuffer:	
  3942                           
  3943                           ; 2 bytes @ 0x0
  3944  0046                     	ds	2
  3945  0048                     i1ADXL345_GetRegisterValue@registerAddress:	
  3946                           
  3947                           ; 1 bytes @ 0x2
  3948  0048                     	ds	1
  3949  0049                     i1ADXL345_GetRegisterValue@registerValue:	
  3950                           
  3951                           ; 1 bytes @ 0x3
  3952  0049                     	ds	1
  3953  004A                     ??_INTERRUPT_InterruptManager:	
  3954                           
  3955                           ; 1 bytes @ 0x4
  3956  004A                     	ds	1
  3957  004B                     ?_TMR0_SetInterruptHandler:	
  3958  004B                     ??_OSCILLATOR_Initialize:	
  3959                           ; 1 bytes @ 0x5
  3960                           
  3961  004B                     ?_SPI_Read:	
  3962                           ; 1 bytes @ 0x5
  3963                           
  3964  004B                     ?_I2C_Write:	
  3965                           ; 1 bytes @ 0x5
  3966                           
  3967  004B                     ?_I2C_Read:	
  3968                           ; 1 bytes @ 0x5
  3969                           
  3970  004B                     ?_SPI_Init:	
  3971                           ; 1 bytes @ 0x5
  3972                           
  3973  004B                     ?_I2C_Init:	
  3974                           ; 1 bytes @ 0x5
  3975                           
  3976  004B                     ??_PIN_MANAGER_Initialize:	
  3977                           ; 1 bytes @ 0x5
  3978                           
  3979  004B                     I2C_Write@dataBuffer:	
  3980                           ; 1 bytes @ 0x5
  3981                           
  3982  004B                     I2C_Read@dataBuffer:	
  3983                           ; 1 bytes @ 0x5
  3984                           
  3985  004B                     SPI_Read@data:	
  3986                           ; 1 bytes @ 0x5
  3987                           
  3988  004B                     TMR0_SetInterruptHandler@InterruptHandler:	
  3989                           ; 1 bytes @ 0x5
  3990                           
  3991  004B                     I2C_Init@clockFreq:	
  3992                           ; 2 bytes @ 0x5
  3993                           
  3994  004B                     SPI_Init@clockFreq:	
  3995                           ; 4 bytes @ 0x5
  3996                           
  3997                           
  3998                           ; 4 bytes @ 0x5
  3999  004B                     	ds	1
  4000  004C                     I2C_Write@bytesNumber:	
  4001  004C                     I2C_Read@bytesNumber:	
  4002                           ; 1 bytes @ 0x6
  4003                           
  4004  004C                     SPI_Read@bytesNumber:	
  4005                           ; 1 bytes @ 0x6
  4006                           
  4007                           
  4008                           ; 1 bytes @ 0x6
  4009  004C                     	ds	1
  4010  004D                     ??_TMR0_SetInterruptHandler:	
  4011  004D                     ??_SPI_Read:	
  4012                           ; 1 bytes @ 0x7
  4013                           
  4014  004D                     ??_TMR0_Initialize:	
  4015                           ; 1 bytes @ 0x7
  4016                           
  4017  004D                     I2C_Write@stopBit:	
  4018                           ; 1 bytes @ 0x7
  4019                           
  4020  004D                     I2C_Read@stopBit:	
  4021                           ; 1 bytes @ 0x7
  4022                           
  4023                           
  4024                           ; 1 bytes @ 0x7
  4025  004D                     	ds	1
  4026  004E                     ??_SYSTEM_Initialize:	
  4027  004E                     ??_I2C_Write:	
  4028                           ; 1 bytes @ 0x8
  4029                           
  4030  004E                     ??_I2C_Read:	
  4031                           ; 1 bytes @ 0x8
  4032                           
  4033                           
  4034                           ; 1 bytes @ 0x8
  4035  004E                     	ds	1
  4036  004F                     ??_I2C_Init:	
  4037  004F                     I2C_Write@status:	
  4038                           ; 1 bytes @ 0x9
  4039                           
  4040  004F                     SPI_Init@clockPol:	
  4041                           ; 1 bytes @ 0x9
  4042                           
  4043  004F                     I2C_Init@pbFrequency:	
  4044                           ; 1 bytes @ 0x9
  4045                           
  4046  004F                     SPI_Read@writeBuffer:	
  4047                           ; 4 bytes @ 0x9
  4048                           
  4049                           
  4050                           ; 4 bytes @ 0x9
  4051  004F                     	ds	1
  4052  0050                     I2C_Write@slaveAddress:	
  4053  0050                     I2C_Read@status:	
  4054                           ; 1 bytes @ 0xA
  4055                           
  4056  0050                     SPI_Init@clockEdg:	
  4057                           ; 1 bytes @ 0xA
  4058                           
  4059                           
  4060                           ; 1 bytes @ 0xA
  4061  0050                     	ds	1
  4062  0051                     ??_SPI_Init:	
  4063  0051                     I2C_Write@acknowledge:	
  4064                           ; 1 bytes @ 0xB
  4065                           
  4066  0051                     I2C_Read@slaveAddress:	
  4067                           ; 1 bytes @ 0xB
  4068                           
  4069  0051                     SPI_Init@pbFrequency:	
  4070                           ; 1 bytes @ 0xB
  4071                           
  4072                           
  4073                           ; 4 bytes @ 0xB
  4074  0051                     	ds	1
  4075  0052                     I2C_Write@byte:	
  4076  0052                     I2C_Read@acknowledge:	
  4077                           ; 1 bytes @ 0xC
  4078                           
  4079                           
  4080                           ; 1 bytes @ 0xC
  4081  0052                     	ds	1
  4082  0053                     I2C_Read@byte:	
  4083  0053                     SPI_Read@slaveDeviceId:	
  4084                           ; 1 bytes @ 0xD
  4085                           
  4086  0053                     I2C_Init@brgValue:	
  4087                           ; 1 bytes @ 0xD
  4088                           
  4089                           
  4090                           ; 2 bytes @ 0xD
  4091  0053                     	ds	1
  4092  0054                     SPI_Read@byte:	
  4093                           
  4094                           ; 1 bytes @ 0xE
  4095  0054                     	ds	1
  4096  0055                     ??_ADXL345_GetRegisterValue:	
  4097  0055                     I2C_Init@status:	
  4098                           ; 1 bytes @ 0xF
  4099                           
  4100  0055                     SPI_Init@brgValue:	
  4101                           ; 1 bytes @ 0xF
  4102                           
  4103                           
  4104                           ; 2 bytes @ 0xF
  4105  0055                     	ds	2
  4106  0057                     ADXL345_GetRegisterValue@registerAddress:	
  4107  0057                     SPI_Init@status:	
  4108                           ; 1 bytes @ 0x11
  4109                           
  4110                           
  4111                           ; 1 bytes @ 0x11
  4112  0057                     	ds	1
  4113  0058                     ADXL345_GetRegisterValue@dataBuffer:	
  4114                           
  4115                           ; 2 bytes @ 0x12
  4116  0058                     	ds	2
  4117  005A                     ADXL345_GetRegisterValue@registerValue:	
  4118                           
  4119                           ; 1 bytes @ 0x14
  4120  005A                     	ds	1
  4121  005B                     ??_ADXL345_Init:	
  4122                           
  4123                           ; 1 bytes @ 0x15
  4124  005B                     	ds	1
  4125  005C                     ADXL345_Init@commProtocol:	
  4126                           
  4127                           ; 1 bytes @ 0x16
  4128  005C                     	ds	1
  4129  005D                     ADXL345_Init@status:	
  4130                           
  4131                           ; 1 bytes @ 0x17
  4132  005D                     	ds	1
  4133  005E                     ??_main:	
  4134                           
  4135                           ; 1 bytes @ 0x18
  4136  005E                     	ds	1
  4137                           
  4138                           	psect	maintext
  4139  034C                     __pmaintext:	
  4140 ;;
  4141 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4142 ;;
  4143 ;; *************** function _main *****************
  4144 ;; Defined at:
  4145 ;;		line 45 in file "main.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;  AccelZtemp      2   10[BANK1 ] int 
  4150 ;;  AccelYtemp      2    8[BANK1 ] int 
  4151 ;;  AccelXtemp      2    6[BANK1 ] int 
  4152 ;;  AccelZ          2    4[BANK1 ] int 
  4153 ;;  AccelY          2    2[BANK1 ] int 
  4154 ;;  AccelX          2    0[BANK1 ] int 
  4155 ;;  z               2    0        short 
  4156 ;;  y               2    0        short 
  4157 ;;  x               2    0        short 
  4158 ;;  counter         1   13[BANK1 ] unsigned char 
  4159 ;;  i2cStatus       1   12[BANK1 ] unsigned char 
  4160 ;;  TempZLSB        1    0        unsigned char 
  4161 ;;  TempZMSB        1    0        unsigned char 
  4162 ;;  TempYLSB        1    0        unsigned char 
  4163 ;;  TempYMSB        1    0        unsigned char 
  4164 ;;  TempXLSB        1    0        unsigned char 
  4165 ;;  TempXMSB        1    0        unsigned char 
  4166 ;;  AccelStatus     1    0        unsigned char 
  4167 ;;  DeviceID        1    0        unsigned char 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : B1F/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4178 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  4179 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4180 ;;      Totals:         0       1      14       0       0       0       0       0       0       0       0       0       
      +0       0
  4181 ;;Total ram usage:       15 bytes
  4182 ;; Hardware stack levels required when called:    8
  4183 ;; This function calls:
  4184 ;;		_ADXL345_Init
  4185 ;;		_SYSTEM_Initialize
  4186 ;; This function is called by:
  4187 ;;		Startup code after reset
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           
  4192                           ;psect for function _main
  4193  034C                     _main:	
  4194                           
  4195                           ;main.c: 47: unsigned char i2cStatus;
  4196                           ;main.c: 49: short x;
  4197                           ;main.c: 50: short y;
  4198                           ;main.c: 51: short z;
  4199                           ;main.c: 52: unsigned char DeviceID;
  4200                           ;main.c: 54: char AccelStatus;
  4201                           ;main.c: 55: char TempXMSB;
  4202                           ;main.c: 56: char TempXLSB;
  4203                           ;main.c: 57: char TempYMSB;
  4204                           ;main.c: 58: char TempYLSB;
  4205                           ;main.c: 59: char TempZMSB;
  4206                           ;main.c: 60: char TempZLSB;
  4207                           ;main.c: 61: int16_t AccelX = 0;
  4208                           
  4209                           ;incstack = 0
  4210                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4211  034C  0021               	movlb	1	; select bank1
  4212  034D  01A0               	clrf	main@AccelX^(0+128)
  4213  034E  01A1               	clrf	(main@AccelX+1)^(0+128)
  4214                           
  4215                           ;main.c: 62: int16_t AccelY = 0;
  4216  034F  01A2               	clrf	main@AccelY^(0+128)
  4217  0350  01A3               	clrf	(main@AccelY+1)^(0+128)
  4218                           
  4219                           ;main.c: 63: int16_t AccelZ = 0;
  4220  0351  01A4               	clrf	main@AccelZ^(0+128)
  4221  0352  01A5               	clrf	(main@AccelZ+1)^(0+128)
  4222                           
  4223                           ;main.c: 64: int16_t AccelXtemp = 0;
  4224  0353  01A6               	clrf	main@AccelXtemp^(0+128)
  4225  0354  01A7               	clrf	(main@AccelXtemp+1)^(0+128)
  4226                           
  4227                           ;main.c: 65: int16_t AccelYtemp = 0;
  4228  0355  01A8               	clrf	main@AccelYtemp^(0+128)
  4229  0356  01A9               	clrf	(main@AccelYtemp+1)^(0+128)
  4230                           
  4231                           ;main.c: 66: int16_t AccelZtemp = 0;
  4232  0357  01AA               	clrf	main@AccelZtemp^(0+128)
  4233  0358  01AB               	clrf	(main@AccelZtemp+1)^(0+128)
  4234                           
  4235                           ;main.c: 67: char counter = 0;
  4236  0359  01AD               	clrf	main@counter^(0+128)
  4237                           
  4238                           ;main.c: 70: SYSTEM_Initialize();
  4239  035A  3183  2390  3183   	fcall	_SYSTEM_Initialize
  4240                           
  4241                           ;main.c: 71: i2cStatus = ADXL345_Init(1);
  4242  035D  3001               	movlw	1
  4243  035E  3181  21C3  3183   	fcall	_ADXL345_Init
  4244  0361  0020               	movlb	0	; select bank0
  4245  0362  00DE               	movwf	??_main
  4246  0363  085E               	movf	??_main,w
  4247  0364  0021               	movlb	1	; select bank1
  4248  0365  00AC               	movwf	main@i2cStatus^(0+128)
  4249                           
  4250                           ;main.c: 78: (INTCONbits.GIE = 1);
  4251  0366  178B               	bsf	11,7	;volatile
  4252                           
  4253                           ;main.c: 81: (INTCONbits.PEIE = 1);
  4254  0367  170B               	bsf	11,6	;volatile
  4255  0368                     l25:	
  4256                           ;main.c: 90: while (1)
  4257                           
  4258                           
  4259                           ;main.c: 91: {
  4260  0368  2B68               	goto	l25
  4261  0369                     __end_of_main:	
  4262                           
  4263                           	psect	text1
  4264  0390                     __ptext1:	
  4265 ;; *************** function _SYSTEM_Initialize *****************
  4266 ;; Defined at:
  4267 ;;		line 77 in file "mcc.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;		None
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      void 
  4274 ;; Registers used:
  4275 ;;		wreg, status,2, status,0, pclath, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;Total ram usage:        0 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    7
  4288 ;; This function calls:
  4289 ;;		_OSCILLATOR_Initialize
  4290 ;;		_PIN_MANAGER_Initialize
  4291 ;;		_TMR0_Initialize
  4292 ;; This function is called by:
  4293 ;;		_main
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           
  4298                           ;psect for function _SYSTEM_Initialize
  4299  0390                     _SYSTEM_Initialize:	
  4300                           
  4301                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  4302                           
  4303                           ;incstack = 0
  4304                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4305  0390  3182  22B3  3183   	fcall	_PIN_MANAGER_Initialize
  4306                           
  4307                           ;mcc.c: 80: OSCILLATOR_Initialize();
  4308  0393  3183  2399  3183   	fcall	_OSCILLATOR_Initialize
  4309                           
  4310                           ;mcc.c: 82: TMR0_Initialize();
  4311  0396  3183  2369         	fcall	_TMR0_Initialize
  4312  0398  0008               	return
  4313  0399                     __end_of_SYSTEM_Initialize:	
  4314                           
  4315                           	psect	text2
  4316  0369                     __ptext2:	
  4317 ;; *************** function _TMR0_Initialize *****************
  4318 ;; Defined at:
  4319 ;;		line 65 in file "tmr0.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg, status,2, status,0, pclath, cstack
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4335 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4336 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4337 ;;Total ram usage:        1 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:    6
  4340 ;; This function calls:
  4341 ;;		_TMR0_SetInterruptHandler
  4342 ;; This function is called by:
  4343 ;;		_SYSTEM_Initialize
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           
  4348                           ;psect for function _TMR0_Initialize
  4349  0369                     _TMR0_Initialize:	
  4350                           
  4351                           ;tmr0.c: 70: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD2 & 0x3F);
  4352                           
  4353                           ;incstack = 0
  4354                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4355  0369  0021               	movlb	1	; select bank1
  4356  036A  0815               	movf	21,w	;volatile
  4357  036B  39C0               	andlw	192
  4358  036C  3812               	iorlw	18
  4359  036D  0095               	movwf	21	;volatile
  4360                           
  4361                           ;tmr0.c: 79: TMR0 = 0x83;
  4362  036E  3083               	movlw	131
  4363  036F  0020               	movlb	0	; select bank0
  4364  0370  0095               	movwf	21	;volatile
  4365                           
  4366                           ;tmr0.c: 82: timer0ReloadVal= 131;
  4367  0371  3083               	movlw	131
  4368  0372  00CD               	movwf	??_TMR0_Initialize
  4369  0373  084D               	movf	??_TMR0_Initialize,w
  4370  0374  00E1               	movwf	_timer0ReloadVal	;volatile
  4371                           
  4372                           ;tmr0.c: 85: INTCONbits.TMR0IF = 0;
  4373  0375  110B               	bcf	11,2	;volatile
  4374                           
  4375                           ;tmr0.c: 88: INTCONbits.TMR0IE = 1;
  4376  0376  168B               	bsf	11,5	;volatile
  4377                           
  4378                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  4379  0377  30B8               	movlw	low _TMR0_DefaultInterruptHandler
  4380  0378  00CB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4381  0379  3003               	movlw	high _TMR0_DefaultInterruptHandler
  4382  037A  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4383  037B  3183  23A6         	fcall	_TMR0_SetInterruptHandler
  4384  037D  0008               	return
  4385  037E                     __end_of_TMR0_Initialize:	
  4386                           
  4387                           	psect	text3
  4388  03A6                     __ptext3:	
  4389 ;; *************** function _TMR0_SetInterruptHandler *****************
  4390 ;; Defined at:
  4391 ;;		line 149 in file "tmr0.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  InterruptHan    2    5[BANK0 ] PTR FTN()void 
  4394 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      void 
  4399 ;; Registers used:
  4400 ;;		wreg
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;Total ram usage:        2 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    5
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_TMR0_Initialize
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           
  4421                           ;psect for function _TMR0_SetInterruptHandler
  4422  03A6                     _TMR0_SetInterruptHandler:	
  4423                           
  4424                           ;tmr0.c: 150: TMR0_InterruptHandler = InterruptHandler;
  4425                           
  4426                           ;incstack = 0
  4427                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4428  03A6  0020               	movlb	0	; select bank0
  4429  03A7  084C               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  4430  03A8  00E0               	movwf	_TMR0_InterruptHandler+1
  4431  03A9  084B               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  4432  03AA  00DF               	movwf	_TMR0_InterruptHandler
  4433  03AB  0008               	return
  4434  03AC                     __end_of_TMR0_SetInterruptHandler:	
  4435                           
  4436                           	psect	text4
  4437  02B3                     __ptext4:	
  4438 ;; *************** function _PIN_MANAGER_Initialize *****************
  4439 ;; Defined at:
  4440 ;;		line 52 in file "pin_manager.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;		None
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;		None
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  1    wreg      void 
  4447 ;; Registers used:
  4448 ;;		wreg, status,2
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4458 ;;Total ram usage:        0 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    5
  4461 ;; This function calls:
  4462 ;;		Nothing
  4463 ;; This function is called by:
  4464 ;;		_SYSTEM_Initialize
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           
  4469                           ;psect for function _PIN_MANAGER_Initialize
  4470  02B3                     _PIN_MANAGER_Initialize:	
  4471                           
  4472                           ;pin_manager.c: 57: LATA = 0x00;
  4473                           
  4474                           ;incstack = 0
  4475                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4476  02B3  0022               	movlb	2	; select bank2
  4477  02B4  018C               	clrf	12	;volatile
  4478                           
  4479                           ;pin_manager.c: 58: LATB = 0x00;
  4480  02B5  018D               	clrf	13	;volatile
  4481                           
  4482                           ;pin_manager.c: 59: LATC = 0x00;
  4483  02B6  018E               	clrf	14	;volatile
  4484                           
  4485                           ;pin_manager.c: 64: TRISA = 0x07;
  4486  02B7  3007               	movlw	7
  4487  02B8  0021               	movlb	1	; select bank1
  4488  02B9  008C               	movwf	12	;volatile
  4489                           
  4490                           ;pin_manager.c: 65: TRISB = 0x70;
  4491  02BA  3070               	movlw	112
  4492  02BB  008D               	movwf	13	;volatile
  4493                           
  4494                           ;pin_manager.c: 66: TRISC = 0x9F;
  4495  02BC  309F               	movlw	159
  4496  02BD  008E               	movwf	14	;volatile
  4497                           
  4498                           ;pin_manager.c: 71: ANSELC = 0xCF;
  4499  02BE  30CF               	movlw	207
  4500  02BF  0023               	movlb	3	; select bank3
  4501  02C0  008E               	movwf	14	;volatile
  4502                           
  4503                           ;pin_manager.c: 72: ANSELB = 0xA0;
  4504  02C1  30A0               	movlw	160
  4505  02C2  008D               	movwf	13	;volatile
  4506                           
  4507                           ;pin_manager.c: 73: ANSELA = 0x17;
  4508  02C3  3017               	movlw	23
  4509  02C4  008C               	movwf	12	;volatile
  4510                           
  4511                           ;pin_manager.c: 78: WPUB = 0x00;
  4512  02C5  0024               	movlb	4	; select bank4
  4513  02C6  018D               	clrf	13	;volatile
  4514                           
  4515                           ;pin_manager.c: 79: WPUA = 0x00;
  4516  02C7  018C               	clrf	12	;volatile
  4517                           
  4518                           ;pin_manager.c: 80: WPUC = 0x00;
  4519  02C8  018E               	clrf	14	;volatile
  4520                           
  4521                           ;pin_manager.c: 81: OPTION_REGbits.nWPUEN = 1;
  4522  02C9  0021               	movlb	1	; select bank1
  4523  02CA  1795               	bsf	21,7	;volatile
  4524                           
  4525                           ;pin_manager.c: 86: ODCONA = 0x00;
  4526  02CB  0025               	movlb	5	; select bank5
  4527  02CC  018C               	clrf	12	;volatile
  4528                           
  4529                           ;pin_manager.c: 87: ODCONB = 0x00;
  4530  02CD  018D               	clrf	13	;volatile
  4531                           
  4532                           ;pin_manager.c: 88: ODCONC = 0x00;
  4533  02CE  018E               	clrf	14	;volatile
  4534                           
  4535                           ;pin_manager.c: 93: IOCAFbits.IOCAF2 = 0;
  4536  02CF  0027               	movlb	7	; select bank7
  4537  02D0  1113               	bcf	19,2	;volatile
  4538                           
  4539                           ;pin_manager.c: 95: IOCANbits.IOCAN2 = 0;
  4540  02D1  1112               	bcf	18,2	;volatile
  4541                           
  4542                           ;pin_manager.c: 97: IOCAPbits.IOCAP2 = 1;
  4543  02D2  1511               	bsf	17,2	;volatile
  4544                           
  4545                           ;pin_manager.c: 100: INTCONbits.IOCIE = 1;
  4546  02D3  158B               	bsf	11,3	;volatile
  4547                           
  4548                           ;pin_manager.c: 102: RXPPS = 0x0D;
  4549  02D4  300D               	movlw	13
  4550  02D5  003C               	movlb	28	; select bank28
  4551  02D6  00A4               	movwf	36	;volatile
  4552                           
  4553                           ;pin_manager.c: 103: RB7PPS = 0x12;
  4554  02D7  3012               	movlw	18
  4555  02D8  003D               	movlb	29	; select bank29
  4556  02D9  009F               	movwf	31	;volatile
  4557                           
  4558                           ;pin_manager.c: 105: SSPCLKPPS = 0x0E;
  4559  02DA  300E               	movlw	14
  4560  02DB  003C               	movlb	28	; select bank28
  4561  02DC  00A0               	movwf	32	;volatile
  4562                           
  4563                           ;pin_manager.c: 106: SSPDATPPS = 0x0C;
  4564  02DD  300C               	movlw	12
  4565  02DE  00A1               	movwf	33	;volatile
  4566                           
  4567                           ;pin_manager.c: 107: RB6PPS = 0x10;
  4568  02DF  3010               	movlw	16
  4569  02E0  003D               	movlb	29	; select bank29
  4570  02E1  009E               	movwf	30	;volatile
  4571                           
  4572                           ;pin_manager.c: 108: RB4PPS = 0x11;
  4573  02E2  3011               	movlw	17
  4574  02E3  009C               	movwf	28	;volatile
  4575  02E4  0008               	return
  4576  02E5                     __end_of_PIN_MANAGER_Initialize:	
  4577                           
  4578                           	psect	text5
  4579  0399                     __ptext5:	
  4580 ;; *************** function _OSCILLATOR_Initialize *****************
  4581 ;; Defined at:
  4582 ;;		line 85 in file "mcc.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      void 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;Total ram usage:        0 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    5
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_SYSTEM_Initialize
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           
  4611                           ;psect for function _OSCILLATOR_Initialize
  4612  0399                     _OSCILLATOR_Initialize:	
  4613                           
  4614                           ;mcc.c: 88: OSCCON = 0x6A;
  4615                           
  4616                           ;incstack = 0
  4617                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4618  0399  306A               	movlw	106
  4619  039A  0021               	movlb	1	; select bank1
  4620  039B  0099               	movwf	25	;volatile
  4621                           
  4622                           ;mcc.c: 90: OSCTUNE = 0x00;
  4623  039C  0198               	clrf	24	;volatile
  4624                           
  4625                           ;mcc.c: 92: BORCON = 0x00;
  4626  039D  0022               	movlb	2	; select bank2
  4627  039E  0196               	clrf	22	;volatile
  4628  039F  0008               	return
  4629  03A0                     __end_of_OSCILLATOR_Initialize:	
  4630                           
  4631                           	psect	text6
  4632  01C3                     __ptext6:	
  4633 ;; *************** function _ADXL345_Init *****************
  4634 ;; Defined at:
  4635 ;;		line 135 in file "ADXL345.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  commProtocol    1    wreg     unsigned char 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  commProtocol    1   22[BANK0 ] unsigned char 
  4640 ;;  status          1   23[BANK0 ] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      unsigned char 
  4643 ;; Registers used:
  4644 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;Total ram usage:        3 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    7
  4657 ;; This function calls:
  4658 ;;		_ADXL345_GetRegisterValue
  4659 ;;		_I2C_Init
  4660 ;;		_SPI_Init
  4661 ;; This function is called by:
  4662 ;;		_main
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           
  4667                           ;psect for function _ADXL345_Init
  4668  01C3                     _ADXL345_Init:	
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _ADXL345_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4672                           ;ADXL345_Init@commProtocol stored from wreg
  4673  01C3  0020               	movlb	0	; select bank0
  4674  01C4  00DC               	movwf	ADXL345_Init@commProtocol
  4675                           
  4676                           ;ADXL345.c: 137: unsigned char status = 0;
  4677  01C5  01DD               	clrf	ADXL345_Init@status
  4678                           
  4679                           ;ADXL345.c: 139: communicationType = commProtocol;
  4680  01C6  085C               	movf	ADXL345_Init@commProtocol,w
  4681  01C7  00DB               	movwf	??_ADXL345_Init
  4682  01C8  085B               	movf	??_ADXL345_Init,w
  4683  01C9  00B1               	movwf	_communicationType
  4684                           
  4685                           ;ADXL345.c: 140: if(commProtocol == 0)
  4686  01CA  085C               	movf	ADXL345_Init@commProtocol,w
  4687  01CB  1D03               	btfss	3,2
  4688  01CC  29DD               	goto	l3191
  4689                           
  4690                           ;ADXL345.c: 141: {
  4691                           ;ADXL345.c: 142: status = SPI_Init(0,
  4692                           ;ADXL345.c: 143: 1000000,
  4693                           ;ADXL345.c: 144: 1,
  4694                           ;ADXL345.c: 145: 0);
  4695  01CD  3000               	movlw	0
  4696  01CE  00CE               	movwf	SPI_Init@clockFreq+3
  4697  01CF  300F               	movlw	15
  4698  01D0  00CD               	movwf	SPI_Init@clockFreq+2
  4699  01D1  3042               	movlw	66
  4700  01D2  00CC               	movwf	SPI_Init@clockFreq+1
  4701  01D3  3040               	movlw	64
  4702  01D4  00CB               	movwf	SPI_Init@clockFreq
  4703  01D5  01CF               	clrf	SPI_Init@clockPol
  4704  01D6  0ACF               	incf	SPI_Init@clockPol,f
  4705  01D7  01D0               	clrf	SPI_Init@clockEdg
  4706  01D8  3000               	movlw	0
  4707  01D9  3182  22E5  3181   	fcall	_SPI_Init
  4708  01DC  29E8               	goto	L1
  4709  01DD                     l3191:	
  4710                           ;ADXL345.c: 146: }
  4711                           
  4712                           
  4713                           ;ADXL345.c: 147: else
  4714                           ;ADXL345.c: 148: {
  4715                           ;ADXL345.c: 149: status = I2C_Init(100000);
  4716  01DD  3000               	movlw	0
  4717  01DE  00CE               	movwf	I2C_Init@clockFreq+3
  4718  01DF  3001               	movlw	1
  4719  01E0  00CD               	movwf	I2C_Init@clockFreq+2
  4720  01E1  3086               	movlw	134
  4721  01E2  00CC               	movwf	I2C_Init@clockFreq+1
  4722  01E3  30A0               	movlw	160
  4723  01E4  00CB               	movwf	I2C_Init@clockFreq
  4724  01E5  3183  232C  3181   	fcall	_I2C_Init
  4725  01E8                     L1:	
  4726  01E8  0020               	movlb	0	; select bank0
  4727  01E9  00DB               	movwf	??_ADXL345_Init
  4728  01EA  085B               	movf	??_ADXL345_Init,w
  4729  01EB  00DD               	movwf	ADXL345_Init@status
  4730                           
  4731                           ;ADXL345.c: 150: }
  4732                           ;ADXL345.c: 151: if(ADXL345_GetRegisterValue(0x00) != 0xE5)
  4733  01EC  3000               	movlw	0
  4734  01ED  3182  2200  3181   	fcall	_ADXL345_GetRegisterValue
  4735  01F0  3AE5               	xorlw	229
  4736  01F1  1903               	skipnz
  4737  01F2  29F8               	goto	l542
  4738                           
  4739                           ;ADXL345.c: 152: {
  4740                           ;ADXL345.c: 153: status = -1;
  4741  01F3  30FF               	movlw	255
  4742  01F4  0020               	movlb	0	; select bank0
  4743  01F5  00DB               	movwf	??_ADXL345_Init
  4744  01F6  085B               	movf	??_ADXL345_Init,w
  4745  01F7  00DD               	movwf	ADXL345_Init@status
  4746  01F8                     l542:	
  4747                           
  4748                           ;ADXL345.c: 154: }
  4749                           ;ADXL345.c: 155: selectedRange = 2;
  4750  01F8  3002               	movlw	2
  4751  01F9  0020               	movlb	0	; select bank0
  4752  01FA  00DB               	movwf	??_ADXL345_Init
  4753  01FB  085B               	movf	??_ADXL345_Init,w
  4754  01FC  00B0               	movwf	_selectedRange
  4755                           
  4756                           ;ADXL345.c: 156: fullResolutionSet = 0;
  4757  01FD  01AF               	clrf	_fullResolutionSet
  4758                           
  4759                           ;ADXL345.c: 158: return status;
  4760  01FE  085D               	movf	ADXL345_Init@status,w
  4761  01FF  0008               	return
  4762  0200                     __end_of_ADXL345_Init:	
  4763                           
  4764                           	psect	text7
  4765  02E5                     __ptext7:	
  4766 ;; *************** function _SPI_Init *****************
  4767 ;; Defined at:
  4768 ;;		line 221 in file "Communication.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  lsbFirst        1    wreg     unsigned char 
  4771 ;;  clockFreq       4    5[BANK0 ] unsigned long 
  4772 ;;  clockPol        1    9[BANK0 ] unsigned char 
  4773 ;;  clockEdg        1   10[BANK0 ] unsigned char 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  lsbFirst        1    0[COMMON] unsigned char 
  4776 ;;  pbFrequency     4   11[BANK0 ] unsigned long 
  4777 ;;  brgValue        2   15[BANK0 ] unsigned short 
  4778 ;;  status          1   17[BANK0 ] unsigned char 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      unsigned char 
  4781 ;; Registers used:
  4782 ;;		wreg, status,2, status,0
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4788 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4789 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4792 ;;Total ram usage:       13 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    5
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_ADXL345_Init
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           
  4803                           ;psect for function _SPI_Init
  4804  02E5                     _SPI_Init:	
  4805                           
  4806                           ;Communication.c: 226: unsigned char status = 0;
  4807                           
  4808                           ;incstack = 0
  4809                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  4810  02E5  0020               	movlb	0	; select bank0
  4811  02E6  01D7               	clrf	SPI_Init@status
  4812                           
  4813                           ;Communication.c: 227: unsigned long pbFrequency = 40000000;
  4814  02E7  3002               	movlw	2
  4815  02E8  00D4               	movwf	SPI_Init@pbFrequency+3
  4816  02E9  3062               	movlw	98
  4817  02EA  00D3               	movwf	SPI_Init@pbFrequency+2
  4818  02EB  305A               	movlw	90
  4819  02EC  00D2               	movwf	SPI_Init@pbFrequency+1
  4820  02ED  3000               	movlw	0
  4821  02EE  00D1               	movwf	SPI_Init@pbFrequency
  4822                           
  4823                           ;Communication.c: 228: unsigned short brgValue = 0;
  4824  02EF  01D5               	clrf	SPI_Init@brgValue
  4825  02F0  01D6               	clrf	SPI_Init@brgValue+1
  4826                           
  4827                           ;Communication.c: 230: do { LATCbits.LATC6 = 1; } while(0);
  4828  02F1  0022               	movlb	2	; select bank2
  4829  02F2  170E               	bsf	14,6	;volatile
  4830                           
  4831                           ;Communication.c: 235: SSP1STAT = 0x00;
  4832  02F3  0024               	movlb	4	; select bank4
  4833  02F4  0194               	clrf	20	;volatile
  4834                           
  4835                           ;Communication.c: 236: SSP1STATbits.CKE = clockEdg;
  4836  02F5  0020               	movlb	0	; select bank0
  4837  02F6  0C50               	rrf	SPI_Init@clockEdg,w
  4838  02F7  0024               	movlb	4	; select bank4
  4839  02F8  1C03               	skipc
  4840  02F9  1314               	bcf	20,6	;volatile
  4841  02FA  1803               	skipnc
  4842  02FB  1714               	bsf	20,6	;volatile
  4843                           
  4844                           ;Communication.c: 239: SSP1CON1 = 0x20;
  4845  02FC  3020               	movlw	32
  4846  02FD  0095               	movwf	21	;volatile
  4847                           
  4848                           ;Communication.c: 240: SSP1CON1bits.CKP = clockPol;
  4849  02FE  0020               	movlb	0	; select bank0
  4850  02FF  0C4F               	rrf	SPI_Init@clockPol,w
  4851  0300  0024               	movlb	4	; select bank4
  4852  0301  1C03               	skipc
  4853  0302  1215               	bcf	21,4	;volatile
  4854  0303  1803               	skipnc
  4855  0304  1615               	bsf	21,4	;volatile
  4856                           
  4857                           ;Communication.c: 245: SSP1ADD = 0x00;
  4858  0305  0192               	clrf	18	;volatile
  4859                           
  4860                           ;Communication.c: 247: status = 1;
  4861  0306  0020               	movlb	0	; select bank0
  4862  0307  01D7               	clrf	SPI_Init@status
  4863  0308  0AD7               	incf	SPI_Init@status,f
  4864                           
  4865                           ;Communication.c: 248: return status;
  4866  0309  0857               	movf	SPI_Init@status,w
  4867  030A  0008               	return
  4868  030B                     __end_of_SPI_Init:	
  4869                           
  4870                           	psect	text8
  4871  032C                     __ptext8:	
  4872 ;; *************** function _I2C_Init *****************
  4873 ;; Defined at:
  4874 ;;		line 57 in file "Communication.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;  clockFreq       4    5[BANK0 ] unsigned long 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  pbFrequency     4    9[BANK0 ] unsigned long 
  4879 ;;  brgValue        2   13[BANK0 ] unsigned short 
  4880 ;;  status          1   15[BANK0 ] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      unsigned char 
  4883 ;; Registers used:
  4884 ;;		wreg, status,2
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4890 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4891 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4893 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4894 ;;Total ram usage:       11 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:    5
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_ADXL345_Init
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           
  4905                           ;psect for function _I2C_Init
  4906  032C                     _I2C_Init:	
  4907                           
  4908                           ;Communication.c: 59: unsigned char status = 0;
  4909                           
  4910                           ;incstack = 0
  4911                           ; Regs used in _I2C_Init: [wreg+status,2]
  4912  032C  0020               	movlb	0	; select bank0
  4913  032D  01D5               	clrf	I2C_Init@status
  4914                           
  4915                           ;Communication.c: 60: unsigned long pbFrequency = 4000000;
  4916  032E  3000               	movlw	0
  4917  032F  00D2               	movwf	I2C_Init@pbFrequency+3
  4918  0330  303D               	movlw	61
  4919  0331  00D1               	movwf	I2C_Init@pbFrequency+2
  4920  0332  3009               	movlw	9
  4921  0333  00D0               	movwf	I2C_Init@pbFrequency+1
  4922  0334  3000               	movlw	0
  4923  0335  00CF               	movwf	I2C_Init@pbFrequency
  4924                           
  4925                           ;Communication.c: 61: unsigned short brgValue = 0;
  4926  0336  01D3               	clrf	I2C_Init@brgValue
  4927  0337  01D4               	clrf	I2C_Init@brgValue+1
  4928                           
  4929                           ;Communication.c: 64: SSP1STAT = 0x00;
  4930  0338  0024               	movlb	4	; select bank4
  4931  0339  0194               	clrf	20	;volatile
  4932                           
  4933                           ;Communication.c: 66: SSP1CON1 = 0x28;
  4934  033A  3028               	movlw	40
  4935  033B  0095               	movwf	21	;volatile
  4936                           
  4937                           ;Communication.c: 68: SSP1CON3 = 0x00;
  4938  033C  0197               	clrf	23	;volatile
  4939                           
  4940                           ;Communication.c: 72: SSP1ADD = 0x03;
  4941  033D  3003               	movlw	3
  4942  033E  0092               	movwf	18	;volatile
  4943                           
  4944                           ;Communication.c: 75: PIR1bits.SSP1IF = 0;
  4945  033F  0020               	movlb	0	; select bank0
  4946  0340  1190               	bcf	16,3	;volatile
  4947                           
  4948                           ;Communication.c: 76: PIR2bits.BCL1IF = 0;
  4949  0341  1191               	bcf	17,3	;volatile
  4950                           
  4951                           ;Communication.c: 79: PIE1bits.SSP1IE = 1;
  4952  0342  0021               	movlb	1	; select bank1
  4953  0343  1590               	bsf	16,3	;volatile
  4954                           
  4955                           ;Communication.c: 80: PIE2bits.BCL1IE = 1;
  4956  0344  1591               	bsf	17,3	;volatile
  4957                           
  4958                           ;Communication.c: 82: do { LATCbits.LATC6 = 1; } while(0);
  4959  0345  0022               	movlb	2	; select bank2
  4960  0346  170E               	bsf	14,6	;volatile
  4961                           
  4962                           ;Communication.c: 83: status = 1;
  4963  0347  0020               	movlb	0	; select bank0
  4964  0348  01D5               	clrf	I2C_Init@status
  4965  0349  0AD5               	incf	I2C_Init@status,f
  4966                           
  4967                           ;Communication.c: 85: return status;
  4968  034A  0855               	movf	I2C_Init@status,w
  4969  034B  0008               	return
  4970  034C                     __end_of_I2C_Init:	
  4971                           
  4972                           	psect	text9
  4973  0200                     __ptext9:	
  4974 ;; *************** function _ADXL345_GetRegisterValue *****************
  4975 ;; Defined at:
  4976 ;;		line 67 in file "ADXL345.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;  registerAddr    1    wreg     unsigned char 
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  registerAddr    1   17[BANK0 ] unsigned char 
  4981 ;;  dataBuffer      2   18[BANK0 ] unsigned char [2]
  4982 ;;  registerValu    1   20[BANK0 ] unsigned char 
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  1    wreg      unsigned char 
  4985 ;; Registers used:
  4986 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4993 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4994 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4995 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4996 ;;Total ram usage:        6 bytes
  4997 ;; Hardware stack levels used:    1
  4998 ;; Hardware stack levels required when called:    6
  4999 ;; This function calls:
  5000 ;;		_I2C_Read
  5001 ;;		_I2C_Write
  5002 ;;		_SPI_Read
  5003 ;; This function is called by:
  5004 ;;		_ADXL345_Init
  5005 ;;		_ADXL345_SetPowerMode
  5006 ;;		_ADXL345_SetTapDetection
  5007 ;;		_ADXL345_SetActivityDetection
  5008 ;;		_ADXL345_SetInactivityDetection
  5009 ;;		_ADXL345_SetFreeFallDetection
  5010 ;;		_ADXL345_SetRangeResolution
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           
  5015                           ;psect for function _ADXL345_GetRegisterValue
  5016  0200                     _ADXL345_GetRegisterValue:	
  5017                           
  5018                           ;incstack = 0
  5019                           ; Regs used in _ADXL345_GetRegisterValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5020                           ;ADXL345_GetRegisterValue@registerAddress stored from wreg
  5021  0200  0020               	movlb	0	; select bank0
  5022  0201  00D7               	movwf	ADXL345_GetRegisterValue@registerAddress
  5023                           
  5024                           ;ADXL345.c: 69: unsigned char dataBuffer[2] = {0, 0};
  5025  0202  082C               	movf	ADXL345_GetRegisterValue@F91+1,w
  5026  0203  00D9               	movwf	ADXL345_GetRegisterValue@dataBuffer+1
  5027  0204  082B               	movf	ADXL345_GetRegisterValue@F91,w
  5028  0205  00D8               	movwf	ADXL345_GetRegisterValue@dataBuffer
  5029                           
  5030                           ;ADXL345.c: 70: unsigned char registerValue = 0;
  5031  0206  01DA               	clrf	ADXL345_GetRegisterValue@registerValue
  5032                           
  5033                           ;ADXL345.c: 72: if(communicationType == 0)
  5034  0207  0831               	movf	_communicationType,w
  5035  0208  1D03               	btfss	3,2
  5036  0209  2A22               	goto	l3083
  5037                           
  5038                           ;ADXL345.c: 73: {
  5039                           ;ADXL345.c: 74: dataBuffer[0] = (1 << 7) | registerAddress;
  5040  020A  0857               	movf	ADXL345_GetRegisterValue@registerAddress,w
  5041  020B  3880               	iorlw	128
  5042  020C  00D5               	movwf	??_ADXL345_GetRegisterValue
  5043  020D  0855               	movf	??_ADXL345_GetRegisterValue,w
  5044  020E  00D8               	movwf	ADXL345_GetRegisterValue@dataBuffer
  5045                           
  5046                           ;ADXL345.c: 75: dataBuffer[1] = 0;
  5047  020F  01D9               	clrf	ADXL345_GetRegisterValue@dataBuffer+1
  5048                           
  5049                           ;ADXL345.c: 76: SPI_Read(1, dataBuffer, 2);
  5050  0210  3058               	movlw	(low (ADXL345_GetRegisterValue@dataBuffer| 0))& (0+255)
  5051  0211  00D5               	movwf	??_ADXL345_GetRegisterValue
  5052  0212  0855               	movf	??_ADXL345_GetRegisterValue,w
  5053  0213  00CB               	movwf	SPI_Read@data
  5054  0214  3002               	movlw	2
  5055  0215  00D6               	movwf	??_ADXL345_GetRegisterValue+1
  5056  0216  0856               	movf	??_ADXL345_GetRegisterValue+1,w
  5057  0217  00CC               	movwf	SPI_Read@bytesNumber
  5058  0218  3001               	movlw	1
  5059  0219  3180  209A  3182   	fcall	_SPI_Read
  5060                           
  5061                           ;ADXL345.c: 77: registerValue = dataBuffer[1];
  5062  021C  0020               	movlb	0	; select bank0
  5063  021D  0859               	movf	ADXL345_GetRegisterValue@dataBuffer+1,w
  5064  021E  00D5               	movwf	??_ADXL345_GetRegisterValue
  5065  021F  0855               	movf	??_ADXL345_GetRegisterValue,w
  5066  0220  00DA               	movwf	ADXL345_GetRegisterValue@registerValue
  5067                           
  5068                           ;ADXL345.c: 78: }
  5069  0221  2A39               	goto	l3085
  5070  0222                     l3083:	
  5071                           
  5072                           ;ADXL345.c: 79: else
  5073                           ;ADXL345.c: 80: {
  5074                           ;ADXL345.c: 81: I2C_Write(0x1D,
  5075                           ;ADXL345.c: 82: &registerAddress,
  5076                           ;ADXL345.c: 83: 1,
  5077                           ;ADXL345.c: 84: 0);
  5078  0222  3057               	movlw	(low (ADXL345_GetRegisterValue@registerAddress| 0))& (0+255)
  5079  0223  00D5               	movwf	??_ADXL345_GetRegisterValue
  5080  0224  0855               	movf	??_ADXL345_GetRegisterValue,w
  5081  0225  00CB               	movwf	I2C_Write@dataBuffer
  5082  0226  01CC               	clrf	I2C_Write@bytesNumber
  5083  0227  0ACC               	incf	I2C_Write@bytesNumber,f
  5084  0228  01CD               	clrf	I2C_Write@stopBit
  5085  0229  301D               	movlw	29
  5086  022A  3181  2185  3182   	fcall	_I2C_Write
  5087                           
  5088                           ;ADXL345.c: 85: I2C_Read(0x1D,
  5089                           ;ADXL345.c: 86: &registerValue,
  5090                           ;ADXL345.c: 87: 1,
  5091                           ;ADXL345.c: 88: 1);
  5092  022D  305A               	movlw	(low (ADXL345_GetRegisterValue@registerValue| 0))& (0+255)
  5093  022E  0020               	movlb	0	; select bank0
  5094  022F  00D5               	movwf	??_ADXL345_GetRegisterValue
  5095  0230  0855               	movf	??_ADXL345_GetRegisterValue,w
  5096  0231  00CB               	movwf	I2C_Read@dataBuffer
  5097  0232  01CC               	clrf	I2C_Read@bytesNumber
  5098  0233  0ACC               	incf	I2C_Read@bytesNumber,f
  5099  0234  01CD               	clrf	I2C_Read@stopBit
  5100  0235  0ACD               	incf	I2C_Read@stopBit,f
  5101  0236  301D               	movlw	29
  5102  0237  3180  2044         	fcall	_I2C_Read
  5103  0239                     l3085:	
  5104                           
  5105                           ;ADXL345.c: 89: }
  5106                           ;ADXL345.c: 91: return registerValue;
  5107  0239  0020               	movlb	0	; select bank0
  5108  023A  085A               	movf	ADXL345_GetRegisterValue@registerValue,w
  5109  023B  0008               	return
  5110  023C                     __end_of_ADXL345_GetRegisterValue:	
  5111                           
  5112                           	psect	text10
  5113  009A                     __ptext10:	
  5114 ;; *************** function _SPI_Read *****************
  5115 ;; Defined at:
  5116 ;;		line 261 in file "Communication.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  slaveDeviceI    1    wreg     unsigned char 
  5119 ;;  data            1    5[BANK0 ] PTR unsigned char 
  5120 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@dataBuffer(2), 
  5121 ;;  bytesNumber     1    6[BANK0 ] unsigned char 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  slaveDeviceI    1   13[BANK0 ] unsigned char 
  5124 ;;  writeBuffer     4    9[BANK0 ] unsigned char [4]
  5125 ;;  byte            1   14[BANK0 ] unsigned char 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  1    wreg      unsigned char 
  5128 ;; Registers used:
  5129 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5135 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;Total ram usage:       10 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:    5
  5142 ;; This function calls:
  5143 ;;		Nothing
  5144 ;; This function is called by:
  5145 ;;		_ADXL345_GetRegisterValue
  5146 ;;		_ADXL345_GetXyz
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           
  5151                           ;psect for function _SPI_Read
  5152  009A                     _SPI_Read:	
  5153                           
  5154                           ;incstack = 0
  5155                           ; Regs used in _SPI_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5156                           ;SPI_Read@slaveDeviceId stored from wreg
  5157  009A  0020               	movlb	0	; select bank0
  5158  009B  00D3               	movwf	SPI_Read@slaveDeviceId
  5159                           
  5160                           ;Communication.c: 265: unsigned char byte = 0;
  5161  009C  01D4               	clrf	SPI_Read@byte
  5162                           
  5163                           ;Communication.c: 266: unsigned char writeBuffer[4] = {0, 0, 0, 0};
  5164  009D  0828               	movf	SPI_Read@F12027+3,w
  5165  009E  00D2               	movwf	SPI_Read@writeBuffer+3
  5166  009F  0827               	movf	SPI_Read@F12027+2,w
  5167  00A0  00D1               	movwf	SPI_Read@writeBuffer+2
  5168  00A1  0826               	movf	SPI_Read@F12027+1,w
  5169  00A2  00D0               	movwf	SPI_Read@writeBuffer+1
  5170  00A3  0825               	movf	SPI_Read@F12027,w
  5171  00A4  00CF               	movwf	SPI_Read@writeBuffer
  5172                           
  5173                           ;Communication.c: 269: SSP1CON1bits.WCOL = 0;
  5174  00A5  0024               	movlb	4	; select bank4
  5175  00A6  1395               	bcf	21,7	;volatile
  5176                           
  5177                           ;Communication.c: 271: for(byte = 0; byte < bytesNumber; byte++)
  5178  00A7  0020               	movlb	0	; select bank0
  5179  00A8  01D4               	clrf	SPI_Read@byte
  5180  00A9                     l2987:	
  5181  00A9  084C               	movf	SPI_Read@bytesNumber,w
  5182  00AA  0254               	subwf	SPI_Read@byte,w
  5183  00AB  1803               	btfsc	3,0
  5184  00AC  28C0               	goto	l2989
  5185                           
  5186                           ;Communication.c: 272: {
  5187                           ;Communication.c: 273: writeBuffer[byte] = data[byte];
  5188  00AD  0854               	movf	SPI_Read@byte,w
  5189  00AE  074B               	addwf	SPI_Read@data,w
  5190  00AF  00CD               	movwf	??_SPI_Read
  5191  00B0  084D               	movf	??_SPI_Read,w
  5192  00B1  0086               	movwf	6
  5193  00B2  0187               	clrf	7
  5194  00B3  0801               	movf	1,w
  5195  00B4  00CE               	movwf	??_SPI_Read+1
  5196  00B5  0854               	movf	SPI_Read@byte,w
  5197  00B6  3E4F               	addlw	(low (SPI_Read@writeBuffer| 0))& (0+255)
  5198  00B7  0086               	movwf	6
  5199  00B8  0187               	clrf	7
  5200  00B9  084E               	movf	??_SPI_Read+1,w
  5201  00BA  0081               	movwf	1
  5202  00BB  3001               	movlw	1
  5203  00BC  00CD               	movwf	??_SPI_Read
  5204  00BD  084D               	movf	??_SPI_Read,w
  5205  00BE  07D4               	addwf	SPI_Read@byte,f
  5206  00BF  28A9               	goto	l2987
  5207  00C0                     l2989:	
  5208                           
  5209                           ;Communication.c: 274: }
  5210                           ;Communication.c: 275: if(slaveDeviceId == 1)
  5211  00C0  0353               	decf	SPI_Read@slaveDeviceId,w
  5212  00C1  1D03               	btfss	3,2
  5213  00C2  28C5               	goto	l2991
  5214                           
  5215                           ;Communication.c: 276: {
  5216                           ;Communication.c: 277: do { LATCbits.LATC6 = 0; } while(0);
  5217  00C3  0022               	movlb	2	; select bank2
  5218  00C4  130E               	bcf	14,6	;volatile
  5219  00C5                     l2991:	
  5220                           
  5221                           ;Communication.c: 278: }
  5222                           ;Communication.c: 279: for(byte = 0; byte < bytesNumber; byte++)
  5223  00C5  0020               	movlb	0	; select bank0
  5224  00C6  01D4               	clrf	SPI_Read@byte
  5225  00C7                     l2999:	
  5226  00C7  084C               	movf	SPI_Read@bytesNumber,w
  5227  00C8  0254               	subwf	SPI_Read@byte,w
  5228  00C9  1803               	btfsc	3,0
  5229  00CA  28E4               	goto	l3001
  5230                           
  5231                           ;Communication.c: 280: {
  5232                           ;Communication.c: 281: SSP1BUF = writeBuffer[byte];
  5233  00CB  0854               	movf	SPI_Read@byte,w
  5234  00CC  3E4F               	addlw	(low (SPI_Read@writeBuffer| 0))& (0+255)
  5235  00CD  0086               	movwf	6
  5236  00CE  0187               	clrf	7
  5237  00CF  0801               	movf	1,w
  5238  00D0  0024               	movlb	4	; select bank4
  5239  00D1  0091               	movwf	17	;volatile
  5240  00D2                     l699:	
  5241                           ;Communication.c: 282: while(SSP1STATbits.BF == 0);
  5242                           
  5243  00D2  1C14               	btfss	20,0	;volatile
  5244  00D3  28D2               	goto	l699
  5245                           
  5246                           ;Communication.c: 283: data[byte] = SSP1BUF;
  5247  00D4  0811               	movf	17,w	;volatile
  5248  00D5  0020               	movlb	0	; select bank0
  5249  00D6  00CD               	movwf	??_SPI_Read
  5250  00D7  0854               	movf	SPI_Read@byte,w
  5251  00D8  074B               	addwf	SPI_Read@data,w
  5252  00D9  00CE               	movwf	??_SPI_Read+1
  5253  00DA  084E               	movf	??_SPI_Read+1,w
  5254  00DB  0086               	movwf	6
  5255  00DC  0187               	clrf	7
  5256  00DD  084D               	movf	??_SPI_Read,w
  5257  00DE  0081               	movwf	1
  5258  00DF  3001               	movlw	1
  5259  00E0  00CD               	movwf	??_SPI_Read
  5260  00E1  084D               	movf	??_SPI_Read,w
  5261  00E2  07D4               	addwf	SPI_Read@byte,f
  5262  00E3  28C7               	goto	l2999
  5263  00E4                     l3001:	
  5264                           
  5265                           ;Communication.c: 284: }
  5266                           ;Communication.c: 286: if(slaveDeviceId == 1)
  5267  00E4  0353               	decf	SPI_Read@slaveDeviceId,w
  5268  00E5  1D03               	btfss	3,2
  5269  00E6  0008               	return
  5270                           
  5271                           ;Communication.c: 287: {
  5272                           ;Communication.c: 288: do { LATCbits.LATC6 = 1; } while(0);
  5273  00E7  0022               	movlb	2	; select bank2
  5274  00E8  170E               	bsf	14,6	;volatile
  5275  00E9  0008               	return
  5276  00EA                     __end_of_SPI_Read:	
  5277                           ;Communication.c: 289: }
  5278                           ;Communication.c: 291: return bytesNumber;
  5279                           ;	Return value of _SPI_Read is never used
  5280                           
  5281                           
  5282                           	psect	text11
  5283  0185                     __ptext11:	
  5284 ;; *************** function _I2C_Write *****************
  5285 ;; Defined at:
  5286 ;;		line 100 in file "Communication.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  slaveAddress    1    wreg     unsigned char 
  5289 ;;  dataBuffer      1    5[BANK0 ] PTR unsigned char 
  5290 ;;		 -> ADXL345_GetXyz@firstRegAddress(1), ADXL345_SetRegisterValue@dataBuffer(2), ADXL345_GetRegisterValue@registerAddr
      +ess(1), 
  5291 ;;  bytesNumber     1    6[BANK0 ] unsigned char 
  5292 ;;  stopBit         1    7[BANK0 ] unsigned char 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  slaveAddress    1   10[BANK0 ] unsigned char 
  5295 ;;  byte            1   12[BANK0 ] unsigned char 
  5296 ;;  acknowledge     1   11[BANK0 ] unsigned char 
  5297 ;;  status          1    9[BANK0 ] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      unsigned char 
  5300 ;; Registers used:
  5301 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5307 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5308 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5310 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5311 ;;Total ram usage:        8 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    5
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_ADXL345_GetRegisterValue
  5318 ;;		_ADXL345_SetRegisterValue
  5319 ;;		_ADXL345_GetXyz
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           
  5324                           ;psect for function _I2C_Write
  5325  0185                     _I2C_Write:	
  5326                           
  5327                           ;incstack = 0
  5328                           ; Regs used in _I2C_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  5329                           ;I2C_Write@slaveAddress stored from wreg
  5330  0185  0020               	movlb	0	; select bank0
  5331  0186  00D0               	movwf	I2C_Write@slaveAddress
  5332                           
  5333                           ;Communication.c: 105: unsigned char status = 0;
  5334  0187  01CF               	clrf	I2C_Write@status
  5335                           
  5336                           ;Communication.c: 106: unsigned char acknowledge = 0;
  5337  0188  01D1               	clrf	I2C_Write@acknowledge
  5338                           
  5339                           ;Communication.c: 107: unsigned char byte = 0;
  5340  0189  01D2               	clrf	I2C_Write@byte
  5341                           
  5342                           ;Communication.c: 110: SSP1CON2bits.SEN = 1;
  5343  018A  0024               	movlb	4	; select bank4
  5344  018B  1416               	bsf	22,0	;volatile
  5345  018C                     l638:	
  5346                           ;Communication.c: 111: while(SSP1CON2bits.SEN);
  5347                           
  5348  018C  1816               	btfsc	22,0	;volatile
  5349  018D  298C               	goto	l638
  5350                           
  5351                           ;Communication.c: 112: PIR1bits.SSP1IF = 0;
  5352  018E  0020               	movlb	0	; select bank0
  5353  018F  1190               	bcf	16,3	;volatile
  5354                           
  5355                           ;Communication.c: 114: SSP1BUF = slaveAddress << 1;
  5356  0190  3550               	lslf	I2C_Write@slaveAddress,w
  5357  0191  0024               	movlb	4	; select bank4
  5358  0192  0091               	movwf	17	;volatile
  5359  0193                     l641:	
  5360                           ;Communication.c: 115: while(!PIR1bits.SSP1IF);
  5361                           
  5362  0193  0020               	movlb	0	; select bank0
  5363  0194  1D90               	btfss	16,3	;volatile
  5364  0195  2993               	goto	l641
  5365                           
  5366                           ;Communication.c: 116: PIR1bits.SSP1IF = 0;
  5367  0196  1190               	bcf	16,3	;volatile
  5368                           
  5369                           ;Communication.c: 117: acknowledge = SSP1CON2bits.ACKSTAT;
  5370  0197  3000               	movlw	0
  5371  0198  0024               	movlb	4	; select bank4
  5372  0199  1B16               	btfsc	22,6	;volatile
  5373  019A  3001               	movlw	1
  5374  019B  0020               	movlb	0	; select bank0
  5375  019C  00D1               	movwf	I2C_Write@acknowledge
  5376                           
  5377                           ;Communication.c: 118: if (acknowledge == 0)
  5378  019D  0851               	movf	I2C_Write@acknowledge,w
  5379  019E  1D03               	btfss	3,2
  5380  019F  29B7               	goto	l3021
  5381                           
  5382                           ;Communication.c: 119: {
  5383                           ;Communication.c: 120: for(byte = 0; byte < bytesNumber; byte++)
  5384  01A0  01D2               	clrf	I2C_Write@byte
  5385  01A1                     l3019:	
  5386  01A1  084C               	movf	I2C_Write@bytesNumber,w
  5387  01A2  0252               	subwf	I2C_Write@byte,w
  5388  01A3  1803               	btfsc	3,0
  5389  01A4  29BB               	goto	l3023
  5390                           
  5391                           ;Communication.c: 121: {
  5392                           ;Communication.c: 122: SSP1BUF = dataBuffer[byte];
  5393  01A5  0852               	movf	I2C_Write@byte,w
  5394  01A6  074B               	addwf	I2C_Write@dataBuffer,w
  5395  01A7  00CE               	movwf	??_I2C_Write
  5396  01A8  084E               	movf	??_I2C_Write,w
  5397  01A9  0086               	movwf	6
  5398  01AA  0187               	clrf	7
  5399  01AB  0801               	movf	1,w
  5400  01AC  0024               	movlb	4	; select bank4
  5401  01AD  0091               	movwf	17	;volatile
  5402  01AE                     l647:	
  5403                           ;Communication.c: 123: while(!PIR1bits.SSP1IF);
  5404                           
  5405  01AE  0020               	movlb	0	; select bank0
  5406  01AF  1D90               	btfss	16,3	;volatile
  5407  01B0  29AE               	goto	l647
  5408                           
  5409                           ;Communication.c: 124: PIR1bits.SSP1IF = 0;
  5410  01B1  1190               	bcf	16,3	;volatile
  5411  01B2  3001               	movlw	1
  5412  01B3  00CE               	movwf	??_I2C_Write
  5413  01B4  084E               	movf	??_I2C_Write,w
  5414  01B5  07D2               	addwf	I2C_Write@byte,f
  5415  01B6  29A1               	goto	l3019
  5416  01B7                     l3021:	
  5417                           ;Communication.c: 125: }
  5418                           ;Communication.c: 126: }
  5419                           
  5420                           
  5421                           ;Communication.c: 127: else
  5422                           ;Communication.c: 128: {
  5423                           ;Communication.c: 129: status = 0xFF;
  5424  01B7  30FF               	movlw	255
  5425  01B8  00CE               	movwf	??_I2C_Write
  5426  01B9  084E               	movf	??_I2C_Write,w
  5427  01BA  00CF               	movwf	I2C_Write@status
  5428  01BB                     l3023:	
  5429                           
  5430                           ;Communication.c: 130: }
  5431                           ;Communication.c: 131: if(stopBit)
  5432  01BB  084D               	movf	I2C_Write@stopBit,w
  5433  01BC  1903               	btfsc	3,2
  5434  01BD  0008               	return
  5435                           
  5436                           ;Communication.c: 132: {
  5437                           ;Communication.c: 133: SSP1CON2bits.PEN = 1;
  5438  01BE  0024               	movlb	4	; select bank4
  5439  01BF  1516               	bsf	22,2	;volatile
  5440  01C0                     l653:	
  5441                           ;Communication.c: 134: while(SSP1CON2bits.PEN);
  5442                           
  5443  01C0  1D16               	btfss	22,2	;volatile
  5444  01C1  0008               	return
  5445  01C2  29C0               	goto	l653
  5446  01C3                     __end_of_I2C_Write:	
  5447                           ;Communication.c: 135: }
  5448                           ;Communication.c: 137: return status;
  5449                           ;	Return value of _I2C_Write is never used
  5450                           
  5451                           
  5452                           	psect	text12
  5453  0044                     __ptext12:	
  5454 ;; *************** function _I2C_Read *****************
  5455 ;; Defined at:
  5456 ;;		line 152 in file "Communication.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  slaveAddress    1    wreg     unsigned char 
  5459 ;;  dataBuffer      1    5[BANK0 ] PTR unsigned char 
  5460 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@registerValue(1), 
  5461 ;;  bytesNumber     1    6[BANK0 ] unsigned char 
  5462 ;;  stopBit         1    7[BANK0 ] unsigned char 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  slaveAddress    1   11[BANK0 ] unsigned char 
  5465 ;;  byte            1   13[BANK0 ] unsigned char 
  5466 ;;  acknowledge     1   12[BANK0 ] unsigned char 
  5467 ;;  status          1   10[BANK0 ] unsigned char 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      unsigned char 
  5470 ;; Registers used:
  5471 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5477 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5479 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5480 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5481 ;;Total ram usage:        9 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:    5
  5484 ;; This function calls:
  5485 ;;		Nothing
  5486 ;; This function is called by:
  5487 ;;		_ADXL345_GetRegisterValue
  5488 ;;		_ADXL345_GetXyz
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           
  5493                           ;psect for function _I2C_Read
  5494  0044                     _I2C_Read:	
  5495                           
  5496                           ;incstack = 0
  5497                           ; Regs used in _I2C_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5498                           ;I2C_Read@slaveAddress stored from wreg
  5499  0044  0020               	movlb	0	; select bank0
  5500  0045  00D1               	movwf	I2C_Read@slaveAddress
  5501                           
  5502                           ;Communication.c: 157: unsigned char status = bytesNumber;
  5503  0046  084C               	movf	I2C_Read@bytesNumber,w
  5504  0047  00CE               	movwf	??_I2C_Read
  5505  0048  084E               	movf	??_I2C_Read,w
  5506  0049  00D0               	movwf	I2C_Read@status
  5507                           
  5508                           ;Communication.c: 158: unsigned char acknowledge = 0;
  5509  004A  01D2               	clrf	I2C_Read@acknowledge
  5510                           
  5511                           ;Communication.c: 159: unsigned char byte = 0;
  5512  004B  01D3               	clrf	I2C_Read@byte
  5513                           
  5514                           ;Communication.c: 161: SSP1CON2bits.RSEN = 1;
  5515  004C  0024               	movlb	4	; select bank4
  5516  004D  1496               	bsf	22,1	;volatile
  5517  004E                     l659:	
  5518                           ;Communication.c: 162: while(SSP1CON2bits.RSEN);
  5519                           
  5520  004E  1896               	btfsc	22,1	;volatile
  5521  004F  284E               	goto	l659
  5522                           
  5523                           ;Communication.c: 163: PIR1bits.SSP1IF = 0;
  5524  0050  0020               	movlb	0	; select bank0
  5525  0051  1190               	bcf	16,3	;volatile
  5526                           
  5527                           ;Communication.c: 165: SSP1BUF = (slaveAddress << 1) + 1;
  5528  0052  1403               	setc
  5529  0053  0D51               	rlf	I2C_Read@slaveAddress,w
  5530  0054  0024               	movlb	4	; select bank4
  5531  0055  0091               	movwf	17	;volatile
  5532  0056                     l662:	
  5533                           ;Communication.c: 166: while(!PIR1bits.SSP1IF);
  5534                           
  5535  0056  0020               	movlb	0	; select bank0
  5536  0057  1D90               	btfss	16,3	;volatile
  5537  0058  2856               	goto	l662
  5538                           
  5539                           ;Communication.c: 167: PIR1bits.SSP1IF = 0;
  5540  0059  1190               	bcf	16,3	;volatile
  5541                           
  5542                           ;Communication.c: 168: acknowledge = SSP1CON2bits.ACKSTAT;
  5543  005A  3000               	movlw	0
  5544  005B  0024               	movlb	4	; select bank4
  5545  005C  1B16               	btfsc	22,6	;volatile
  5546  005D  3001               	movlw	1
  5547  005E  0020               	movlb	0	; select bank0
  5548  005F  00D2               	movwf	I2C_Read@acknowledge
  5549                           
  5550                           ;Communication.c: 169: if (acknowledge == 0)
  5551  0060  0852               	movf	I2C_Read@acknowledge,w
  5552  0061  1D03               	btfss	3,2
  5553  0062  2891               	goto	l3053
  5554                           
  5555                           ;Communication.c: 170: {
  5556                           ;Communication.c: 171: for(byte = 0; byte < bytesNumber; byte++)
  5557  0063  01D3               	clrf	I2C_Read@byte
  5558  0064                     l3051:	
  5559  0064  084C               	movf	I2C_Read@bytesNumber,w
  5560  0065  0253               	subwf	I2C_Read@byte,w
  5561  0066  1803               	btfsc	3,0
  5562  0067  2895               	goto	l3055
  5563                           
  5564                           ;Communication.c: 172: {
  5565                           ;Communication.c: 173: SSP1CON2bits.RCEN = 1;
  5566  0068  0024               	movlb	4	; select bank4
  5567  0069  1596               	bsf	22,3	;volatile
  5568  006A                     l668:	
  5569                           ;Communication.c: 174: while(!SSP1STATbits.BF);
  5570                           
  5571  006A  1C14               	btfss	20,0	;volatile
  5572  006B  286A               	goto	l668
  5573                           
  5574                           ;Communication.c: 175: dataBuffer[byte] = SSPBUF;
  5575  006C  0811               	movf	17,w	;volatile
  5576  006D  0020               	movlb	0	; select bank0
  5577  006E  00CE               	movwf	??_I2C_Read
  5578  006F  0853               	movf	I2C_Read@byte,w
  5579  0070  074B               	addwf	I2C_Read@dataBuffer,w
  5580  0071  00CF               	movwf	??_I2C_Read+1
  5581  0072  084F               	movf	??_I2C_Read+1,w
  5582  0073  0086               	movwf	6
  5583  0074  0187               	clrf	7
  5584  0075  084E               	movf	??_I2C_Read,w
  5585  0076  0081               	movwf	1
  5586                           
  5587                           ;Communication.c: 176: if(byte == (bytesNumber - 1))
  5588  0077  084C               	movf	I2C_Read@bytesNumber,w
  5589  0078  3EFF               	addlw	255
  5590  0079  00CE               	movwf	??_I2C_Read
  5591  007A  30FF               	movlw	255
  5592  007B  1803               	skipnc
  5593  007C  3000               	movlw	0
  5594  007D  00CF               	movwf	??_I2C_Read+1
  5595  007E  0853               	movf	I2C_Read@byte,w
  5596  007F  064E               	xorwf	??_I2C_Read,w
  5597  0080  044F               	iorwf	??_I2C_Read+1,w
  5598  0081  1D03               	skipz
  5599  0082  2886               	goto	l671
  5600                           
  5601                           ;Communication.c: 177: {
  5602                           ;Communication.c: 178: SSP1CON2bits.ACKDT = 1;
  5603  0083  0024               	movlb	4	; select bank4
  5604  0084  1696               	bsf	22,5	;volatile
  5605                           
  5606                           ;Communication.c: 179: }
  5607  0085  2888               	goto	l672
  5608  0086                     l671:	
  5609                           
  5610                           ;Communication.c: 180: else
  5611                           ;Communication.c: 181: {
  5612                           ;Communication.c: 182: SSP1CON2bits.ACKDT = 0;
  5613  0086  0024               	movlb	4	; select bank4
  5614  0087  1296               	bcf	22,5	;volatile
  5615  0088                     l672:	
  5616                           
  5617                           ;Communication.c: 183: }
  5618                           ;Communication.c: 184: SSP1CON2bits.ACKEN = 1;
  5619  0088  1616               	bsf	22,4	;volatile
  5620  0089                     l673:	
  5621                           ;Communication.c: 185: while(SSP1CON2bits.ACKEN);
  5622                           
  5623  0089  1A16               	btfsc	22,4	;volatile
  5624  008A  2889               	goto	l673
  5625  008B  3001               	movlw	1
  5626  008C  0020               	movlb	0	; select bank0
  5627  008D  00CE               	movwf	??_I2C_Read
  5628  008E  084E               	movf	??_I2C_Read,w
  5629  008F  07D3               	addwf	I2C_Read@byte,f
  5630  0090  2864               	goto	l3051
  5631  0091                     l3053:	
  5632                           ;Communication.c: 186: }
  5633                           ;Communication.c: 187: }
  5634                           
  5635                           
  5636                           ;Communication.c: 188: else
  5637                           ;Communication.c: 189: {
  5638                           ;Communication.c: 190: status = 0xFF;
  5639  0091  30FF               	movlw	255
  5640  0092  00CE               	movwf	??_I2C_Read
  5641  0093  084E               	movf	??_I2C_Read,w
  5642  0094  00D0               	movwf	I2C_Read@status
  5643  0095                     l3055:	
  5644                           
  5645                           ;Communication.c: 191: }
  5646                           ;Communication.c: 192: SSP1CON2bits.PEN = 1;
  5647  0095  0024               	movlb	4	; select bank4
  5648  0096  1516               	bsf	22,2	;volatile
  5649  0097                     l678:	
  5650                           ;Communication.c: 193: while(SSP1CON2bits.PEN);
  5651                           
  5652  0097  1D16               	btfss	22,2	;volatile
  5653  0098  0008               	return
  5654  0099  2897               	goto	l678
  5655  009A                     __end_of_I2C_Read:	
  5656                           ;Communication.c: 195: return status;
  5657                           ;	Return value of _I2C_Read is never used
  5658                           
  5659                           
  5660                           	psect	intentry
  5661  0004                     __pintentry:	
  5662 ;; *************** function _INTERRUPT_InterruptManager *****************
  5663 ;; Defined at:
  5664 ;;		line 51 in file "interrupt_manager.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;		None
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;		None
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  1    wreg      void 
  5671 ;; Registers used:
  5672 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5681 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;Total ram usage:        1 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; Hardware stack levels required when called:    4
  5685 ;; This function calls:
  5686 ;;		_I2C_BusCollisionISR
  5687 ;;		_PIN_MANAGER_IOC
  5688 ;;		_TMR0_ISR
  5689 ;; This function is called by:
  5690 ;;		Interrupt level 1
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694  0004                     _INTERRUPT_InterruptManager:	
  5695                           
  5696                           ;incstack = 0
  5697  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5698                           
  5699                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5700  0005  3180               	pagesel	$
  5701  0006  0020               	movlb	0	; select bank0
  5702  0007  087F               	movf	127,w
  5703  0008  00CA               	movwf	??_INTERRUPT_InterruptManager
  5704                           
  5705                           ;interrupt_manager.c: 54: if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  5706  0009  198B               	btfsc	11,3	;volatile
  5707  000A  1C0B               	btfss	11,0	;volatile
  5708  000B  2810               	goto	i1l340
  5709                           
  5710                           ;interrupt_manager.c: 55: {
  5711                           ;interrupt_manager.c: 56: PIN_MANAGER_IOC();
  5712  000C  3183  23AC  3180   	fcall	_PIN_MANAGER_IOC
  5713                           
  5714                           ;interrupt_manager.c: 57: }
  5715  000F  282A               	goto	i1l350
  5716  0010                     i1l340:	
  5717                           
  5718                           ;interrupt_manager.c: 58: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  5719  0010  1A8B               	btfsc	11,5	;volatile
  5720  0011  1D0B               	btfss	11,2	;volatile
  5721  0012  2817               	goto	i1l342
  5722                           
  5723                           ;interrupt_manager.c: 59: {
  5724                           ;interrupt_manager.c: 60: TMR0_ISR();
  5725  0013  3183  230B  3180   	fcall	_TMR0_ISR
  5726                           
  5727                           ;interrupt_manager.c: 61: }
  5728  0016  282A               	goto	i1l350
  5729  0017                     i1l342:	
  5730                           
  5731                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1)
  5732  0017  1F0B               	btfss	11,6	;volatile
  5733  0018  282A               	goto	i1l350
  5734                           
  5735                           ;interrupt_manager.c: 63: {
  5736                           ;interrupt_manager.c: 64: if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  5737  0019  0021               	movlb	1	; select bank1
  5738  001A  1D91               	btfss	17,3	;volatile
  5739  001B  2823               	goto	i1l345
  5740  001C  0020               	movlb	0	; select bank0
  5741  001D  1D91               	btfss	17,3	;volatile
  5742  001E  2823               	goto	i1l345
  5743                           
  5744                           ;interrupt_manager.c: 65: {
  5745                           ;interrupt_manager.c: 66: I2C_BusCollisionISR();
  5746  001F  3183  23B5  3180   	fcall	_I2C_BusCollisionISR
  5747                           
  5748                           ;interrupt_manager.c: 67: }
  5749  0022  282A               	goto	i1l350
  5750  0023                     i1l345:	
  5751                           
  5752                           ;interrupt_manager.c: 68: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  5753  0023  0021               	movlb	1	; select bank1
  5754  0024  1D90               	btfss	16,3	;volatile
  5755  0025  282A               	goto	i1l350
  5756  0026  0020               	movlb	0	; select bank0
  5757  0027  1D90               	btfss	16,3	;volatile
  5758  0028  282A               	goto	i1l350
  5759                           
  5760                           ;interrupt_manager.c: 69: {
  5761                           ;interrupt_manager.c: 70: PIR1bits.SSP1IF = 0;
  5762  0029  1190               	bcf	16,3	;volatile
  5763  002A                     i1l350:	
  5764                           ;interrupt_manager.c: 78: else
  5765                           ;interrupt_manager.c: 79: {
  5766                           
  5767                           ;interrupt_manager.c: 76: }
  5768                           ;interrupt_manager.c: 77: }
  5769                           
  5770                           ;interrupt_manager.c: 73: else
  5771                           ;interrupt_manager.c: 74: {
  5772                           
  5773                           ;interrupt_manager.c: 72: }
  5774                           
  5775  002A  0020               	movlb	0	; select bank0
  5776  002B  084A               	movf	??_INTERRUPT_InterruptManager,w
  5777  002C  00FF               	movwf	127
  5778  002D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5779  002E  0009               	retfie
  5780  002F                     __end_of_INTERRUPT_InterruptManager:	
  5781                           
  5782                           	psect	text14
  5783  030B                     __ptext14:	
  5784 ;; *************** function _TMR0_ISR *****************
  5785 ;; Defined at:
  5786 ;;		line 115 in file "tmr0.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;		None
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;		None
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      void 
  5793 ;; Registers used:
  5794 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;Total ram usage:        0 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; Hardware stack levels required when called:    3
  5807 ;; This function calls:
  5808 ;;		_TMR0_CallBack
  5809 ;; This function is called by:
  5810 ;;		_INTERRUPT_InterruptManager
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           
  5815                           ;psect for function _TMR0_ISR
  5816  030B                     _TMR0_ISR:	
  5817                           
  5818                           ;tmr0.c: 117: static volatile uint16_t CountCallBack = 0;
  5819                           ;tmr0.c: 120: INTCONbits.TMR0IF = 0;
  5820                           
  5821                           ;incstack = 0
  5822                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5823  030B  110B               	bcf	11,2	;volatile
  5824                           
  5825                           ;tmr0.c: 122: TMR0 = timer0ReloadVal;
  5826  030C  0020               	movlb	0	; select bank0
  5827  030D  0861               	movf	_timer0ReloadVal,w	;volatile
  5828  030E  0095               	movwf	21	;volatile
  5829                           
  5830                           ;tmr0.c: 125: if (++CountCallBack >= 5)
  5831  030F  3001               	movlw	1
  5832  0310  07AD               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  5833  0311  3000               	movlw	0
  5834  0312  3DAE               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  5835  0313  3000               	movlw	0
  5836  0314  022E               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  5837  0315  3005               	movlw	5
  5838  0316  1903               	skipnz
  5839  0317  022D               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  5840  0318  1C03               	skipc
  5841  0319  2B21               	goto	L2
  5842                           
  5843                           ;tmr0.c: 126: {
  5844                           ;tmr0.c: 128: TMR0_CallBack();
  5845  031A  3183  237E  3183   	fcall	_TMR0_CallBack
  5846                           
  5847                           ;tmr0.c: 131: CountCallBack = 0;
  5848  031D  0020               	movlb	0	; select bank0
  5849  031E  01AD               	clrf	TMR0_ISR@CountCallBack	;volatile
  5850  031F  01AE               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  5851                           
  5852                           ;tmr0.c: 132: }
  5853                           ;tmr0.c: 133: do { LATCbits.LATC5 = ~LATCbits.LATC5; } while(0);
  5854  0320  1003               	clrc
  5855  0321                     L2:	
  5856  0321  0022               	movlb	2	; select bank2
  5857  0322  1E8E               	btfss	14,5	;volatile
  5858  0323  1403               	setc
  5859  0324  1C03               	btfss	3,0
  5860  0325  2B29               	goto	u205_20
  5861  0326  0022               	movlb	2	; select bank2
  5862  0327  168E               	bsf	14,5	;volatile
  5863  0328  0008               	return
  5864  0329                     u205_20:	
  5865  0329  0022               	movlb	2	; select bank2
  5866  032A  128E               	bcf	14,5	;volatile
  5867  032B  0008               	return
  5868  032C                     __end_of_TMR0_ISR:	
  5869                           
  5870                           	psect	text15
  5871  037E                     __ptext15:	
  5872 ;; *************** function _TMR0_CallBack *****************
  5873 ;; Defined at:
  5874 ;;		line 138 in file "tmr0.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  DeviceID        1   13[COMMON] unsigned char 
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  1    wreg      void 
  5881 ;; Registers used:
  5882 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5890 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5892 ;;Total ram usage:        2 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:    2
  5895 ;; This function calls:
  5896 ;;		Absolute function
  5897 ;;		_TMR0_DefaultInterruptHandler
  5898 ;;		i1_ADXL345_GetRegisterValue
  5899 ;; This function is called by:
  5900 ;;		_TMR0_ISR
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           
  5905                           ;psect for function _TMR0_CallBack
  5906  037E                     _TMR0_CallBack:	
  5907                           
  5908                           ;tmr0.c: 141: unsigned char DeviceID;
  5909                           ;tmr0.c: 142: DeviceID = ADXL345_GetRegisterValue(0x00);
  5910                           
  5911                           ;incstack = 0
  5912                           ; Regs used in _TMR0_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5913  037E  3000               	movlw	0
  5914  037F  3182  2278  3183   	fcall	i1_ADXL345_GetRegisterValue
  5915  0382  00FC               	movwf	??_TMR0_CallBack
  5916  0383  087C               	movf	??_TMR0_CallBack,w
  5917  0384  00FD               	movwf	TMR0_CallBack@DeviceID
  5918                           
  5919                           ;tmr0.c: 143: if(TMR0_InterruptHandler)
  5920  0385  0020               	movlb	0	; select bank0
  5921  0386  085F               	movf	_TMR0_InterruptHandler,w
  5922  0387  0460               	iorwf	_TMR0_InterruptHandler+1,w
  5923  0388  1903               	btfsc	3,2
  5924  0389  0008               	return
  5925                           
  5926                           ;tmr0.c: 144: {
  5927                           ;tmr0.c: 145: TMR0_InterruptHandler();
  5928  038A  0860               	movf	_TMR0_InterruptHandler+1,w
  5929  038B  008A               	movwf	10
  5930  038C  085F               	movf	_TMR0_InterruptHandler,w
  5931  038D  000A               	callw
  5932  038E  3183               	pagesel	$
  5933  038F  0008               	return
  5934  0390                     __end_of_TMR0_CallBack:	
  5935                           
  5936                           	psect	text16
  5937  0278                     __ptext16:	
  5938 ;; *************** function i1_ADXL345_GetRegisterValue *****************
  5939 ;; Defined at:
  5940 ;;		line 67 in file "ADXL345.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  registerAddr    1    wreg     unsigned char 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  registerAddr    1    2[BANK0 ] unsigned char 
  5945 ;;  ADXL345_GetR    2    0[BANK0 ] unsigned char [2]
  5946 ;;  ADXL345_GetR    1    3[BANK0 ] unsigned char 
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  1    wreg      unsigned char 
  5949 ;; Registers used:
  5950 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5957 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5959 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;Total ram usage:        6 bytes
  5961 ;; Hardware stack levels used:    1
  5962 ;; Hardware stack levels required when called:    1
  5963 ;; This function calls:
  5964 ;;		i1_I2C_Read
  5965 ;;		i1_I2C_Write
  5966 ;;		i1_SPI_Read
  5967 ;; This function is called by:
  5968 ;;		_TMR0_CallBack
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           
  5973                           ;psect for function i1_ADXL345_GetRegisterValue
  5974  0278                     i1_ADXL345_GetRegisterValue:	
  5975                           
  5976                           ;incstack = 0
  5977                           ; Regs used in i1_ADXL345_GetRegisterValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5978                           ;i1ADXL345_GetRegisterValue@registerAddress stored from wreg
  5979  0278  0020               	movlb	0	; select bank0
  5980  0279  00C8               	movwf	i1ADXL345_GetRegisterValue@registerAddress
  5981                           
  5982                           ;ADXL345.c: 69: unsigned char dataBuffer[2] = {0, 0};
  5983  027A  082C               	movf	ADXL345_GetRegisterValue@F91+1,w
  5984  027B  00C7               	movwf	i1ADXL345_GetRegisterValue@dataBuffer+1
  5985  027C  082B               	movf	ADXL345_GetRegisterValue@F91,w
  5986  027D  00C6               	movwf	i1ADXL345_GetRegisterValue@dataBuffer
  5987                           
  5988                           ;ADXL345.c: 70: unsigned char registerValue = 0;
  5989  027E  01C9               	clrf	i1ADXL345_GetRegisterValue@registerValue
  5990                           
  5991                           ;ADXL345.c: 72: if(communicationType == 0)
  5992  027F  0831               	movf	_communicationType,w
  5993  0280  1D03               	btfss	3,2
  5994  0281  2A9A               	goto	i1l2259
  5995                           
  5996                           ;ADXL345.c: 73: {
  5997                           ;ADXL345.c: 74: dataBuffer[0] = (1 << 7) | registerAddress;
  5998  0282  0848               	movf	i1ADXL345_GetRegisterValue@registerAddress,w
  5999  0283  3880               	iorlw	128
  6000  0284  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  6001  0285  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  6002  0286  00C6               	movwf	i1ADXL345_GetRegisterValue@dataBuffer
  6003                           
  6004                           ;ADXL345.c: 75: dataBuffer[1] = 0;
  6005  0287  01C7               	clrf	i1ADXL345_GetRegisterValue@dataBuffer+1
  6006                           
  6007                           ;ADXL345.c: 76: SPI_Read(1, dataBuffer, 2);
  6008  0288  3046               	movlw	(low (i1ADXL345_GetRegisterValue@dataBuffer| 0))& (0+255)
  6009  0289  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  6010  028A  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  6011  028B  00F0               	movwf	i1SPI_Read@data
  6012  028C  3002               	movlw	2
  6013  028D  00FB               	movwf	??i1_ADXL345_GetRegisterValue+1
  6014  028E  087B               	movf	??i1_ADXL345_GetRegisterValue+1,w
  6015  028F  00F1               	movwf	i1SPI_Read@bytesNumber
  6016  0290  3001               	movlw	1
  6017  0291  3181  2138  3182   	fcall	i1_SPI_Read
  6018                           
  6019                           ;ADXL345.c: 77: registerValue = dataBuffer[1];
  6020  0294  0020               	movlb	0	; select bank0
  6021  0295  0847               	movf	i1ADXL345_GetRegisterValue@dataBuffer+1,w
  6022  0296  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  6023  0297  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  6024  0298  00C9               	movwf	i1ADXL345_GetRegisterValue@registerValue
  6025                           
  6026                           ;ADXL345.c: 78: }
  6027  0299  2AB0               	goto	i1l2261
  6028  029A                     i1l2259:	
  6029                           
  6030                           ;ADXL345.c: 79: else
  6031                           ;ADXL345.c: 80: {
  6032                           ;ADXL345.c: 81: I2C_Write(0x1D,
  6033                           ;ADXL345.c: 82: &registerAddress,
  6034                           ;ADXL345.c: 83: 1,
  6035                           ;ADXL345.c: 84: 0);
  6036  029A  3048               	movlw	(low (i1ADXL345_GetRegisterValue@registerAddress| 0))& (0+255)
  6037  029B  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  6038  029C  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  6039  029D  00F0               	movwf	i1I2C_Write@dataBuffer
  6040  029E  01F1               	clrf	i1I2C_Write@bytesNumber
  6041  029F  0AF1               	incf	i1I2C_Write@bytesNumber,f
  6042  02A0  01F2               	clrf	i1I2C_Write@stopBit
  6043  02A1  301D               	movlw	29
  6044  02A2  3182  223C  3182   	fcall	i1_I2C_Write
  6045                           
  6046                           ;ADXL345.c: 85: I2C_Read(0x1D,
  6047                           ;ADXL345.c: 86: &registerValue,
  6048                           ;ADXL345.c: 87: 1,
  6049                           ;ADXL345.c: 88: 1);
  6050  02A5  3049               	movlw	(low (i1ADXL345_GetRegisterValue@registerValue| 0))& (0+255)
  6051  02A6  00FA               	movwf	??i1_ADXL345_GetRegisterValue
  6052  02A7  087A               	movf	??i1_ADXL345_GetRegisterValue,w
  6053  02A8  00F0               	movwf	i1I2C_Read@dataBuffer
  6054  02A9  01F1               	clrf	i1I2C_Read@bytesNumber
  6055  02AA  0AF1               	incf	i1I2C_Read@bytesNumber,f
  6056  02AB  01F2               	clrf	i1I2C_Read@stopBit
  6057  02AC  0AF2               	incf	i1I2C_Read@stopBit,f
  6058  02AD  301D               	movlw	29
  6059  02AE  3180  20EA         	fcall	i1_I2C_Read
  6060  02B0                     i1l2261:	
  6061                           
  6062                           ;ADXL345.c: 89: }
  6063                           ;ADXL345.c: 91: return registerValue;
  6064  02B0  0020               	movlb	0	; select bank0
  6065  02B1  0849               	movf	i1ADXL345_GetRegisterValue@registerValue,w
  6066  02B2  0008               	return
  6067  02B3                     __end_ofi1_ADXL345_GetRegisterValue:	
  6068                           
  6069                           	psect	text17
  6070  0138                     __ptext17:	
  6071 ;; *************** function i1_SPI_Read *****************
  6072 ;; Defined at:
  6073 ;;		line 261 in file "Communication.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  slaveDeviceI    1    wreg     unsigned char 
  6076 ;;  data            1    0[COMMON] PTR unsigned char 
  6077 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@dataBuffer(2), 
  6078 ;;  bytesNumber     1    1[COMMON] unsigned char 
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;  slaveDeviceI    1    8[COMMON] unsigned char 
  6081 ;;  SPI_Read        4    4[COMMON] unsigned char [4]
  6082 ;;  SPI_Read        1    9[COMMON] unsigned char 
  6083 ;; Return value:  Size  Location     Type
  6084 ;;                  1    wreg      unsigned char 
  6085 ;; Registers used:
  6086 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 0/0
  6090 ;;		Unchanged: 0/0
  6091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6093 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6094 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6095 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6096 ;;Total ram usage:       10 bytes
  6097 ;; Hardware stack levels used:    1
  6098 ;; This function calls:
  6099 ;;		Nothing
  6100 ;; This function is called by:
  6101 ;;		i1_ADXL345_GetRegisterValue
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105                           
  6106                           ;psect for function i1_SPI_Read
  6107  0138                     i1_SPI_Read:	
  6108                           
  6109                           ;incstack = 0
  6110                           ; Regs used in i1_SPI_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6111                           ;i1SPI_Read@slaveDeviceId stored from wreg
  6112  0138  00F8               	movwf	i1SPI_Read@slaveDeviceId
  6113                           
  6114                           ;Communication.c: 265: unsigned char byte = 0;
  6115  0139  01F9               	clrf	i1SPI_Read@byte
  6116                           
  6117                           ;Communication.c: 266: unsigned char writeBuffer[4] = {0, 0, 0, 0};
  6118  013A  0020               	movlb	0	; select bank0
  6119  013B  0828               	movf	SPI_Read@F12027+3,w
  6120  013C  00F7               	movwf	i1SPI_Read@writeBuffer+3
  6121  013D  0827               	movf	SPI_Read@F12027+2,w
  6122  013E  00F6               	movwf	i1SPI_Read@writeBuffer+2
  6123  013F  0826               	movf	SPI_Read@F12027+1,w
  6124  0140  00F5               	movwf	i1SPI_Read@writeBuffer+1
  6125  0141  0825               	movf	SPI_Read@F12027,w
  6126  0142  00F4               	movwf	i1SPI_Read@writeBuffer
  6127                           
  6128                           ;Communication.c: 269: SSP1CON1bits.WCOL = 0;
  6129  0143  0024               	movlb	4	; select bank4
  6130  0144  1395               	bcf	21,7	;volatile
  6131                           
  6132                           ;Communication.c: 271: for(byte = 0; byte < bytesNumber; byte++)
  6133  0145  01F9               	clrf	i1SPI_Read@byte
  6134  0146                     i1l2145:	
  6135  0146  0871               	movf	i1SPI_Read@bytesNumber,w
  6136  0147  0279               	subwf	i1SPI_Read@byte,w
  6137  0148  1803               	btfsc	3,0
  6138  0149  295D               	goto	i1l2147
  6139                           
  6140                           ;Communication.c: 272: {
  6141                           ;Communication.c: 273: writeBuffer[byte] = data[byte];
  6142  014A  0879               	movf	i1SPI_Read@byte,w
  6143  014B  0770               	addwf	i1SPI_Read@data,w
  6144  014C  00F2               	movwf	??i1_SPI_Read
  6145  014D  0872               	movf	??i1_SPI_Read,w
  6146  014E  0086               	movwf	6
  6147  014F  0187               	clrf	7
  6148  0150  0801               	movf	1,w
  6149  0151  00F3               	movwf	??i1_SPI_Read+1
  6150  0152  0879               	movf	i1SPI_Read@byte,w
  6151  0153  3E74               	addlw	(low (i1SPI_Read@writeBuffer| 0))& (0+255)
  6152  0154  0086               	movwf	6
  6153  0155  0187               	clrf	7
  6154  0156  0873               	movf	??i1_SPI_Read+1,w
  6155  0157  0081               	movwf	1
  6156  0158  3001               	movlw	1
  6157  0159  00F2               	movwf	??i1_SPI_Read
  6158  015A  0872               	movf	??i1_SPI_Read,w
  6159  015B  07F9               	addwf	i1SPI_Read@byte,f
  6160  015C  2946               	goto	i1l2145
  6161  015D                     i1l2147:	
  6162                           
  6163                           ;Communication.c: 274: }
  6164                           ;Communication.c: 275: if(slaveDeviceId == 1)
  6165  015D  0378               	decf	i1SPI_Read@slaveDeviceId,w
  6166  015E  1D03               	btfss	3,2
  6167  015F  2962               	goto	i1l2149
  6168                           
  6169                           ;Communication.c: 276: {
  6170                           ;Communication.c: 277: do { LATCbits.LATC6 = 0; } while(0);
  6171  0160  0022               	movlb	2	; select bank2
  6172  0161  130E               	bcf	14,6	;volatile
  6173  0162                     i1l2149:	
  6174                           
  6175                           ;Communication.c: 278: }
  6176                           ;Communication.c: 279: for(byte = 0; byte < bytesNumber; byte++)
  6177  0162  01F9               	clrf	i1SPI_Read@byte
  6178  0163                     i1l2157:	
  6179  0163  0871               	movf	i1SPI_Read@bytesNumber,w
  6180  0164  0279               	subwf	i1SPI_Read@byte,w
  6181  0165  1803               	btfsc	3,0
  6182  0166  297F               	goto	i1l2159
  6183                           
  6184                           ;Communication.c: 280: {
  6185                           ;Communication.c: 281: SSP1BUF = writeBuffer[byte];
  6186  0167  0879               	movf	i1SPI_Read@byte,w
  6187  0168  3E74               	addlw	(low (i1SPI_Read@writeBuffer| 0))& (0+255)
  6188  0169  0086               	movwf	6
  6189  016A  0187               	clrf	7
  6190  016B  0801               	movf	1,w
  6191  016C  0024               	movlb	4	; select bank4
  6192  016D  0091               	movwf	17	;volatile
  6193  016E                     i1l699:	
  6194                           ;Communication.c: 282: while(SSP1STATbits.BF == 0);
  6195                           
  6196  016E  1C14               	btfss	20,0	;volatile
  6197  016F  296E               	goto	i1l699
  6198                           
  6199                           ;Communication.c: 283: data[byte] = SSP1BUF;
  6200  0170  0811               	movf	17,w	;volatile
  6201  0171  00F2               	movwf	??i1_SPI_Read
  6202  0172  0879               	movf	i1SPI_Read@byte,w
  6203  0173  0770               	addwf	i1SPI_Read@data,w
  6204  0174  00F3               	movwf	??i1_SPI_Read+1
  6205  0175  0873               	movf	??i1_SPI_Read+1,w
  6206  0176  0086               	movwf	6
  6207  0177  0187               	clrf	7
  6208  0178  0872               	movf	??i1_SPI_Read,w
  6209  0179  0081               	movwf	1
  6210  017A  3001               	movlw	1
  6211  017B  00F2               	movwf	??i1_SPI_Read
  6212  017C  0872               	movf	??i1_SPI_Read,w
  6213  017D  07F9               	addwf	i1SPI_Read@byte,f
  6214  017E  2963               	goto	i1l2157
  6215  017F                     i1l2159:	
  6216                           
  6217                           ;Communication.c: 284: }
  6218                           ;Communication.c: 286: if(slaveDeviceId == 1)
  6219  017F  0378               	decf	i1SPI_Read@slaveDeviceId,w
  6220  0180  1D03               	btfss	3,2
  6221  0181  0008               	return
  6222                           
  6223                           ;Communication.c: 287: {
  6224                           ;Communication.c: 288: do { LATCbits.LATC6 = 1; } while(0);
  6225  0182  0022               	movlb	2	; select bank2
  6226  0183  170E               	bsf	14,6	;volatile
  6227  0184  0008               	return
  6228  0185                     __end_ofi1_SPI_Read:	
  6229                           ;Communication.c: 289: }
  6230                           ;Communication.c: 291: return bytesNumber;
  6231                           ;	Return value of i1_SPI_Read is never used
  6232                           
  6233                           
  6234                           	psect	text18
  6235  023C                     __ptext18:	
  6236 ;; *************** function i1_I2C_Write *****************
  6237 ;; Defined at:
  6238 ;;		line 100 in file "Communication.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  slaveAddress    1    wreg     unsigned char 
  6241 ;;  dataBuffer      1    0[COMMON] PTR unsigned char 
  6242 ;;		 -> ADXL345_GetXyz@firstRegAddress(1), ADXL345_SetRegisterValue@dataBuffer(2), ADXL345_GetRegisterValue@registerAddr
      +ess(1), 
  6243 ;;  bytesNumber     1    1[COMMON] unsigned char 
  6244 ;;  stopBit         1    2[COMMON] unsigned char 
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;  slaveAddress    1    5[COMMON] unsigned char 
  6247 ;;  I2C_Write       1    7[COMMON] unsigned char 
  6248 ;;  I2C_Write       1    6[COMMON] unsigned char 
  6249 ;;  I2C_Write       1    4[COMMON] unsigned char 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  1    wreg      unsigned char 
  6252 ;; Registers used:
  6253 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6259 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;Total ram usage:        8 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		i1_ADXL345_GetRegisterValue
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           
  6273                           ;psect for function i1_I2C_Write
  6274  023C                     i1_I2C_Write:	
  6275                           
  6276                           ;incstack = 0
  6277                           ; Regs used in i1_I2C_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  6278                           ;i1I2C_Write@slaveAddress stored from wreg
  6279  023C  00F5               	movwf	i1I2C_Write@slaveAddress
  6280                           
  6281                           ;Communication.c: 105: unsigned char status = 0;
  6282  023D  01F4               	clrf	i1I2C_Write@status
  6283                           
  6284                           ;Communication.c: 106: unsigned char acknowledge = 0;
  6285  023E  01F6               	clrf	i1I2C_Write@acknowledge
  6286                           
  6287                           ;Communication.c: 107: unsigned char byte = 0;
  6288  023F  01F7               	clrf	i1I2C_Write@byte
  6289                           
  6290                           ;Communication.c: 110: SSP1CON2bits.SEN = 1;
  6291  0240  0024               	movlb	4	; select bank4
  6292  0241  1416               	bsf	22,0	;volatile
  6293  0242                     i1l638:	
  6294                           ;Communication.c: 111: while(SSP1CON2bits.SEN);
  6295                           
  6296  0242  1816               	btfsc	22,0	;volatile
  6297  0243  2A42               	goto	i1l638
  6298                           
  6299                           ;Communication.c: 112: PIR1bits.SSP1IF = 0;
  6300  0244  0020               	movlb	0	; select bank0
  6301  0245  1190               	bcf	16,3	;volatile
  6302                           
  6303                           ;Communication.c: 114: SSP1BUF = slaveAddress << 1;
  6304  0246  3575               	lslf	i1I2C_Write@slaveAddress,w
  6305  0247  0024               	movlb	4	; select bank4
  6306  0248  0091               	movwf	17	;volatile
  6307  0249                     i1l641:	
  6308                           ;Communication.c: 115: while(!PIR1bits.SSP1IF);
  6309                           
  6310  0249  0020               	movlb	0	; select bank0
  6311  024A  1D90               	btfss	16,3	;volatile
  6312  024B  2A49               	goto	i1l641
  6313                           
  6314                           ;Communication.c: 116: PIR1bits.SSP1IF = 0;
  6315  024C  1190               	bcf	16,3	;volatile
  6316                           
  6317                           ;Communication.c: 117: acknowledge = SSP1CON2bits.ACKSTAT;
  6318  024D  3000               	movlw	0
  6319  024E  0024               	movlb	4	; select bank4
  6320  024F  1B16               	btfsc	22,6	;volatile
  6321  0250  3001               	movlw	1
  6322  0251  00F6               	movwf	i1I2C_Write@acknowledge
  6323                           
  6324                           ;Communication.c: 118: if (acknowledge == 0)
  6325  0252  0876               	movf	i1I2C_Write@acknowledge,w
  6326  0253  1D03               	btfss	3,2
  6327  0254  2A6C               	goto	i1l2097
  6328                           
  6329                           ;Communication.c: 119: {
  6330                           ;Communication.c: 120: for(byte = 0; byte < bytesNumber; byte++)
  6331  0255  01F7               	clrf	i1I2C_Write@byte
  6332  0256                     i1l2095:	
  6333  0256  0871               	movf	i1I2C_Write@bytesNumber,w
  6334  0257  0277               	subwf	i1I2C_Write@byte,w
  6335  0258  1803               	btfsc	3,0
  6336  0259  2A70               	goto	i1l2099
  6337                           
  6338                           ;Communication.c: 121: {
  6339                           ;Communication.c: 122: SSP1BUF = dataBuffer[byte];
  6340  025A  0877               	movf	i1I2C_Write@byte,w
  6341  025B  0770               	addwf	i1I2C_Write@dataBuffer,w
  6342  025C  00F3               	movwf	??i1_I2C_Write
  6343  025D  0873               	movf	??i1_I2C_Write,w
  6344  025E  0086               	movwf	6
  6345  025F  0187               	clrf	7
  6346  0260  0801               	movf	1,w
  6347  0261  0024               	movlb	4	; select bank4
  6348  0262  0091               	movwf	17	;volatile
  6349  0263                     i1l647:	
  6350                           ;Communication.c: 123: while(!PIR1bits.SSP1IF);
  6351                           
  6352  0263  0020               	movlb	0	; select bank0
  6353  0264  1D90               	btfss	16,3	;volatile
  6354  0265  2A63               	goto	i1l647
  6355                           
  6356                           ;Communication.c: 124: PIR1bits.SSP1IF = 0;
  6357  0266  1190               	bcf	16,3	;volatile
  6358  0267  3001               	movlw	1
  6359  0268  00F3               	movwf	??i1_I2C_Write
  6360  0269  0873               	movf	??i1_I2C_Write,w
  6361  026A  07F7               	addwf	i1I2C_Write@byte,f
  6362  026B  2A56               	goto	i1l2095
  6363  026C                     i1l2097:	
  6364                           ;Communication.c: 125: }
  6365                           ;Communication.c: 126: }
  6366                           
  6367                           
  6368                           ;Communication.c: 127: else
  6369                           ;Communication.c: 128: {
  6370                           ;Communication.c: 129: status = 0xFF;
  6371  026C  30FF               	movlw	255
  6372  026D  00F3               	movwf	??i1_I2C_Write
  6373  026E  0873               	movf	??i1_I2C_Write,w
  6374  026F  00F4               	movwf	i1I2C_Write@status
  6375  0270                     i1l2099:	
  6376                           
  6377                           ;Communication.c: 130: }
  6378                           ;Communication.c: 131: if(stopBit)
  6379  0270  0872               	movf	i1I2C_Write@stopBit,w
  6380  0271  1903               	btfsc	3,2
  6381  0272  0008               	return
  6382                           
  6383                           ;Communication.c: 132: {
  6384                           ;Communication.c: 133: SSP1CON2bits.PEN = 1;
  6385  0273  0024               	movlb	4	; select bank4
  6386  0274  1516               	bsf	22,2	;volatile
  6387  0275                     i1l653:	
  6388                           ;Communication.c: 134: while(SSP1CON2bits.PEN);
  6389                           
  6390  0275  1D16               	btfss	22,2	;volatile
  6391  0276  0008               	return
  6392  0277  2A75               	goto	i1l653
  6393  0278                     __end_ofi1_I2C_Write:	
  6394                           ;Communication.c: 135: }
  6395                           ;Communication.c: 137: return status;
  6396                           ;	Return value of i1_I2C_Write is never used
  6397                           
  6398                           
  6399                           	psect	text19
  6400  00EA                     __ptext19:	
  6401 ;; *************** function i1_I2C_Read *****************
  6402 ;; Defined at:
  6403 ;;		line 152 in file "Communication.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  slaveAddress    1    wreg     unsigned char 
  6406 ;;  dataBuffer      1    0[COMMON] PTR unsigned char 
  6407 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@registerValue(1), 
  6408 ;;  bytesNumber     1    1[COMMON] unsigned char 
  6409 ;;  stopBit         1    2[COMMON] unsigned char 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  slaveAddress    1    6[COMMON] unsigned char 
  6412 ;;  I2C_Read        1    8[COMMON] unsigned char 
  6413 ;;  I2C_Read        1    7[COMMON] unsigned char 
  6414 ;;  I2C_Read        1    5[COMMON] unsigned char 
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1    wreg      unsigned char 
  6417 ;; Registers used:
  6418 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6424 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;Total ram usage:        9 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; This function calls:
  6431 ;;		Nothing
  6432 ;; This function is called by:
  6433 ;;		i1_ADXL345_GetRegisterValue
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           
  6438                           ;psect for function i1_I2C_Read
  6439  00EA                     i1_I2C_Read:	
  6440                           
  6441                           ;incstack = 0
  6442                           ; Regs used in i1_I2C_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6443                           ;i1I2C_Read@slaveAddress stored from wreg
  6444  00EA  00F6               	movwf	i1I2C_Read@slaveAddress
  6445                           
  6446                           ;Communication.c: 157: unsigned char status = bytesNumber;
  6447  00EB  0871               	movf	i1I2C_Read@bytesNumber,w
  6448  00EC  00F3               	movwf	??i1_I2C_Read
  6449  00ED  0873               	movf	??i1_I2C_Read,w
  6450  00EE  00F5               	movwf	i1I2C_Read@status
  6451                           
  6452                           ;Communication.c: 158: unsigned char acknowledge = 0;
  6453  00EF  01F7               	clrf	i1I2C_Read@acknowledge
  6454                           
  6455                           ;Communication.c: 159: unsigned char byte = 0;
  6456  00F0  01F8               	clrf	i1I2C_Read@byte
  6457                           
  6458                           ;Communication.c: 161: SSP1CON2bits.RSEN = 1;
  6459  00F1  0024               	movlb	4	; select bank4
  6460  00F2  1496               	bsf	22,1	;volatile
  6461  00F3                     i1l659:	
  6462                           ;Communication.c: 162: while(SSP1CON2bits.RSEN);
  6463                           
  6464  00F3  1896               	btfsc	22,1	;volatile
  6465  00F4  28F3               	goto	i1l659
  6466                           
  6467                           ;Communication.c: 163: PIR1bits.SSP1IF = 0;
  6468  00F5  0020               	movlb	0	; select bank0
  6469  00F6  1190               	bcf	16,3	;volatile
  6470                           
  6471                           ;Communication.c: 165: SSP1BUF = (slaveAddress << 1) + 1;
  6472  00F7  1403               	setc
  6473  00F8  0D76               	rlf	i1I2C_Read@slaveAddress,w
  6474  00F9  0024               	movlb	4	; select bank4
  6475  00FA  0091               	movwf	17	;volatile
  6476  00FB                     i1l662:	
  6477                           ;Communication.c: 166: while(!PIR1bits.SSP1IF);
  6478                           
  6479  00FB  0020               	movlb	0	; select bank0
  6480  00FC  1D90               	btfss	16,3	;volatile
  6481  00FD  28FB               	goto	i1l662
  6482                           
  6483                           ;Communication.c: 167: PIR1bits.SSP1IF = 0;
  6484  00FE  1190               	bcf	16,3	;volatile
  6485                           
  6486                           ;Communication.c: 168: acknowledge = SSP1CON2bits.ACKSTAT;
  6487  00FF  3000               	movlw	0
  6488  0100  0024               	movlb	4	; select bank4
  6489  0101  1B16               	btfsc	22,6	;volatile
  6490  0102  3001               	movlw	1
  6491  0103  00F7               	movwf	i1I2C_Read@acknowledge
  6492                           
  6493                           ;Communication.c: 169: if (acknowledge == 0)
  6494  0104  0877               	movf	i1I2C_Read@acknowledge,w
  6495  0105  1D03               	btfss	3,2
  6496  0106  2930               	goto	i1l2129
  6497                           
  6498                           ;Communication.c: 170: {
  6499                           ;Communication.c: 171: for(byte = 0; byte < bytesNumber; byte++)
  6500  0107  01F8               	clrf	i1I2C_Read@byte
  6501  0108                     i1l2127:	
  6502  0108  0871               	movf	i1I2C_Read@bytesNumber,w
  6503  0109  0278               	subwf	i1I2C_Read@byte,w
  6504  010A  1803               	btfsc	3,0
  6505  010B  2934               	goto	i1l2131
  6506                           
  6507                           ;Communication.c: 172: {
  6508                           ;Communication.c: 173: SSP1CON2bits.RCEN = 1;
  6509  010C  1596               	bsf	22,3	;volatile
  6510  010D                     i1l668:	
  6511                           ;Communication.c: 174: while(!SSP1STATbits.BF);
  6512                           
  6513  010D  1C14               	btfss	20,0	;volatile
  6514  010E  290D               	goto	i1l668
  6515                           
  6516                           ;Communication.c: 175: dataBuffer[byte] = SSPBUF;
  6517  010F  0811               	movf	17,w	;volatile
  6518  0110  00F3               	movwf	??i1_I2C_Read
  6519  0111  0878               	movf	i1I2C_Read@byte,w
  6520  0112  0770               	addwf	i1I2C_Read@dataBuffer,w
  6521  0113  00F4               	movwf	??i1_I2C_Read+1
  6522  0114  0874               	movf	??i1_I2C_Read+1,w
  6523  0115  0086               	movwf	6
  6524  0116  0187               	clrf	7
  6525  0117  0873               	movf	??i1_I2C_Read,w
  6526  0118  0081               	movwf	1
  6527                           
  6528                           ;Communication.c: 176: if(byte == (bytesNumber - 1))
  6529  0119  0871               	movf	i1I2C_Read@bytesNumber,w
  6530  011A  3EFF               	addlw	255
  6531  011B  00F3               	movwf	??i1_I2C_Read
  6532  011C  30FF               	movlw	255
  6533  011D  1803               	skipnc
  6534  011E  3000               	movlw	0
  6535  011F  00F4               	movwf	??i1_I2C_Read+1
  6536  0120  0878               	movf	i1I2C_Read@byte,w
  6537  0121  0673               	xorwf	??i1_I2C_Read,w
  6538  0122  0474               	iorwf	??i1_I2C_Read+1,w
  6539  0123  1D03               	skipz
  6540  0124  2927               	goto	i1l671
  6541                           
  6542                           ;Communication.c: 177: {
  6543                           ;Communication.c: 178: SSP1CON2bits.ACKDT = 1;
  6544  0125  1696               	bsf	22,5	;volatile
  6545                           
  6546                           ;Communication.c: 179: }
  6547  0126  2928               	goto	i1l672
  6548  0127                     i1l671:	
  6549                           
  6550                           ;Communication.c: 180: else
  6551                           ;Communication.c: 181: {
  6552                           ;Communication.c: 182: SSP1CON2bits.ACKDT = 0;
  6553  0127  1296               	bcf	22,5	;volatile
  6554  0128                     i1l672:	
  6555                           
  6556                           ;Communication.c: 183: }
  6557                           ;Communication.c: 184: SSP1CON2bits.ACKEN = 1;
  6558  0128  1616               	bsf	22,4	;volatile
  6559  0129                     i1l673:	
  6560                           ;Communication.c: 185: while(SSP1CON2bits.ACKEN);
  6561                           
  6562  0129  1A16               	btfsc	22,4	;volatile
  6563  012A  2929               	goto	i1l673
  6564  012B  3001               	movlw	1
  6565  012C  00F3               	movwf	??i1_I2C_Read
  6566  012D  0873               	movf	??i1_I2C_Read,w
  6567  012E  07F8               	addwf	i1I2C_Read@byte,f
  6568  012F  2908               	goto	i1l2127
  6569  0130                     i1l2129:	
  6570                           ;Communication.c: 186: }
  6571                           ;Communication.c: 187: }
  6572                           
  6573                           
  6574                           ;Communication.c: 188: else
  6575                           ;Communication.c: 189: {
  6576                           ;Communication.c: 190: status = 0xFF;
  6577  0130  30FF               	movlw	255
  6578  0131  00F3               	movwf	??i1_I2C_Read
  6579  0132  0873               	movf	??i1_I2C_Read,w
  6580  0133  00F5               	movwf	i1I2C_Read@status
  6581  0134                     i1l2131:	
  6582                           
  6583                           ;Communication.c: 191: }
  6584                           ;Communication.c: 192: SSP1CON2bits.PEN = 1;
  6585  0134  1516               	bsf	22,2	;volatile
  6586  0135                     i1l678:	
  6587                           ;Communication.c: 193: while(SSP1CON2bits.PEN);
  6588                           
  6589  0135  1D16               	btfss	22,2	;volatile
  6590  0136  0008               	return
  6591  0137  2935               	goto	i1l678
  6592  0138                     __end_ofi1_I2C_Read:	
  6593                           ;Communication.c: 195: return status;
  6594                           ;	Return value of i1_I2C_Read is never used
  6595                           
  6596                           
  6597                           	psect	text20
  6598  03B8                     __ptext20:	
  6599 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6600 ;; Defined at:
  6601 ;;		line 153 in file "tmr0.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;		None
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;		None
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  1    wreg      void 
  6608 ;; Registers used:
  6609 ;;		None
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;Total ram usage:        0 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; This function calls:
  6622 ;;		Nothing
  6623 ;; This function is called by:
  6624 ;;		_TMR0_Initialize
  6625 ;;		_TMR0_CallBack
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           
  6630                           ;psect for function _TMR0_DefaultInterruptHandler
  6631  03B8                     _TMR0_DefaultInterruptHandler:	
  6632                           
  6633                           ;incstack = 0
  6634                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6635  03B8  0008               	return
  6636  03B9                     __end_of_TMR0_DefaultInterruptHandler:	
  6637                           
  6638                           	psect	text21
  6639  03AC                     __ptext21:	
  6640 ;; *************** function _PIN_MANAGER_IOC *****************
  6641 ;; Defined at:
  6642 ;;		line 112 in file "pin_manager.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;		None
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;		None
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		status,2, status,0, pclath, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6660 ;;Total ram usage:        0 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    1
  6663 ;; This function calls:
  6664 ;;		_IOCAF2_ISR
  6665 ;; This function is called by:
  6666 ;;		_INTERRUPT_InterruptManager
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           
  6671                           ;psect for function _PIN_MANAGER_IOC
  6672  03AC                     _PIN_MANAGER_IOC:	
  6673                           
  6674                           ;pin_manager.c: 115: if(IOCAFbits.IOCAF2 == 1)
  6675                           
  6676                           ;incstack = 0
  6677                           ; Regs used in _PIN_MANAGER_IOC: [status,2+status,0+pclath+cstack]
  6678  03AC  0027               	movlb	7	; select bank7
  6679  03AD  1D13               	btfss	19,2	;volatile
  6680  03AE  0008               	return
  6681                           
  6682                           ;pin_manager.c: 116: {
  6683                           ;pin_manager.c: 117: IOCAF2_ISR();
  6684  03AF  3183  23B2         	fcall	_IOCAF2_ISR
  6685  03B1  0008               	return
  6686  03B2                     __end_of_PIN_MANAGER_IOC:	
  6687                           
  6688                           	psect	text22
  6689  03B2                     __ptext22:	
  6690 ;; *************** function _IOCAF2_ISR *****************
  6691 ;; Defined at:
  6692 ;;		line 124 in file "pin_manager.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;		None
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;		None
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  1    wreg      void 
  6699 ;; Registers used:
  6700 ;;		None
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;Total ram usage:        0 bytes
  6711 ;; Hardware stack levels used:    1
  6712 ;; This function calls:
  6713 ;;		Nothing
  6714 ;; This function is called by:
  6715 ;;		_PIN_MANAGER_IOC
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           
  6720                           ;psect for function _IOCAF2_ISR
  6721  03B2                     _IOCAF2_ISR:	
  6722                           
  6723                           ;pin_manager.c: 128: IOCAFbits.IOCAF2 = 0;
  6724                           
  6725                           ;incstack = 0
  6726                           ; Regs used in _IOCAF2_ISR: []
  6727  03B2  0027               	movlb	7	; select bank7
  6728  03B3  1113               	bcf	19,2	;volatile
  6729  03B4  0008               	return
  6730  03B5                     __end_of_IOCAF2_ISR:	
  6731                           
  6732                           	psect	text23
  6733  03B5                     __ptext23:	
  6734 ;; *************** function _I2C_BusCollisionISR *****************
  6735 ;; Defined at:
  6736 ;;		line 728 in file "i2c.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;		None
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;		None
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      void 
  6743 ;; Registers used:
  6744 ;;		None
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6754 ;;Total ram usage:        0 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; This function calls:
  6757 ;;		Nothing
  6758 ;; This function is called by:
  6759 ;;		_INTERRUPT_InterruptManager
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           
  6764                           ;psect for function _I2C_BusCollisionISR
  6765  03B5                     _I2C_BusCollisionISR:	
  6766                           
  6767                           ;i2c.c: 731: PIR2bits.BCL1IF = 0;
  6768                           
  6769                           ;incstack = 0
  6770                           ; Regs used in _I2C_BusCollisionISR: []
  6771  03B5  0020               	movlb	0	; select bank0
  6772  03B6  1191               	bcf	17,3	;volatile
  6773  03B7  0008               	return
  6774  03B8                     __end_of_I2C_BusCollisionISR:	
  6775  007E                     btemp	set	126	;btemp
  6776  007E                     int$flags	set	126
  6777  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         45
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      66
    BANK1            80     14      21
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_tr_queue.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    SPI_Read@data	PTR unsigned char  size(1) Largest target is 7
		 -> ADXL345_GetXyz@readBuffer(COMMON[7]), ADXL345_GetRegisterValue@dataBuffer(BANK0[2]), 

    I2C_Read@dataBuffer	PTR unsigned char  size(1) Largest target is 7
		 -> ADXL345_GetXyz@readBuffer(COMMON[7]), ADXL345_GetRegisterValue@registerValue(BANK0[1]), 

    I2C_Write@dataBuffer	PTR unsigned char  size(1) Largest target is 2
		 -> ADXL345_GetXyz@firstRegAddress(COMMON[1]), ADXL345_SetRegisterValue@dataBuffer(COMMON[2]), ADXL345_GetRegisterValue@registerAddress(BANK0[1]), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_object.pTrTail.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    F12099.pbuffer	PTR unsigned char  size(1) Largest target is 0

    F12094.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    S621$pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c_current.pbuffer	PTR unsigned char  size(1) Largest target is 0

    S633$pTrFlag	PTR enum E11987 size(1) Largest target is 0

    p_i2c_current.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    S633$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    p_i2c_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    p_i2c_current	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S644$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    i2c_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    S644$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    i2c_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_TMR0_CallBack
    _TMR0_CallBack->i1_ADXL345_GetRegisterValue
    i1_ADXL345_GetRegisterValue->i1_SPI_Read

Critical Paths under _main in BANK0

    _main->_ADXL345_Init
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _ADXL345_Init->_ADXL345_GetRegisterValue
    _ADXL345_GetRegisterValue->_SPI_Read

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_CallBack->i1_ADXL345_GetRegisterValue

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0    3468
                                             24 BANK0      1     1      0
                                              0 BANK1     14    14      0
                       _ADXL345_Init
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     108
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     108
                                              7 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     108
                                              5 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADXL345_Init                                         3     3      0    3336
                                             21 BANK0      3     3      0
           _ADXL345_GetRegisterValue
                           _I2C_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                            14     8      6     336
                                              5 BANK0     13     7      6
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                            11     7      4     120
                                              5 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (2) _ADXL345_GetRegisterValue                             6     6      0    2775
                                             15 BANK0      6     6      0
                           _I2C_Read
                          _I2C_Write
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                            10     8      2     785
                                              5 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            8     5      3     938
                                              5 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             9     6      3     769
                                              5 BANK0      9     6      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0    1065
                                              4 BANK0      1     1      0
                _I2C_BusCollisionISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0    1065
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        2     2      0    1065
                                             12 COMMON     2     2      0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
         i1_ADXL345_GetRegisterValue
 ---------------------------------------------------------------------------------
 (7) i1_ADXL345_GetRegisterValue                           6     6      0    1064
                                             10 COMMON     2     2      0
                                              0 BANK0      4     4      0
                         i1_I2C_Read
                        i1_I2C_Write
                         i1_SPI_Read
 ---------------------------------------------------------------------------------
 (8) i1_SPI_Read                                          10     8      2     372
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (8) i1_I2C_Write                                          8     5      3     245
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (8) i1_I2C_Read                                           9     6      3     289
                                              0 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF2_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCAF2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADXL345_Init
     _ADXL345_GetRegisterValue
       _I2C_Read
       _I2C_Write
       _SPI_Read
     _I2C_Init
     _SPI_Init
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _I2C_BusCollisionISR
   _PIN_MANAGER_IOC
     _IOCAF2_ISR
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       i1_ADXL345_GetRegisterValue *
         i1_I2C_Read
         i1_I2C_Write
         i1_SPI_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      42       5       82.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      E      15       7       26.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      65      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      65      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 02 18:30:41 2018

         __end_of_ADXL345_GetRegisterValue 023C               ??i1_ADXL345_GetRegisterValue 007A  
                    I2C_ISR@i2c_bytes_left 0033                                __CFG_CP$OFF 0000  
                       __size_of_I2C_Write 003E                                         l25 0368  
                          _timer0ReloadVal 0061                                ?i1_I2C_Read 0070  
                         SPI_Init@brgValue 0055                                __CFG_LVP$ON 0000  
                         SPI_Init@clockEdg 0050                                        l542 01F8  
                                      l641 0193                                        l653 01C0  
                                      l662 0056                                        l638 018C  
                                      l671 0086                                        l647 01AE  
                                      l672 0088                                        l673 0089  
                                      l659 004E                                        l668 006A  
                                      l678 0097                                        l699 00D2  
                         SPI_Init@clockPol 004F                       I2C_Read@slaveAddress 0051  
                             __CFG_BORV$LO 0000                                        wreg 0009  
                             __CFG_IESO$ON 0000                           SPI_Init@lsbFirst 0070  
                             __CFG_ZCD$OFF 0000                      __size_of_ADXL345_Init 003D  
                             ?i1_I2C_Write 0070                                       l3001 00E4  
                    i1SPI_Read@bytesNumber 0071                                       l3021 01B7  
                                     l3023 01BB                                       l3051 0064  
                                     l3019 01A1                                       l3053 0091  
                                     l3055 0095                                       l3083 0222  
                                     l3085 0239                                       l3191 01DD  
                                     l2991 00C5                                       l2987 00A9  
                                     l2989 00C0                                       l2999 00C7  
                        SPI_Init@clockFreq 004B                              main@i2cStatus 00AC  
                                     _LATA 010C                                       _LATB 010D  
                                     _LATC 010E                                main@counter 00AD  
                                     _TMR0 0015                                       _WPUA 020C  
                                     _WPUB 020D                                       _WPUC 020E  
                             __CFG_WRT$OFF 0000                              __CFG_FCMEN$ON 0000  
                                     _main 034C        __size_ofi1_ADXL345_GetRegisterValue 003B  
                         __end_of_I2C_Init 034C                           __end_of_I2C_Read 009A  
                                     fsr0h 0005                                       fsr1h 0007  
                                     indf0 0000                                       fsr0l 0004  
                                     indf1 0001                                       fsr1l 0006  
                                     btemp 007E                              __CFG_BOREN$ON 0000  
                                     start 002F                              __CFG_MCLRE$ON 0000  
                              ?i1_SPI_Read 0070                       i1I2C_Read@dataBuffer 0070  
                  __end_of_TMR0_Initialize 037E                              __CFG_PLLEN$ON 0000  
           ??_TMR0_DefaultInterruptHandler 0070             __size_of_OSCILLATOR_Initialize 0007  
                      __size_of_IOCAF2_ISR 0003              __end_of_OSCILLATOR_Initialize 03A0  
                                    ?_main 0070                              __CFG_WDTE$OFF 0000  
                            _i2c_trb_count 0037                                      i1l340 0010  
                                    i1l342 0017                                      i1l350 002A  
                                    i1l345 0023                                      i1l641 0249  
                                    i1l653 0275                                      i1l662 00FB  
                                    i1l638 0242                                      i1l671 0127  
                                    i1l647 0263                               _ADXL345_Init 01C3  
                                    i1l672 0128                                      i1l673 0129  
                                    i1l659 00F3                                      i1l668 010D  
                                    i1l678 0135                                      i1l699 016E  
                                    _TRISA 008C                                      _TRISB 008D  
                                    _TRISC 008E                                      _RXPPS 0E24  
        __size_of_TMR0_SetInterruptHandler 0006                  ?_TMR0_SetInterruptHandler 004B  
                         __end_of_TMR0_ISR 032C                    __end_of_PIN_MANAGER_IOC 03B2  
                         __end_of_SPI_Init 030B                           __end_of_SPI_Read 00EA  
                        __end_of_I2C_Write 01C3                                      pclath 000A  
                                    status 0003                                      wtemp0 007E  
                      __size_ofi1_I2C_Read 004E                               SPI_Read@data 004B  
                             SPI_Read@byte 0054                                 _i2c_object 0020  
                          __initialization 0031                         ADXL345_GetXyz@F107 00AE  
                             __end_of_main 0369                             __CFG_LPBOR$OFF 0000  
              ?_INTERRUPT_InterruptManager 0070                   _ADXL345_GetRegisterValue 0200  
                                   ??_main 005E                      i1I2C_Read@acknowledge 0077  
                                   _ANSELA 018C                                     _ANSELB 018D  
                                   _ANSELC 018E                                     _BORCON 0116  
                                   _RC1REG 0199                                     _RC1STA 019D  
                                   _RB4PPS 0E9C                                     _RB6PPS 0E9E  
                                   i1l2131 0134                                     _RB7PPS 0E9F  
                                   i1l2127 0108                                     i1l2129 0130  
                                   i1l2145 0146                                     _ODCONA 028C  
                                   _ODCONB 028D                                     i1l2147 015D  
                                   _ODCONC 028E                                     i1l2157 0163  
                                   i1l2149 0162                                     i1l2261 02B0  
                                   i1l2095 0256                                     i1l2159 017F  
                                   i1l2097 026C                                     i1l2099 0270  
                                   i1l2259 029A                        __size_ofi1_SPI_Read 004D  
                                   u205_20 0329                                     _OSCCON 0099  
                                   _SPBRGH 019C                                     _SPBRGL 019B  
                                   _TX1REG 019A                                     _TX1STA 019E  
                      SPI_Init@pbFrequency 0051                                     _SSPBUF 0211  
                    i1I2C_Write@dataBuffer 0070                             __CFG_PWRTE$OFF 0000  
       __end_ofi1_ADXL345_GetRegisterValue 02B3                 i1_ADXL345_GetRegisterValue 0278  
                           i1SPI_Read@data 0070                             i1SPI_Read@byte 0079  
                           __CFG_STVREN$ON 0000                           ?_TMR0_Initialize 0070  
                       ADXL345_Init@status 005D                                  ?_I2C_Init 004B  
                                ?_I2C_Read 004B                      __end_of_TMR0_CallBack 0390  
 TMR0_SetInterruptHandler@InterruptHandler 004B                           ?_PIN_MANAGER_IOC 0070  
                             ??_IOCAF2_ISR 0070                            I2C_Write@status 004F  
                        _SYSTEM_Initialize 0390                    __end_of__initialization 0040  
                     __size_ofi1_I2C_Write 003C                         ?_SYSTEM_Initialize 0070  
                           __pcstackCOMMON 0070                        ??_SYSTEM_Initialize 004E  
                                ?_TMR0_ISR 0070                                  ?_SPI_Init 004B  
                                ?_SPI_Read 004B                               ??i1_I2C_Read 0073  
                       __end_of_IOCAF2_ISR 03B5                          i1I2C_Read@stopBit 0072  
                               ??_I2C_Init 004F                             _OPTION_REGbits 0095  
                               ??_I2C_Read 004E                      TMR0_ISR@CountCallBack 002D  
                    TMR0_CallBack@DeviceID 007D                      i1SPI_Read@writeBuffer 0074  
                __end_of_SYSTEM_Initialize 0399                           I2C_Init@brgValue 0053  
                               __pbssBANK0 0020                                 __pbssBANK1 00AE  
             __size_of_I2C_BusCollisionISR 0003                         __end_ofi1_I2C_Read 0138  
                               __pmaintext 034C                               I2C_Read@byte 0053  
         __end_of_TMR0_SetInterruptHandler 03AC                             I2C_Init@status 0055  
                               ??_TMR0_ISR 007E                            __CFG_PPS1WAY$ON 0000  
                             ??i1_SPI_Read 0072                                 __pintentry 0004  
                       I2C_Read@dataBuffer 004B                             I2C_Read@status 0050  
                               ??_SPI_Init 0051                                 ??_SPI_Read 004D  
                          __CFG_WDTCCS$SWC 0000                                    _OSCTUNE 0098  
                    i1I2C_Read@bytesNumber 0071                                    _SSP1ADD 0212  
                                  _SSP1BUF 0211                         __end_ofi1_SPI_Read 0185  
                   i1I2C_Write@acknowledge 0076                                  _I2C_Write 0185  
                        _fullResolutionSet 002F                 ??_ADXL345_GetRegisterValue 0055  
                  i1I2C_Write@slaveAddress 0075                             i1I2C_Read@byte 0078  
                                  __ptext1 0390                                    __ptext2 0369  
                                  __ptext3 03A6                                    __ptext4 02B3  
                                  __ptext5 0399                                    __ptext6 01C3  
                                  __ptext7 02E5                                    __ptext8 032C  
                                  __ptext9 0200                      _OSCILLATOR_Initialize 0399  
                 ??_PIN_MANAGER_Initialize 004B                                  _IOCAFbits 0393  
                                _IOCANbits 0392                                  _IOCAPbits 0391  
               __size_of_SYSTEM_Initialize 0009                                    clrloop0 03A1  
                     end_of_initialization 0040                   ADXL345_Init@commProtocol 005C  
                     I2C_Write@acknowledge 0051                                 ?_I2C_Write 004B  
              ?i1_ADXL345_GetRegisterValue 0070                             SPI_Read@F12027 0025  
                 _TMR0_SetInterruptHandler 03A6                         I2C_ISR@i2c_address 0044  
                                _SSPDATPPS 0E21                                  _SSPCLKPPS 0E20  
                         I2C_Write@stopBit 004D                           __CFG_FOSC$INTOSC 0000  
                               main@AccelX 00A0                                 main@AccelY 00A2  
                               main@AccelZ 00A4                          __size_of_I2C_Init 0020  
                        __size_of_I2C_Read 0056    ADXL345_GetRegisterValue@registerAddress 0057  
i1ADXL345_GetRegisterValue@registerAddress 0048           I2C_ISR@i2c_10bit_address_restart 0032  
                      I2C_Init@pbFrequency 004F                             SPI_Init@status 0057  
                        _p_i2c_trb_current 0036                      I2C_Write@slaveAddress 0050  
                             _i2c_tr_queue 0041                          __size_of_TMR0_ISR 0021  
                   ?_OSCILLATOR_Initialize 0070                          __size_of_SPI_Init 0026  
                        __size_of_SPI_Read 0050                        _I2C_BusCollisionISR 03B5  
                      start_initialization 0031                   __size_of_TMR0_Initialize 0015  
          __size_of_PIN_MANAGER_Initialize 0032                                  _i2c_state 0038  
                            ??i1_I2C_Write 0073                        SPI_Read@bytesNumber 004C  
                              ??_I2C_Write 004E                       ?_I2C_BusCollisionISR 0070  
                 __size_of_PIN_MANAGER_IOC 0006                     i1I2C_Write@bytesNumber 0071  
                   __size_of_TMR0_CallBack 0012                    i1SPI_Read@slaveDeviceId 0078  
                            ?_ADXL345_Init 0070                          I2C_Init@clockFreq 004B  
                            _selectedRange 0030                                  ___latbits 0002  
                            __pcstackBANK0 0046                              __pcstackBANK1 00A0  
                         i1I2C_Read@status 0075                          _communicationType 0031  
                    ??_I2C_BusCollisionISR 0070                      _TMR0_InterruptHandler 005F  
                                __pnvBANK0 005F                        __end_ofi1_I2C_Write 0278  
                     I2C_Write@bytesNumber 004C                     _PIN_MANAGER_Initialize 02B3  
                       i1I2C_Write@stopBit 0072               ??_INTERRUPT_InterruptManager 004A  
                           ??_ADXL345_Init 005B                                   _BAUD1CON 019F  
                                 _I2C_Init 032C                                   _I2C_Read 0044  
                          I2C_Read@stopBit 004D                        I2C_Read@acknowledge 0052  
                            _TMR0_CallBack 037E                              _p_i2c_current 0035  
                        ??_TMR0_Initialize 004D                                   _LATCbits 010E  
                                clear_ram0 03A0                        I2C_Write@dataBuffer 004B  
                                 _PIE1bits 0090                                   _PIE2bits 0091  
      __size_of_INTERRUPT_InterruptManager 002B                 ??_TMR0_SetInterruptHandler 004D  
                                 _PIR1bits 0010                                   _PIR2bits 0011  
                     __CFG_WDTCPS$WDTCPS1F 0000                                   _SSP1CON1 0215  
                                 _SSP1CON3 0217                                   _TMR0_ISR 030B  
                      I2C_ISR@pi2c_buf_ptr 0034                                   _SSP1STAT 0214  
                        ??_PIN_MANAGER_IOC 0070                                   _SPI_Init 02E5  
                                 _SPI_Read 009A                      SPI_Read@slaveDeviceId 0053  
        __size_of_ADXL345_GetRegisterValue 003C                  ?_ADXL345_GetRegisterValue 0070  
                           ?_TMR0_CallBack 0070                                i1_I2C_Write 023C  
       ADXL345_GetRegisterValue@dataBuffer 0058       i1ADXL345_GetRegisterValue@dataBuffer 0046  
              ADXL345_GetRegisterValue@F91 002B                ADXL345_SetRegisterValue@F96 0029  
                  ??_OSCILLATOR_Initialize 004B                              I2C_Write@byte 0052  
                                 __ptext10 009A                                   __ptext11 0185  
                                 __ptext20 03B8                                   __ptext12 0044  
                                 __ptext21 03AC                                   __ptext22 03B2  
                                 __ptext14 030B                                   __ptext23 03B5  
                                 __ptext15 037E                                   __ptext16 0278  
                                 __ptext17 0138                                   __ptext18 023C  
                                 __ptext19 00EA                        SPI_Read@writeBuffer 004F  
                        i1I2C_Write@status 0074                               _SSP1CON1bits 0215  
                             _SSP1CON2bits 0216                                 _IOCAF2_ISR 03B2  
                            __size_of_main 001D                       __end_of_ADXL345_Init 0200  
     __end_of_TMR0_DefaultInterruptHandler 03B9      __size_of_TMR0_DefaultInterruptHandler 0001  
             _TMR0_DefaultInterruptHandler 03B8                       __CFG_WDTCWS$WDTCWSSW 0000  
                               _RC1STAbits 019D                                   int$flags 007E  
       __end_of_INTERRUPT_InterruptManager 002F                 _INTERRUPT_InterruptManager 0004  
                             _SSP1STATbits 0214                                 i1_I2C_Read 00EA  
                               _INTCONbits 000B                            ??_TMR0_CallBack 007C  
                      I2C_Read@bytesNumber 004C                                   intlevel1 0000  
                  ?_PIN_MANAGER_Initialize 0070                      I2C_MasterRead@trBlock 0039  
                        __CFG_CLKOUTEN$OFF 0000              ?_TMR0_DefaultInterruptHandler 0070  
    ADXL345_GetRegisterValue@registerValue 005A    i1ADXL345_GetRegisterValue@registerValue 0049  
                               i1_SPI_Read 0138                     i1I2C_Read@slaveAddress 0076  
                   I2C_MasterWrite@trBlock 003D                                 _OPTION_REG 0095  
                          i1I2C_Write@byte 0077                            _TMR0_Initialize 0369  
                           main@AccelXtemp 00A6                             main@AccelYtemp 00A8  
                           main@AccelZtemp 00AA                __end_of_I2C_BusCollisionISR 03B8  
                              ?_IOCAF2_ISR 0070             __end_of_PIN_MANAGER_Initialize 02E5  
                          _PIN_MANAGER_IOC 03AC  
