

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Mar 29 16:20:30 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	swtext1,local,class=CONST,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1619 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0113                     	;# 
   129  0114                     	;# 
   130  0115                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  0118                     	;# 
   134  0119                     	;# 
   135  011C                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  018E                     	;# 
   139  0191                     	;# 
   140  0191                     	;# 
   141  0192                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0194                     	;# 
   145  0195                     	;# 
   146  0196                     	;# 
   147  0197                     	;# 
   148  0199                     	;# 
   149  0199                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019A                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019D                     	;# 
   163  019D                     	;# 
   164  019D                     	;# 
   165  019E                     	;# 
   166  019E                     	;# 
   167  019E                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  020C                     	;# 
   174  020D                     	;# 
   175  020E                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  028C                     	;# 
   193  028D                     	;# 
   194  028E                     	;# 
   195  0291                     	;# 
   196  0291                     	;# 
   197  0292                     	;# 
   198  0293                     	;# 
   199  0294                     	;# 
   200  0298                     	;# 
   201  0298                     	;# 
   202  0299                     	;# 
   203  029A                     	;# 
   204  029B                     	;# 
   205  029E                     	;# 
   206  030C                     	;# 
   207  030D                     	;# 
   208  030E                     	;# 
   209  038C                     	;# 
   210  038D                     	;# 
   211  038E                     	;# 
   212  0391                     	;# 
   213  0392                     	;# 
   214  0393                     	;# 
   215  0394                     	;# 
   216  0395                     	;# 
   217  0396                     	;# 
   218  0397                     	;# 
   219  0398                     	;# 
   220  0399                     	;# 
   221  040E                     	;# 
   222  0413                     	;# 
   223  0413                     	;# 
   224  0414                     	;# 
   225  0414                     	;# 
   226  0415                     	;# 
   227  0416                     	;# 
   228  0417                     	;# 
   229  0418                     	;# 
   230  041A                     	;# 
   231  041A                     	;# 
   232  041B                     	;# 
   233  041B                     	;# 
   234  041C                     	;# 
   235  041D                     	;# 
   236  041E                     	;# 
   237  041F                     	;# 
   238  0493                     	;# 
   239  0494                     	;# 
   240  0495                     	;# 
   241  0496                     	;# 
   242  049A                     	;# 
   243  049B                     	;# 
   244  049C                     	;# 
   245  049D                     	;# 
   246  058C                     	;# 
   247  058C                     	;# 
   248  058D                     	;# 
   249  058E                     	;# 
   250  058E                     	;# 
   251  058F                     	;# 
   252  0590                     	;# 
   253  0590                     	;# 
   254  0591                     	;# 
   255  0592                     	;# 
   256  0592                     	;# 
   257  0593                     	;# 
   258  0594                     	;# 
   259  0594                     	;# 
   260  0595                     	;# 
   261  0596                     	;# 
   262  0596                     	;# 
   263  0597                     	;# 
   264  0598                     	;# 
   265  0599                     	;# 
   266  059A                     	;# 
   267  059B                     	;# 
   268  059B                     	;# 
   269  059C                     	;# 
   270  059D                     	;# 
   271  060C                     	;# 
   272  060C                     	;# 
   273  060D                     	;# 
   274  060E                     	;# 
   275  060F                     	;# 
   276  060F                     	;# 
   277  0610                     	;# 
   278  0611                     	;# 
   279  0612                     	;# 
   280  0613                     	;# 
   281  0614                     	;# 
   282  0617                     	;# 
   283  0618                     	;# 
   284  0619                     	;# 
   285  061A                     	;# 
   286  061B                     	;# 
   287  061C                     	;# 
   288  0691                     	;# 
   289  0692                     	;# 
   290  0693                     	;# 
   291  0694                     	;# 
   292  0695                     	;# 
   293  0696                     	;# 
   294  0697                     	;# 
   295  0699                     	;# 
   296  069A                     	;# 
   297  0711                     	;# 
   298  0712                     	;# 
   299  0713                     	;# 
   300  0714                     	;# 
   301  0715                     	;# 
   302  0718                     	;# 
   303  0718                     	;# 
   304  0719                     	;# 
   305  071A                     	;# 
   306  071A                     	;# 
   307  071B                     	;# 
   308  071C                     	;# 
   309  071D                     	;# 
   310  0791                     	;# 
   311  0791                     	;# 
   312  0792                     	;# 
   313  0793                     	;# 
   314  0793                     	;# 
   315  0794                     	;# 
   316  0795                     	;# 
   317  0795                     	;# 
   318  0796                     	;# 
   319  0797                     	;# 
   320  0797                     	;# 
   321  0798                     	;# 
   322  0799                     	;# 
   323  079A                     	;# 
   324  080C                     	;# 
   325  080C                     	;# 
   326  080D                     	;# 
   327  080E                     	;# 
   328  080E                     	;# 
   329  080F                     	;# 
   330  0810                     	;# 
   331  0810                     	;# 
   332  0811                     	;# 
   333  0812                     	;# 
   334  0812                     	;# 
   335  0813                     	;# 
   336  0814                     	;# 
   337  0815                     	;# 
   338  0816                     	;# 
   339  0817                     	;# 
   340  0818                     	;# 
   341  0819                     	;# 
   342  081A                     	;# 
   343  081A                     	;# 
   344  081B                     	;# 
   345  081C                     	;# 
   346  081C                     	;# 
   347  081D                     	;# 
   348  088C                     	;# 
   349  088D                     	;# 
   350  088E                     	;# 
   351  088F                     	;# 
   352  088F                     	;# 
   353  0890                     	;# 
   354  0891                     	;# 
   355  0892                     	;# 
   356  0893                     	;# 
   357  0893                     	;# 
   358  0894                     	;# 
   359  0895                     	;# 
   360  0896                     	;# 
   361  0897                     	;# 
   362  0897                     	;# 
   363  0898                     	;# 
   364  0899                     	;# 
   365  0D8C                     	;# 
   366  0D8C                     	;# 
   367  0D8D                     	;# 
   368  0D8E                     	;# 
   369  0D8F                     	;# 
   370  0D8F                     	;# 
   371  0D90                     	;# 
   372  0D91                     	;# 
   373  0D92                     	;# 
   374  0D92                     	;# 
   375  0D93                     	;# 
   376  0D94                     	;# 
   377  0D95                     	;# 
   378  0D95                     	;# 
   379  0D96                     	;# 
   380  0D97                     	;# 
   381  0D98                     	;# 
   382  0D99                     	;# 
   383  0D9A                     	;# 
   384  0D9B                     	;# 
   385  0D9C                     	;# 
   386  0D9D                     	;# 
   387  0D9E                     	;# 
   388  0D9E                     	;# 
   389  0D9F                     	;# 
   390  0DA0                     	;# 
   391  0DA1                     	;# 
   392  0DA1                     	;# 
   393  0DA2                     	;# 
   394  0DA3                     	;# 
   395  0DA4                     	;# 
   396  0DA4                     	;# 
   397  0DA5                     	;# 
   398  0DA6                     	;# 
   399  0DA7                     	;# 
   400  0DA7                     	;# 
   401  0DA8                     	;# 
   402  0DA9                     	;# 
   403  0DAA                     	;# 
   404  0DAB                     	;# 
   405  0DAC                     	;# 
   406  0DAD                     	;# 
   407  0DAE                     	;# 
   408  0DAF                     	;# 
   409  0E0F                     	;# 
   410  0E10                     	;# 
   411  0E11                     	;# 
   412  0E12                     	;# 
   413  0E13                     	;# 
   414  0E14                     	;# 
   415  0E15                     	;# 
   416  0E16                     	;# 
   417  0E17                     	;# 
   418  0E18                     	;# 
   419  0E19                     	;# 
   420  0E1A                     	;# 
   421  0E1B                     	;# 
   422  0E1C                     	;# 
   423  0E1D                     	;# 
   424  0E1E                     	;# 
   425  0E1F                     	;# 
   426  0E20                     	;# 
   427  0E21                     	;# 
   428  0E22                     	;# 
   429  0E23                     	;# 
   430  0E24                     	;# 
   431  0E25                     	;# 
   432  0E26                     	;# 
   433  0E27                     	;# 
   434  0E28                     	;# 
   435  0E29                     	;# 
   436  0E2A                     	;# 
   437  0E2B                     	;# 
   438  0E2C                     	;# 
   439  0E2D                     	;# 
   440  0E2E                     	;# 
   441  0E90                     	;# 
   442  0E91                     	;# 
   443  0E92                     	;# 
   444  0E94                     	;# 
   445  0E95                     	;# 
   446  0E9C                     	;# 
   447  0E9D                     	;# 
   448  0E9E                     	;# 
   449  0E9F                     	;# 
   450  0EA0                     	;# 
   451  0EA1                     	;# 
   452  0EA2                     	;# 
   453  0EA3                     	;# 
   454  0EA4                     	;# 
   455  0EA5                     	;# 
   456  0EA6                     	;# 
   457  0EA7                     	;# 
   458  0F0F                     	;# 
   459  0F10                     	;# 
   460  0F11                     	;# 
   461  0F12                     	;# 
   462  0F13                     	;# 
   463  0F14                     	;# 
   464  0F15                     	;# 
   465  0F16                     	;# 
   466  0F17                     	;# 
   467  0F18                     	;# 
   468  0F19                     	;# 
   469  0F1A                     	;# 
   470  0F1B                     	;# 
   471  0F1C                     	;# 
   472  0F1D                     	;# 
   473  0F1E                     	;# 
   474  0F1F                     	;# 
   475  0F20                     	;# 
   476  0F21                     	;# 
   477  0F22                     	;# 
   478  0F23                     	;# 
   479  0F24                     	;# 
   480  0F25                     	;# 
   481  0F26                     	;# 
   482  0F27                     	;# 
   483  0F28                     	;# 
   484  0F29                     	;# 
   485  0F2A                     	;# 
   486  0F2B                     	;# 
   487  0F2C                     	;# 
   488  0F2D                     	;# 
   489  0F2E                     	;# 
   490  0F2F                     	;# 
   491  0F30                     	;# 
   492  0F31                     	;# 
   493  0F32                     	;# 
   494  0F33                     	;# 
   495  0F34                     	;# 
   496  0F35                     	;# 
   497  0F36                     	;# 
   498  0F37                     	;# 
   499  0FE4                     	;# 
   500  0FE5                     	;# 
   501  0FE6                     	;# 
   502  0FE7                     	;# 
   503  0FE8                     	;# 
   504  0FE9                     	;# 
   505  0FEA                     	;# 
   506  0FEB                     	;# 
   507  0FED                     	;# 
   508  0FEE                     	;# 
   509  0FEF                     	;# 
   510  0000                     	;# 
   511  0001                     	;# 
   512  0002                     	;# 
   513  0003                     	;# 
   514  0004                     	;# 
   515  0005                     	;# 
   516  0006                     	;# 
   517  0007                     	;# 
   518  0008                     	;# 
   519  0009                     	;# 
   520  000A                     	;# 
   521  000B                     	;# 
   522  000C                     	;# 
   523  000D                     	;# 
   524  000E                     	;# 
   525  0010                     	;# 
   526  0011                     	;# 
   527  0012                     	;# 
   528  0013                     	;# 
   529  0014                     	;# 
   530  0015                     	;# 
   531  0016                     	;# 
   532  0016                     	;# 
   533  0017                     	;# 
   534  0018                     	;# 
   535  0019                     	;# 
   536  001A                     	;# 
   537  001A                     	;# 
   538  001B                     	;# 
   539  001B                     	;# 
   540  001C                     	;# 
   541  001D                     	;# 
   542  001E                     	;# 
   543  001F                     	;# 
   544  008C                     	;# 
   545  008D                     	;# 
   546  008E                     	;# 
   547  0090                     	;# 
   548  0091                     	;# 
   549  0092                     	;# 
   550  0093                     	;# 
   551  0094                     	;# 
   552  0095                     	;# 
   553  0096                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009A                     	;# 
   557  009B                     	;# 
   558  009B                     	;# 
   559  009C                     	;# 
   560  009D                     	;# 
   561  009E                     	;# 
   562  009F                     	;# 
   563  010C                     	;# 
   564  010D                     	;# 
   565  010E                     	;# 
   566  0111                     	;# 
   567  0112                     	;# 
   568  0113                     	;# 
   569  0114                     	;# 
   570  0115                     	;# 
   571  0116                     	;# 
   572  0117                     	;# 
   573  0118                     	;# 
   574  0119                     	;# 
   575  011C                     	;# 
   576  018C                     	;# 
   577  018D                     	;# 
   578  018E                     	;# 
   579  0191                     	;# 
   580  0191                     	;# 
   581  0192                     	;# 
   582  0193                     	;# 
   583  0193                     	;# 
   584  0194                     	;# 
   585  0195                     	;# 
   586  0196                     	;# 
   587  0197                     	;# 
   588  0199                     	;# 
   589  0199                     	;# 
   590  0199                     	;# 
   591  019A                     	;# 
   592  019A                     	;# 
   593  019A                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019C                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019D                     	;# 
   603  019D                     	;# 
   604  019D                     	;# 
   605  019E                     	;# 
   606  019E                     	;# 
   607  019E                     	;# 
   608  019F                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  020C                     	;# 
   614  020D                     	;# 
   615  020E                     	;# 
   616  0211                     	;# 
   617  0211                     	;# 
   618  0212                     	;# 
   619  0212                     	;# 
   620  0213                     	;# 
   621  0213                     	;# 
   622  0214                     	;# 
   623  0214                     	;# 
   624  0215                     	;# 
   625  0215                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0216                     	;# 
   629  0216                     	;# 
   630  0217                     	;# 
   631  0217                     	;# 
   632  028C                     	;# 
   633  028D                     	;# 
   634  028E                     	;# 
   635  0291                     	;# 
   636  0291                     	;# 
   637  0292                     	;# 
   638  0293                     	;# 
   639  0294                     	;# 
   640  0298                     	;# 
   641  0298                     	;# 
   642  0299                     	;# 
   643  029A                     	;# 
   644  029B                     	;# 
   645  029E                     	;# 
   646  030C                     	;# 
   647  030D                     	;# 
   648  030E                     	;# 
   649  038C                     	;# 
   650  038D                     	;# 
   651  038E                     	;# 
   652  0391                     	;# 
   653  0392                     	;# 
   654  0393                     	;# 
   655  0394                     	;# 
   656  0395                     	;# 
   657  0396                     	;# 
   658  0397                     	;# 
   659  0398                     	;# 
   660  0399                     	;# 
   661  040E                     	;# 
   662  0413                     	;# 
   663  0413                     	;# 
   664  0414                     	;# 
   665  0414                     	;# 
   666  0415                     	;# 
   667  0416                     	;# 
   668  0417                     	;# 
   669  0418                     	;# 
   670  041A                     	;# 
   671  041A                     	;# 
   672  041B                     	;# 
   673  041B                     	;# 
   674  041C                     	;# 
   675  041D                     	;# 
   676  041E                     	;# 
   677  041F                     	;# 
   678  0493                     	;# 
   679  0494                     	;# 
   680  0495                     	;# 
   681  0496                     	;# 
   682  049A                     	;# 
   683  049B                     	;# 
   684  049C                     	;# 
   685  049D                     	;# 
   686  058C                     	;# 
   687  058C                     	;# 
   688  058D                     	;# 
   689  058E                     	;# 
   690  058E                     	;# 
   691  058F                     	;# 
   692  0590                     	;# 
   693  0590                     	;# 
   694  0591                     	;# 
   695  0592                     	;# 
   696  0592                     	;# 
   697  0593                     	;# 
   698  0594                     	;# 
   699  0594                     	;# 
   700  0595                     	;# 
   701  0596                     	;# 
   702  0596                     	;# 
   703  0597                     	;# 
   704  0598                     	;# 
   705  0599                     	;# 
   706  059A                     	;# 
   707  059B                     	;# 
   708  059B                     	;# 
   709  059C                     	;# 
   710  059D                     	;# 
   711  060C                     	;# 
   712  060C                     	;# 
   713  060D                     	;# 
   714  060E                     	;# 
   715  060F                     	;# 
   716  060F                     	;# 
   717  0610                     	;# 
   718  0611                     	;# 
   719  0612                     	;# 
   720  0613                     	;# 
   721  0614                     	;# 
   722  0617                     	;# 
   723  0618                     	;# 
   724  0619                     	;# 
   725  061A                     	;# 
   726  061B                     	;# 
   727  061C                     	;# 
   728  0691                     	;# 
   729  0692                     	;# 
   730  0693                     	;# 
   731  0694                     	;# 
   732  0695                     	;# 
   733  0696                     	;# 
   734  0697                     	;# 
   735  0699                     	;# 
   736  069A                     	;# 
   737  0711                     	;# 
   738  0712                     	;# 
   739  0713                     	;# 
   740  0714                     	;# 
   741  0715                     	;# 
   742  0718                     	;# 
   743  0718                     	;# 
   744  0719                     	;# 
   745  071A                     	;# 
   746  071A                     	;# 
   747  071B                     	;# 
   748  071C                     	;# 
   749  071D                     	;# 
   750  0791                     	;# 
   751  0791                     	;# 
   752  0792                     	;# 
   753  0793                     	;# 
   754  0793                     	;# 
   755  0794                     	;# 
   756  0795                     	;# 
   757  0795                     	;# 
   758  0796                     	;# 
   759  0797                     	;# 
   760  0797                     	;# 
   761  0798                     	;# 
   762  0799                     	;# 
   763  079A                     	;# 
   764  080C                     	;# 
   765  080C                     	;# 
   766  080D                     	;# 
   767  080E                     	;# 
   768  080E                     	;# 
   769  080F                     	;# 
   770  0810                     	;# 
   771  0810                     	;# 
   772  0811                     	;# 
   773  0812                     	;# 
   774  0812                     	;# 
   775  0813                     	;# 
   776  0814                     	;# 
   777  0815                     	;# 
   778  0816                     	;# 
   779  0817                     	;# 
   780  0818                     	;# 
   781  0819                     	;# 
   782  081A                     	;# 
   783  081A                     	;# 
   784  081B                     	;# 
   785  081C                     	;# 
   786  081C                     	;# 
   787  081D                     	;# 
   788  088C                     	;# 
   789  088D                     	;# 
   790  088E                     	;# 
   791  088F                     	;# 
   792  088F                     	;# 
   793  0890                     	;# 
   794  0891                     	;# 
   795  0892                     	;# 
   796  0893                     	;# 
   797  0893                     	;# 
   798  0894                     	;# 
   799  0895                     	;# 
   800  0896                     	;# 
   801  0897                     	;# 
   802  0897                     	;# 
   803  0898                     	;# 
   804  0899                     	;# 
   805  0D8C                     	;# 
   806  0D8C                     	;# 
   807  0D8D                     	;# 
   808  0D8E                     	;# 
   809  0D8F                     	;# 
   810  0D8F                     	;# 
   811  0D90                     	;# 
   812  0D91                     	;# 
   813  0D92                     	;# 
   814  0D92                     	;# 
   815  0D93                     	;# 
   816  0D94                     	;# 
   817  0D95                     	;# 
   818  0D95                     	;# 
   819  0D96                     	;# 
   820  0D97                     	;# 
   821  0D98                     	;# 
   822  0D99                     	;# 
   823  0D9A                     	;# 
   824  0D9B                     	;# 
   825  0D9C                     	;# 
   826  0D9D                     	;# 
   827  0D9E                     	;# 
   828  0D9E                     	;# 
   829  0D9F                     	;# 
   830  0DA0                     	;# 
   831  0DA1                     	;# 
   832  0DA1                     	;# 
   833  0DA2                     	;# 
   834  0DA3                     	;# 
   835  0DA4                     	;# 
   836  0DA4                     	;# 
   837  0DA5                     	;# 
   838  0DA6                     	;# 
   839  0DA7                     	;# 
   840  0DA7                     	;# 
   841  0DA8                     	;# 
   842  0DA9                     	;# 
   843  0DAA                     	;# 
   844  0DAB                     	;# 
   845  0DAC                     	;# 
   846  0DAD                     	;# 
   847  0DAE                     	;# 
   848  0DAF                     	;# 
   849  0E0F                     	;# 
   850  0E10                     	;# 
   851  0E11                     	;# 
   852  0E12                     	;# 
   853  0E13                     	;# 
   854  0E14                     	;# 
   855  0E15                     	;# 
   856  0E16                     	;# 
   857  0E17                     	;# 
   858  0E18                     	;# 
   859  0E19                     	;# 
   860  0E1A                     	;# 
   861  0E1B                     	;# 
   862  0E1C                     	;# 
   863  0E1D                     	;# 
   864  0E1E                     	;# 
   865  0E1F                     	;# 
   866  0E20                     	;# 
   867  0E21                     	;# 
   868  0E22                     	;# 
   869  0E23                     	;# 
   870  0E24                     	;# 
   871  0E25                     	;# 
   872  0E26                     	;# 
   873  0E27                     	;# 
   874  0E28                     	;# 
   875  0E29                     	;# 
   876  0E2A                     	;# 
   877  0E2B                     	;# 
   878  0E2C                     	;# 
   879  0E2D                     	;# 
   880  0E2E                     	;# 
   881  0E90                     	;# 
   882  0E91                     	;# 
   883  0E92                     	;# 
   884  0E94                     	;# 
   885  0E95                     	;# 
   886  0E9C                     	;# 
   887  0E9D                     	;# 
   888  0E9E                     	;# 
   889  0E9F                     	;# 
   890  0EA0                     	;# 
   891  0EA1                     	;# 
   892  0EA2                     	;# 
   893  0EA3                     	;# 
   894  0EA4                     	;# 
   895  0EA5                     	;# 
   896  0EA6                     	;# 
   897  0EA7                     	;# 
   898  0F0F                     	;# 
   899  0F10                     	;# 
   900  0F11                     	;# 
   901  0F12                     	;# 
   902  0F13                     	;# 
   903  0F14                     	;# 
   904  0F15                     	;# 
   905  0F16                     	;# 
   906  0F17                     	;# 
   907  0F18                     	;# 
   908  0F19                     	;# 
   909  0F1A                     	;# 
   910  0F1B                     	;# 
   911  0F1C                     	;# 
   912  0F1D                     	;# 
   913  0F1E                     	;# 
   914  0F1F                     	;# 
   915  0F20                     	;# 
   916  0F21                     	;# 
   917  0F22                     	;# 
   918  0F23                     	;# 
   919  0F24                     	;# 
   920  0F25                     	;# 
   921  0F26                     	;# 
   922  0F27                     	;# 
   923  0F28                     	;# 
   924  0F29                     	;# 
   925  0F2A                     	;# 
   926  0F2B                     	;# 
   927  0F2C                     	;# 
   928  0F2D                     	;# 
   929  0F2E                     	;# 
   930  0F2F                     	;# 
   931  0F30                     	;# 
   932  0F31                     	;# 
   933  0F32                     	;# 
   934  0F33                     	;# 
   935  0F34                     	;# 
   936  0F35                     	;# 
   937  0F36                     	;# 
   938  0F37                     	;# 
   939  0FE4                     	;# 
   940  0FE5                     	;# 
   941  0FE6                     	;# 
   942  0FE7                     	;# 
   943  0FE8                     	;# 
   944  0FE9                     	;# 
   945  0FEA                     	;# 
   946  0FEB                     	;# 
   947  0FED                     	;# 
   948  0FEE                     	;# 
   949  0FEF                     	;# 
   950  0000                     	;# 
   951  0001                     	;# 
   952  0002                     	;# 
   953  0003                     	;# 
   954  0004                     	;# 
   955  0005                     	;# 
   956  0006                     	;# 
   957  0007                     	;# 
   958  0008                     	;# 
   959  0009                     	;# 
   960  000A                     	;# 
   961  000B                     	;# 
   962  000C                     	;# 
   963  000D                     	;# 
   964  000E                     	;# 
   965  0010                     	;# 
   966  0011                     	;# 
   967  0012                     	;# 
   968  0013                     	;# 
   969  0014                     	;# 
   970  0015                     	;# 
   971  0016                     	;# 
   972  0016                     	;# 
   973  0017                     	;# 
   974  0018                     	;# 
   975  0019                     	;# 
   976  001A                     	;# 
   977  001A                     	;# 
   978  001B                     	;# 
   979  001B                     	;# 
   980  001C                     	;# 
   981  001D                     	;# 
   982  001E                     	;# 
   983  001F                     	;# 
   984  008C                     	;# 
   985  008D                     	;# 
   986  008E                     	;# 
   987  0090                     	;# 
   988  0091                     	;# 
   989  0092                     	;# 
   990  0093                     	;# 
   991  0094                     	;# 
   992  0095                     	;# 
   993  0096                     	;# 
   994  0098                     	;# 
   995  0099                     	;# 
   996  009A                     	;# 
   997  009B                     	;# 
   998  009B                     	;# 
   999  009C                     	;# 
  1000  009D                     	;# 
  1001  009E                     	;# 
  1002  009F                     	;# 
  1003  010C                     	;# 
  1004  010D                     	;# 
  1005  010E                     	;# 
  1006  0111                     	;# 
  1007  0112                     	;# 
  1008  0113                     	;# 
  1009  0114                     	;# 
  1010  0115                     	;# 
  1011  0116                     	;# 
  1012  0117                     	;# 
  1013  0118                     	;# 
  1014  0119                     	;# 
  1015  011C                     	;# 
  1016  018C                     	;# 
  1017  018D                     	;# 
  1018  018E                     	;# 
  1019  0191                     	;# 
  1020  0191                     	;# 
  1021  0192                     	;# 
  1022  0193                     	;# 
  1023  0193                     	;# 
  1024  0194                     	;# 
  1025  0195                     	;# 
  1026  0196                     	;# 
  1027  0197                     	;# 
  1028  0199                     	;# 
  1029  0199                     	;# 
  1030  0199                     	;# 
  1031  019A                     	;# 
  1032  019A                     	;# 
  1033  019A                     	;# 
  1034  019B                     	;# 
  1035  019B                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019B                     	;# 
  1039  019C                     	;# 
  1040  019C                     	;# 
  1041  019C                     	;# 
  1042  019D                     	;# 
  1043  019D                     	;# 
  1044  019D                     	;# 
  1045  019E                     	;# 
  1046  019E                     	;# 
  1047  019E                     	;# 
  1048  019F                     	;# 
  1049  019F                     	;# 
  1050  019F                     	;# 
  1051  019F                     	;# 
  1052  019F                     	;# 
  1053  020C                     	;# 
  1054  020D                     	;# 
  1055  020E                     	;# 
  1056  0211                     	;# 
  1057  0211                     	;# 
  1058  0212                     	;# 
  1059  0212                     	;# 
  1060  0213                     	;# 
  1061  0213                     	;# 
  1062  0214                     	;# 
  1063  0214                     	;# 
  1064  0215                     	;# 
  1065  0215                     	;# 
  1066  0215                     	;# 
  1067  0215                     	;# 
  1068  0216                     	;# 
  1069  0216                     	;# 
  1070  0217                     	;# 
  1071  0217                     	;# 
  1072  028C                     	;# 
  1073  028D                     	;# 
  1074  028E                     	;# 
  1075  0291                     	;# 
  1076  0291                     	;# 
  1077  0292                     	;# 
  1078  0293                     	;# 
  1079  0294                     	;# 
  1080  0298                     	;# 
  1081  0298                     	;# 
  1082  0299                     	;# 
  1083  029A                     	;# 
  1084  029B                     	;# 
  1085  029E                     	;# 
  1086  030C                     	;# 
  1087  030D                     	;# 
  1088  030E                     	;# 
  1089  038C                     	;# 
  1090  038D                     	;# 
  1091  038E                     	;# 
  1092  0391                     	;# 
  1093  0392                     	;# 
  1094  0393                     	;# 
  1095  0394                     	;# 
  1096  0395                     	;# 
  1097  0396                     	;# 
  1098  0397                     	;# 
  1099  0398                     	;# 
  1100  0399                     	;# 
  1101  040E                     	;# 
  1102  0413                     	;# 
  1103  0413                     	;# 
  1104  0414                     	;# 
  1105  0414                     	;# 
  1106  0415                     	;# 
  1107  0416                     	;# 
  1108  0417                     	;# 
  1109  0418                     	;# 
  1110  041A                     	;# 
  1111  041A                     	;# 
  1112  041B                     	;# 
  1113  041B                     	;# 
  1114  041C                     	;# 
  1115  041D                     	;# 
  1116  041E                     	;# 
  1117  041F                     	;# 
  1118  0493                     	;# 
  1119  0494                     	;# 
  1120  0495                     	;# 
  1121  0496                     	;# 
  1122  049A                     	;# 
  1123  049B                     	;# 
  1124  049C                     	;# 
  1125  049D                     	;# 
  1126  058C                     	;# 
  1127  058C                     	;# 
  1128  058D                     	;# 
  1129  058E                     	;# 
  1130  058E                     	;# 
  1131  058F                     	;# 
  1132  0590                     	;# 
  1133  0590                     	;# 
  1134  0591                     	;# 
  1135  0592                     	;# 
  1136  0592                     	;# 
  1137  0593                     	;# 
  1138  0594                     	;# 
  1139  0594                     	;# 
  1140  0595                     	;# 
  1141  0596                     	;# 
  1142  0596                     	;# 
  1143  0597                     	;# 
  1144  0598                     	;# 
  1145  0599                     	;# 
  1146  059A                     	;# 
  1147  059B                     	;# 
  1148  059B                     	;# 
  1149  059C                     	;# 
  1150  059D                     	;# 
  1151  060C                     	;# 
  1152  060C                     	;# 
  1153  060D                     	;# 
  1154  060E                     	;# 
  1155  060F                     	;# 
  1156  060F                     	;# 
  1157  0610                     	;# 
  1158  0611                     	;# 
  1159  0612                     	;# 
  1160  0613                     	;# 
  1161  0614                     	;# 
  1162  0617                     	;# 
  1163  0618                     	;# 
  1164  0619                     	;# 
  1165  061A                     	;# 
  1166  061B                     	;# 
  1167  061C                     	;# 
  1168  0691                     	;# 
  1169  0692                     	;# 
  1170  0693                     	;# 
  1171  0694                     	;# 
  1172  0695                     	;# 
  1173  0696                     	;# 
  1174  0697                     	;# 
  1175  0699                     	;# 
  1176  069A                     	;# 
  1177  0711                     	;# 
  1178  0712                     	;# 
  1179  0713                     	;# 
  1180  0714                     	;# 
  1181  0715                     	;# 
  1182  0718                     	;# 
  1183  0718                     	;# 
  1184  0719                     	;# 
  1185  071A                     	;# 
  1186  071A                     	;# 
  1187  071B                     	;# 
  1188  071C                     	;# 
  1189  071D                     	;# 
  1190  0791                     	;# 
  1191  0791                     	;# 
  1192  0792                     	;# 
  1193  0793                     	;# 
  1194  0793                     	;# 
  1195  0794                     	;# 
  1196  0795                     	;# 
  1197  0795                     	;# 
  1198  0796                     	;# 
  1199  0797                     	;# 
  1200  0797                     	;# 
  1201  0798                     	;# 
  1202  0799                     	;# 
  1203  079A                     	;# 
  1204  080C                     	;# 
  1205  080C                     	;# 
  1206  080D                     	;# 
  1207  080E                     	;# 
  1208  080E                     	;# 
  1209  080F                     	;# 
  1210  0810                     	;# 
  1211  0810                     	;# 
  1212  0811                     	;# 
  1213  0812                     	;# 
  1214  0812                     	;# 
  1215  0813                     	;# 
  1216  0814                     	;# 
  1217  0815                     	;# 
  1218  0816                     	;# 
  1219  0817                     	;# 
  1220  0818                     	;# 
  1221  0819                     	;# 
  1222  081A                     	;# 
  1223  081A                     	;# 
  1224  081B                     	;# 
  1225  081C                     	;# 
  1226  081C                     	;# 
  1227  081D                     	;# 
  1228  088C                     	;# 
  1229  088D                     	;# 
  1230  088E                     	;# 
  1231  088F                     	;# 
  1232  088F                     	;# 
  1233  0890                     	;# 
  1234  0891                     	;# 
  1235  0892                     	;# 
  1236  0893                     	;# 
  1237  0893                     	;# 
  1238  0894                     	;# 
  1239  0895                     	;# 
  1240  0896                     	;# 
  1241  0897                     	;# 
  1242  0897                     	;# 
  1243  0898                     	;# 
  1244  0899                     	;# 
  1245  0D8C                     	;# 
  1246  0D8C                     	;# 
  1247  0D8D                     	;# 
  1248  0D8E                     	;# 
  1249  0D8F                     	;# 
  1250  0D8F                     	;# 
  1251  0D90                     	;# 
  1252  0D91                     	;# 
  1253  0D92                     	;# 
  1254  0D92                     	;# 
  1255  0D93                     	;# 
  1256  0D94                     	;# 
  1257  0D95                     	;# 
  1258  0D95                     	;# 
  1259  0D96                     	;# 
  1260  0D97                     	;# 
  1261  0D98                     	;# 
  1262  0D99                     	;# 
  1263  0D9A                     	;# 
  1264  0D9B                     	;# 
  1265  0D9C                     	;# 
  1266  0D9D                     	;# 
  1267  0D9E                     	;# 
  1268  0D9E                     	;# 
  1269  0D9F                     	;# 
  1270  0DA0                     	;# 
  1271  0DA1                     	;# 
  1272  0DA1                     	;# 
  1273  0DA2                     	;# 
  1274  0DA3                     	;# 
  1275  0DA4                     	;# 
  1276  0DA4                     	;# 
  1277  0DA5                     	;# 
  1278  0DA6                     	;# 
  1279  0DA7                     	;# 
  1280  0DA7                     	;# 
  1281  0DA8                     	;# 
  1282  0DA9                     	;# 
  1283  0DAA                     	;# 
  1284  0DAB                     	;# 
  1285  0DAC                     	;# 
  1286  0DAD                     	;# 
  1287  0DAE                     	;# 
  1288  0DAF                     	;# 
  1289  0E0F                     	;# 
  1290  0E10                     	;# 
  1291  0E11                     	;# 
  1292  0E12                     	;# 
  1293  0E13                     	;# 
  1294  0E14                     	;# 
  1295  0E15                     	;# 
  1296  0E16                     	;# 
  1297  0E17                     	;# 
  1298  0E18                     	;# 
  1299  0E19                     	;# 
  1300  0E1A                     	;# 
  1301  0E1B                     	;# 
  1302  0E1C                     	;# 
  1303  0E1D                     	;# 
  1304  0E1E                     	;# 
  1305  0E1F                     	;# 
  1306  0E20                     	;# 
  1307  0E21                     	;# 
  1308  0E22                     	;# 
  1309  0E23                     	;# 
  1310  0E24                     	;# 
  1311  0E25                     	;# 
  1312  0E26                     	;# 
  1313  0E27                     	;# 
  1314  0E28                     	;# 
  1315  0E29                     	;# 
  1316  0E2A                     	;# 
  1317  0E2B                     	;# 
  1318  0E2C                     	;# 
  1319  0E2D                     	;# 
  1320  0E2E                     	;# 
  1321  0E90                     	;# 
  1322  0E91                     	;# 
  1323  0E92                     	;# 
  1324  0E94                     	;# 
  1325  0E95                     	;# 
  1326  0E9C                     	;# 
  1327  0E9D                     	;# 
  1328  0E9E                     	;# 
  1329  0E9F                     	;# 
  1330  0EA0                     	;# 
  1331  0EA1                     	;# 
  1332  0EA2                     	;# 
  1333  0EA3                     	;# 
  1334  0EA4                     	;# 
  1335  0EA5                     	;# 
  1336  0EA6                     	;# 
  1337  0EA7                     	;# 
  1338  0F0F                     	;# 
  1339  0F10                     	;# 
  1340  0F11                     	;# 
  1341  0F12                     	;# 
  1342  0F13                     	;# 
  1343  0F14                     	;# 
  1344  0F15                     	;# 
  1345  0F16                     	;# 
  1346  0F17                     	;# 
  1347  0F18                     	;# 
  1348  0F19                     	;# 
  1349  0F1A                     	;# 
  1350  0F1B                     	;# 
  1351  0F1C                     	;# 
  1352  0F1D                     	;# 
  1353  0F1E                     	;# 
  1354  0F1F                     	;# 
  1355  0F20                     	;# 
  1356  0F21                     	;# 
  1357  0F22                     	;# 
  1358  0F23                     	;# 
  1359  0F24                     	;# 
  1360  0F25                     	;# 
  1361  0F26                     	;# 
  1362  0F27                     	;# 
  1363  0F28                     	;# 
  1364  0F29                     	;# 
  1365  0F2A                     	;# 
  1366  0F2B                     	;# 
  1367  0F2C                     	;# 
  1368  0F2D                     	;# 
  1369  0F2E                     	;# 
  1370  0F2F                     	;# 
  1371  0F30                     	;# 
  1372  0F31                     	;# 
  1373  0F32                     	;# 
  1374  0F33                     	;# 
  1375  0F34                     	;# 
  1376  0F35                     	;# 
  1377  0F36                     	;# 
  1378  0F37                     	;# 
  1379  0FE4                     	;# 
  1380  0FE5                     	;# 
  1381  0FE6                     	;# 
  1382  0FE7                     	;# 
  1383  0FE8                     	;# 
  1384  0FE9                     	;# 
  1385  0FEA                     	;# 
  1386  0FEB                     	;# 
  1387  0FED                     	;# 
  1388  0FEE                     	;# 
  1389  0FEF                     	;# 
  1390  0000                     	;# 
  1391  0001                     	;# 
  1392  0002                     	;# 
  1393  0003                     	;# 
  1394  0004                     	;# 
  1395  0005                     	;# 
  1396  0006                     	;# 
  1397  0007                     	;# 
  1398  0008                     	;# 
  1399  0009                     	;# 
  1400  000A                     	;# 
  1401  000B                     	;# 
  1402  000C                     	;# 
  1403  000D                     	;# 
  1404  000E                     	;# 
  1405  0010                     	;# 
  1406  0011                     	;# 
  1407  0012                     	;# 
  1408  0013                     	;# 
  1409  0014                     	;# 
  1410  0015                     	;# 
  1411  0016                     	;# 
  1412  0016                     	;# 
  1413  0017                     	;# 
  1414  0018                     	;# 
  1415  0019                     	;# 
  1416  001A                     	;# 
  1417  001A                     	;# 
  1418  001B                     	;# 
  1419  001B                     	;# 
  1420  001C                     	;# 
  1421  001D                     	;# 
  1422  001E                     	;# 
  1423  001F                     	;# 
  1424  008C                     	;# 
  1425  008D                     	;# 
  1426  008E                     	;# 
  1427  0090                     	;# 
  1428  0091                     	;# 
  1429  0092                     	;# 
  1430  0093                     	;# 
  1431  0094                     	;# 
  1432  0095                     	;# 
  1433  0096                     	;# 
  1434  0098                     	;# 
  1435  0099                     	;# 
  1436  009A                     	;# 
  1437  009B                     	;# 
  1438  009B                     	;# 
  1439  009C                     	;# 
  1440  009D                     	;# 
  1441  009E                     	;# 
  1442  009F                     	;# 
  1443  010C                     	;# 
  1444  010D                     	;# 
  1445  010E                     	;# 
  1446  0111                     	;# 
  1447  0112                     	;# 
  1448  0113                     	;# 
  1449  0114                     	;# 
  1450  0115                     	;# 
  1451  0116                     	;# 
  1452  0117                     	;# 
  1453  0118                     	;# 
  1454  0119                     	;# 
  1455  011C                     	;# 
  1456  018C                     	;# 
  1457  018D                     	;# 
  1458  018E                     	;# 
  1459  0191                     	;# 
  1460  0191                     	;# 
  1461  0192                     	;# 
  1462  0193                     	;# 
  1463  0193                     	;# 
  1464  0194                     	;# 
  1465  0195                     	;# 
  1466  0196                     	;# 
  1467  0197                     	;# 
  1468  0199                     	;# 
  1469  0199                     	;# 
  1470  0199                     	;# 
  1471  019A                     	;# 
  1472  019A                     	;# 
  1473  019A                     	;# 
  1474  019B                     	;# 
  1475  019B                     	;# 
  1476  019B                     	;# 
  1477  019B                     	;# 
  1478  019B                     	;# 
  1479  019C                     	;# 
  1480  019C                     	;# 
  1481  019C                     	;# 
  1482  019D                     	;# 
  1483  019D                     	;# 
  1484  019D                     	;# 
  1485  019E                     	;# 
  1486  019E                     	;# 
  1487  019E                     	;# 
  1488  019F                     	;# 
  1489  019F                     	;# 
  1490  019F                     	;# 
  1491  019F                     	;# 
  1492  019F                     	;# 
  1493  020C                     	;# 
  1494  020D                     	;# 
  1495  020E                     	;# 
  1496  0211                     	;# 
  1497  0211                     	;# 
  1498  0212                     	;# 
  1499  0212                     	;# 
  1500  0213                     	;# 
  1501  0213                     	;# 
  1502  0214                     	;# 
  1503  0214                     	;# 
  1504  0215                     	;# 
  1505  0215                     	;# 
  1506  0215                     	;# 
  1507  0215                     	;# 
  1508  0216                     	;# 
  1509  0216                     	;# 
  1510  0217                     	;# 
  1511  0217                     	;# 
  1512  028C                     	;# 
  1513  028D                     	;# 
  1514  028E                     	;# 
  1515  0291                     	;# 
  1516  0291                     	;# 
  1517  0292                     	;# 
  1518  0293                     	;# 
  1519  0294                     	;# 
  1520  0298                     	;# 
  1521  0298                     	;# 
  1522  0299                     	;# 
  1523  029A                     	;# 
  1524  029B                     	;# 
  1525  029E                     	;# 
  1526  030C                     	;# 
  1527  030D                     	;# 
  1528  030E                     	;# 
  1529  038C                     	;# 
  1530  038D                     	;# 
  1531  038E                     	;# 
  1532  0391                     	;# 
  1533  0392                     	;# 
  1534  0393                     	;# 
  1535  0394                     	;# 
  1536  0395                     	;# 
  1537  0396                     	;# 
  1538  0397                     	;# 
  1539  0398                     	;# 
  1540  0399                     	;# 
  1541  040E                     	;# 
  1542  0413                     	;# 
  1543  0413                     	;# 
  1544  0414                     	;# 
  1545  0414                     	;# 
  1546  0415                     	;# 
  1547  0416                     	;# 
  1548  0417                     	;# 
  1549  0418                     	;# 
  1550  041A                     	;# 
  1551  041A                     	;# 
  1552  041B                     	;# 
  1553  041B                     	;# 
  1554  041C                     	;# 
  1555  041D                     	;# 
  1556  041E                     	;# 
  1557  041F                     	;# 
  1558  0493                     	;# 
  1559  0494                     	;# 
  1560  0495                     	;# 
  1561  0496                     	;# 
  1562  049A                     	;# 
  1563  049B                     	;# 
  1564  049C                     	;# 
  1565  049D                     	;# 
  1566  058C                     	;# 
  1567  058C                     	;# 
  1568  058D                     	;# 
  1569  058E                     	;# 
  1570  058E                     	;# 
  1571  058F                     	;# 
  1572  0590                     	;# 
  1573  0590                     	;# 
  1574  0591                     	;# 
  1575  0592                     	;# 
  1576  0592                     	;# 
  1577  0593                     	;# 
  1578  0594                     	;# 
  1579  0594                     	;# 
  1580  0595                     	;# 
  1581  0596                     	;# 
  1582  0596                     	;# 
  1583  0597                     	;# 
  1584  0598                     	;# 
  1585  0599                     	;# 
  1586  059A                     	;# 
  1587  059B                     	;# 
  1588  059B                     	;# 
  1589  059C                     	;# 
  1590  059D                     	;# 
  1591  060C                     	;# 
  1592  060C                     	;# 
  1593  060D                     	;# 
  1594  060E                     	;# 
  1595  060F                     	;# 
  1596  060F                     	;# 
  1597  0610                     	;# 
  1598  0611                     	;# 
  1599  0612                     	;# 
  1600  0613                     	;# 
  1601  0614                     	;# 
  1602  0617                     	;# 
  1603  0618                     	;# 
  1604  0619                     	;# 
  1605  061A                     	;# 
  1606  061B                     	;# 
  1607  061C                     	;# 
  1608  0691                     	;# 
  1609  0692                     	;# 
  1610  0693                     	;# 
  1611  0694                     	;# 
  1612  0695                     	;# 
  1613  0696                     	;# 
  1614  0697                     	;# 
  1615  0699                     	;# 
  1616  069A                     	;# 
  1617  0711                     	;# 
  1618  0712                     	;# 
  1619  0713                     	;# 
  1620  0714                     	;# 
  1621  0715                     	;# 
  1622  0718                     	;# 
  1623  0718                     	;# 
  1624  0719                     	;# 
  1625  071A                     	;# 
  1626  071A                     	;# 
  1627  071B                     	;# 
  1628  071C                     	;# 
  1629  071D                     	;# 
  1630  0791                     	;# 
  1631  0791                     	;# 
  1632  0792                     	;# 
  1633  0793                     	;# 
  1634  0793                     	;# 
  1635  0794                     	;# 
  1636  0795                     	;# 
  1637  0795                     	;# 
  1638  0796                     	;# 
  1639  0797                     	;# 
  1640  0797                     	;# 
  1641  0798                     	;# 
  1642  0799                     	;# 
  1643  079A                     	;# 
  1644  080C                     	;# 
  1645  080C                     	;# 
  1646  080D                     	;# 
  1647  080E                     	;# 
  1648  080E                     	;# 
  1649  080F                     	;# 
  1650  0810                     	;# 
  1651  0810                     	;# 
  1652  0811                     	;# 
  1653  0812                     	;# 
  1654  0812                     	;# 
  1655  0813                     	;# 
  1656  0814                     	;# 
  1657  0815                     	;# 
  1658  0816                     	;# 
  1659  0817                     	;# 
  1660  0818                     	;# 
  1661  0819                     	;# 
  1662  081A                     	;# 
  1663  081A                     	;# 
  1664  081B                     	;# 
  1665  081C                     	;# 
  1666  081C                     	;# 
  1667  081D                     	;# 
  1668  088C                     	;# 
  1669  088D                     	;# 
  1670  088E                     	;# 
  1671  088F                     	;# 
  1672  088F                     	;# 
  1673  0890                     	;# 
  1674  0891                     	;# 
  1675  0892                     	;# 
  1676  0893                     	;# 
  1677  0893                     	;# 
  1678  0894                     	;# 
  1679  0895                     	;# 
  1680  0896                     	;# 
  1681  0897                     	;# 
  1682  0897                     	;# 
  1683  0898                     	;# 
  1684  0899                     	;# 
  1685  0D8C                     	;# 
  1686  0D8C                     	;# 
  1687  0D8D                     	;# 
  1688  0D8E                     	;# 
  1689  0D8F                     	;# 
  1690  0D8F                     	;# 
  1691  0D90                     	;# 
  1692  0D91                     	;# 
  1693  0D92                     	;# 
  1694  0D92                     	;# 
  1695  0D93                     	;# 
  1696  0D94                     	;# 
  1697  0D95                     	;# 
  1698  0D95                     	;# 
  1699  0D96                     	;# 
  1700  0D97                     	;# 
  1701  0D98                     	;# 
  1702  0D99                     	;# 
  1703  0D9A                     	;# 
  1704  0D9B                     	;# 
  1705  0D9C                     	;# 
  1706  0D9D                     	;# 
  1707  0D9E                     	;# 
  1708  0D9E                     	;# 
  1709  0D9F                     	;# 
  1710  0DA0                     	;# 
  1711  0DA1                     	;# 
  1712  0DA1                     	;# 
  1713  0DA2                     	;# 
  1714  0DA3                     	;# 
  1715  0DA4                     	;# 
  1716  0DA4                     	;# 
  1717  0DA5                     	;# 
  1718  0DA6                     	;# 
  1719  0DA7                     	;# 
  1720  0DA7                     	;# 
  1721  0DA8                     	;# 
  1722  0DA9                     	;# 
  1723  0DAA                     	;# 
  1724  0DAB                     	;# 
  1725  0DAC                     	;# 
  1726  0DAD                     	;# 
  1727  0DAE                     	;# 
  1728  0DAF                     	;# 
  1729  0E0F                     	;# 
  1730  0E10                     	;# 
  1731  0E11                     	;# 
  1732  0E12                     	;# 
  1733  0E13                     	;# 
  1734  0E14                     	;# 
  1735  0E15                     	;# 
  1736  0E16                     	;# 
  1737  0E17                     	;# 
  1738  0E18                     	;# 
  1739  0E19                     	;# 
  1740  0E1A                     	;# 
  1741  0E1B                     	;# 
  1742  0E1C                     	;# 
  1743  0E1D                     	;# 
  1744  0E1E                     	;# 
  1745  0E1F                     	;# 
  1746  0E20                     	;# 
  1747  0E21                     	;# 
  1748  0E22                     	;# 
  1749  0E23                     	;# 
  1750  0E24                     	;# 
  1751  0E25                     	;# 
  1752  0E26                     	;# 
  1753  0E27                     	;# 
  1754  0E28                     	;# 
  1755  0E29                     	;# 
  1756  0E2A                     	;# 
  1757  0E2B                     	;# 
  1758  0E2C                     	;# 
  1759  0E2D                     	;# 
  1760  0E2E                     	;# 
  1761  0E90                     	;# 
  1762  0E91                     	;# 
  1763  0E92                     	;# 
  1764  0E94                     	;# 
  1765  0E95                     	;# 
  1766  0E9C                     	;# 
  1767  0E9D                     	;# 
  1768  0E9E                     	;# 
  1769  0E9F                     	;# 
  1770  0EA0                     	;# 
  1771  0EA1                     	;# 
  1772  0EA2                     	;# 
  1773  0EA3                     	;# 
  1774  0EA4                     	;# 
  1775  0EA5                     	;# 
  1776  0EA6                     	;# 
  1777  0EA7                     	;# 
  1778  0F0F                     	;# 
  1779  0F10                     	;# 
  1780  0F11                     	;# 
  1781  0F12                     	;# 
  1782  0F13                     	;# 
  1783  0F14                     	;# 
  1784  0F15                     	;# 
  1785  0F16                     	;# 
  1786  0F17                     	;# 
  1787  0F18                     	;# 
  1788  0F19                     	;# 
  1789  0F1A                     	;# 
  1790  0F1B                     	;# 
  1791  0F1C                     	;# 
  1792  0F1D                     	;# 
  1793  0F1E                     	;# 
  1794  0F1F                     	;# 
  1795  0F20                     	;# 
  1796  0F21                     	;# 
  1797  0F22                     	;# 
  1798  0F23                     	;# 
  1799  0F24                     	;# 
  1800  0F25                     	;# 
  1801  0F26                     	;# 
  1802  0F27                     	;# 
  1803  0F28                     	;# 
  1804  0F29                     	;# 
  1805  0F2A                     	;# 
  1806  0F2B                     	;# 
  1807  0F2C                     	;# 
  1808  0F2D                     	;# 
  1809  0F2E                     	;# 
  1810  0F2F                     	;# 
  1811  0F30                     	;# 
  1812  0F31                     	;# 
  1813  0F32                     	;# 
  1814  0F33                     	;# 
  1815  0F34                     	;# 
  1816  0F35                     	;# 
  1817  0F36                     	;# 
  1818  0F37                     	;# 
  1819  0FE4                     	;# 
  1820  0FE5                     	;# 
  1821  0FE6                     	;# 
  1822  0FE7                     	;# 
  1823  0FE8                     	;# 
  1824  0FE9                     	;# 
  1825  0FEA                     	;# 
  1826  0FEB                     	;# 
  1827  0FED                     	;# 
  1828  0FEE                     	;# 
  1829  0FEF                     	;# 
  1830  0000                     	;# 
  1831  0001                     	;# 
  1832  0002                     	;# 
  1833  0003                     	;# 
  1834  0004                     	;# 
  1835  0005                     	;# 
  1836  0006                     	;# 
  1837  0007                     	;# 
  1838  0008                     	;# 
  1839  0009                     	;# 
  1840  000A                     	;# 
  1841  000B                     	;# 
  1842  000C                     	;# 
  1843  000D                     	;# 
  1844  000E                     	;# 
  1845  0010                     	;# 
  1846  0011                     	;# 
  1847  0012                     	;# 
  1848  0013                     	;# 
  1849  0014                     	;# 
  1850  0015                     	;# 
  1851  0016                     	;# 
  1852  0016                     	;# 
  1853  0017                     	;# 
  1854  0018                     	;# 
  1855  0019                     	;# 
  1856  001A                     	;# 
  1857  001A                     	;# 
  1858  001B                     	;# 
  1859  001B                     	;# 
  1860  001C                     	;# 
  1861  001D                     	;# 
  1862  001E                     	;# 
  1863  001F                     	;# 
  1864  008C                     	;# 
  1865  008D                     	;# 
  1866  008E                     	;# 
  1867  0090                     	;# 
  1868  0091                     	;# 
  1869  0092                     	;# 
  1870  0093                     	;# 
  1871  0094                     	;# 
  1872  0095                     	;# 
  1873  0096                     	;# 
  1874  0098                     	;# 
  1875  0099                     	;# 
  1876  009A                     	;# 
  1877  009B                     	;# 
  1878  009B                     	;# 
  1879  009C                     	;# 
  1880  009D                     	;# 
  1881  009E                     	;# 
  1882  009F                     	;# 
  1883  010C                     	;# 
  1884  010D                     	;# 
  1885  010E                     	;# 
  1886  0111                     	;# 
  1887  0112                     	;# 
  1888  0113                     	;# 
  1889  0114                     	;# 
  1890  0115                     	;# 
  1891  0116                     	;# 
  1892  0117                     	;# 
  1893  0118                     	;# 
  1894  0119                     	;# 
  1895  011C                     	;# 
  1896  018C                     	;# 
  1897  018D                     	;# 
  1898  018E                     	;# 
  1899  0191                     	;# 
  1900  0191                     	;# 
  1901  0192                     	;# 
  1902  0193                     	;# 
  1903  0193                     	;# 
  1904  0194                     	;# 
  1905  0195                     	;# 
  1906  0196                     	;# 
  1907  0197                     	;# 
  1908  0199                     	;# 
  1909  0199                     	;# 
  1910  0199                     	;# 
  1911  019A                     	;# 
  1912  019A                     	;# 
  1913  019A                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019B                     	;# 
  1917  019B                     	;# 
  1918  019B                     	;# 
  1919  019C                     	;# 
  1920  019C                     	;# 
  1921  019C                     	;# 
  1922  019D                     	;# 
  1923  019D                     	;# 
  1924  019D                     	;# 
  1925  019E                     	;# 
  1926  019E                     	;# 
  1927  019E                     	;# 
  1928  019F                     	;# 
  1929  019F                     	;# 
  1930  019F                     	;# 
  1931  019F                     	;# 
  1932  019F                     	;# 
  1933  020C                     	;# 
  1934  020D                     	;# 
  1935  020E                     	;# 
  1936  0211                     	;# 
  1937  0211                     	;# 
  1938  0212                     	;# 
  1939  0212                     	;# 
  1940  0213                     	;# 
  1941  0213                     	;# 
  1942  0214                     	;# 
  1943  0214                     	;# 
  1944  0215                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0216                     	;# 
  1949  0216                     	;# 
  1950  0217                     	;# 
  1951  0217                     	;# 
  1952  028C                     	;# 
  1953  028D                     	;# 
  1954  028E                     	;# 
  1955  0291                     	;# 
  1956  0291                     	;# 
  1957  0292                     	;# 
  1958  0293                     	;# 
  1959  0294                     	;# 
  1960  0298                     	;# 
  1961  0298                     	;# 
  1962  0299                     	;# 
  1963  029A                     	;# 
  1964  029B                     	;# 
  1965  029E                     	;# 
  1966  030C                     	;# 
  1967  030D                     	;# 
  1968  030E                     	;# 
  1969  038C                     	;# 
  1970  038D                     	;# 
  1971  038E                     	;# 
  1972  0391                     	;# 
  1973  0392                     	;# 
  1974  0393                     	;# 
  1975  0394                     	;# 
  1976  0395                     	;# 
  1977  0396                     	;# 
  1978  0397                     	;# 
  1979  0398                     	;# 
  1980  0399                     	;# 
  1981  040E                     	;# 
  1982  0413                     	;# 
  1983  0413                     	;# 
  1984  0414                     	;# 
  1985  0414                     	;# 
  1986  0415                     	;# 
  1987  0416                     	;# 
  1988  0417                     	;# 
  1989  0418                     	;# 
  1990  041A                     	;# 
  1991  041A                     	;# 
  1992  041B                     	;# 
  1993  041B                     	;# 
  1994  041C                     	;# 
  1995  041D                     	;# 
  1996  041E                     	;# 
  1997  041F                     	;# 
  1998  0493                     	;# 
  1999  0494                     	;# 
  2000  0495                     	;# 
  2001  0496                     	;# 
  2002  049A                     	;# 
  2003  049B                     	;# 
  2004  049C                     	;# 
  2005  049D                     	;# 
  2006  058C                     	;# 
  2007  058C                     	;# 
  2008  058D                     	;# 
  2009  058E                     	;# 
  2010  058E                     	;# 
  2011  058F                     	;# 
  2012  0590                     	;# 
  2013  0590                     	;# 
  2014  0591                     	;# 
  2015  0592                     	;# 
  2016  0592                     	;# 
  2017  0593                     	;# 
  2018  0594                     	;# 
  2019  0594                     	;# 
  2020  0595                     	;# 
  2021  0596                     	;# 
  2022  0596                     	;# 
  2023  0597                     	;# 
  2024  0598                     	;# 
  2025  0599                     	;# 
  2026  059A                     	;# 
  2027  059B                     	;# 
  2028  059B                     	;# 
  2029  059C                     	;# 
  2030  059D                     	;# 
  2031  060C                     	;# 
  2032  060C                     	;# 
  2033  060D                     	;# 
  2034  060E                     	;# 
  2035  060F                     	;# 
  2036  060F                     	;# 
  2037  0610                     	;# 
  2038  0611                     	;# 
  2039  0612                     	;# 
  2040  0613                     	;# 
  2041  0614                     	;# 
  2042  0617                     	;# 
  2043  0618                     	;# 
  2044  0619                     	;# 
  2045  061A                     	;# 
  2046  061B                     	;# 
  2047  061C                     	;# 
  2048  0691                     	;# 
  2049  0692                     	;# 
  2050  0693                     	;# 
  2051  0694                     	;# 
  2052  0695                     	;# 
  2053  0696                     	;# 
  2054  0697                     	;# 
  2055  0699                     	;# 
  2056  069A                     	;# 
  2057  0711                     	;# 
  2058  0712                     	;# 
  2059  0713                     	;# 
  2060  0714                     	;# 
  2061  0715                     	;# 
  2062  0718                     	;# 
  2063  0718                     	;# 
  2064  0719                     	;# 
  2065  071A                     	;# 
  2066  071A                     	;# 
  2067  071B                     	;# 
  2068  071C                     	;# 
  2069  071D                     	;# 
  2070  0791                     	;# 
  2071  0791                     	;# 
  2072  0792                     	;# 
  2073  0793                     	;# 
  2074  0793                     	;# 
  2075  0794                     	;# 
  2076  0795                     	;# 
  2077  0795                     	;# 
  2078  0796                     	;# 
  2079  0797                     	;# 
  2080  0797                     	;# 
  2081  0798                     	;# 
  2082  0799                     	;# 
  2083  079A                     	;# 
  2084  080C                     	;# 
  2085  080C                     	;# 
  2086  080D                     	;# 
  2087  080E                     	;# 
  2088  080E                     	;# 
  2089  080F                     	;# 
  2090  0810                     	;# 
  2091  0810                     	;# 
  2092  0811                     	;# 
  2093  0812                     	;# 
  2094  0812                     	;# 
  2095  0813                     	;# 
  2096  0814                     	;# 
  2097  0815                     	;# 
  2098  0816                     	;# 
  2099  0817                     	;# 
  2100  0818                     	;# 
  2101  0819                     	;# 
  2102  081A                     	;# 
  2103  081A                     	;# 
  2104  081B                     	;# 
  2105  081C                     	;# 
  2106  081C                     	;# 
  2107  081D                     	;# 
  2108  088C                     	;# 
  2109  088D                     	;# 
  2110  088E                     	;# 
  2111  088F                     	;# 
  2112  088F                     	;# 
  2113  0890                     	;# 
  2114  0891                     	;# 
  2115  0892                     	;# 
  2116  0893                     	;# 
  2117  0893                     	;# 
  2118  0894                     	;# 
  2119  0895                     	;# 
  2120  0896                     	;# 
  2121  0897                     	;# 
  2122  0897                     	;# 
  2123  0898                     	;# 
  2124  0899                     	;# 
  2125  0D8C                     	;# 
  2126  0D8C                     	;# 
  2127  0D8D                     	;# 
  2128  0D8E                     	;# 
  2129  0D8F                     	;# 
  2130  0D8F                     	;# 
  2131  0D90                     	;# 
  2132  0D91                     	;# 
  2133  0D92                     	;# 
  2134  0D92                     	;# 
  2135  0D93                     	;# 
  2136  0D94                     	;# 
  2137  0D95                     	;# 
  2138  0D95                     	;# 
  2139  0D96                     	;# 
  2140  0D97                     	;# 
  2141  0D98                     	;# 
  2142  0D99                     	;# 
  2143  0D9A                     	;# 
  2144  0D9B                     	;# 
  2145  0D9C                     	;# 
  2146  0D9D                     	;# 
  2147  0D9E                     	;# 
  2148  0D9E                     	;# 
  2149  0D9F                     	;# 
  2150  0DA0                     	;# 
  2151  0DA1                     	;# 
  2152  0DA1                     	;# 
  2153  0DA2                     	;# 
  2154  0DA3                     	;# 
  2155  0DA4                     	;# 
  2156  0DA4                     	;# 
  2157  0DA5                     	;# 
  2158  0DA6                     	;# 
  2159  0DA7                     	;# 
  2160  0DA7                     	;# 
  2161  0DA8                     	;# 
  2162  0DA9                     	;# 
  2163  0DAA                     	;# 
  2164  0DAB                     	;# 
  2165  0DAC                     	;# 
  2166  0DAD                     	;# 
  2167  0DAE                     	;# 
  2168  0DAF                     	;# 
  2169  0E0F                     	;# 
  2170  0E10                     	;# 
  2171  0E11                     	;# 
  2172  0E12                     	;# 
  2173  0E13                     	;# 
  2174  0E14                     	;# 
  2175  0E15                     	;# 
  2176  0E16                     	;# 
  2177  0E17                     	;# 
  2178  0E18                     	;# 
  2179  0E19                     	;# 
  2180  0E1A                     	;# 
  2181  0E1B                     	;# 
  2182  0E1C                     	;# 
  2183  0E1D                     	;# 
  2184  0E1E                     	;# 
  2185  0E1F                     	;# 
  2186  0E20                     	;# 
  2187  0E21                     	;# 
  2188  0E22                     	;# 
  2189  0E23                     	;# 
  2190  0E24                     	;# 
  2191  0E25                     	;# 
  2192  0E26                     	;# 
  2193  0E27                     	;# 
  2194  0E28                     	;# 
  2195  0E29                     	;# 
  2196  0E2A                     	;# 
  2197  0E2B                     	;# 
  2198  0E2C                     	;# 
  2199  0E2D                     	;# 
  2200  0E2E                     	;# 
  2201  0E90                     	;# 
  2202  0E91                     	;# 
  2203  0E92                     	;# 
  2204  0E94                     	;# 
  2205  0E95                     	;# 
  2206  0E9C                     	;# 
  2207  0E9D                     	;# 
  2208  0E9E                     	;# 
  2209  0E9F                     	;# 
  2210  0EA0                     	;# 
  2211  0EA1                     	;# 
  2212  0EA2                     	;# 
  2213  0EA3                     	;# 
  2214  0EA4                     	;# 
  2215  0EA5                     	;# 
  2216  0EA6                     	;# 
  2217  0EA7                     	;# 
  2218  0F0F                     	;# 
  2219  0F10                     	;# 
  2220  0F11                     	;# 
  2221  0F12                     	;# 
  2222  0F13                     	;# 
  2223  0F14                     	;# 
  2224  0F15                     	;# 
  2225  0F16                     	;# 
  2226  0F17                     	;# 
  2227  0F18                     	;# 
  2228  0F19                     	;# 
  2229  0F1A                     	;# 
  2230  0F1B                     	;# 
  2231  0F1C                     	;# 
  2232  0F1D                     	;# 
  2233  0F1E                     	;# 
  2234  0F1F                     	;# 
  2235  0F20                     	;# 
  2236  0F21                     	;# 
  2237  0F22                     	;# 
  2238  0F23                     	;# 
  2239  0F24                     	;# 
  2240  0F25                     	;# 
  2241  0F26                     	;# 
  2242  0F27                     	;# 
  2243  0F28                     	;# 
  2244  0F29                     	;# 
  2245  0F2A                     	;# 
  2246  0F2B                     	;# 
  2247  0F2C                     	;# 
  2248  0F2D                     	;# 
  2249  0F2E                     	;# 
  2250  0F2F                     	;# 
  2251  0F30                     	;# 
  2252  0F31                     	;# 
  2253  0F32                     	;# 
  2254  0F33                     	;# 
  2255  0F34                     	;# 
  2256  0F35                     	;# 
  2257  0F36                     	;# 
  2258  0F37                     	;# 
  2259  0FE4                     	;# 
  2260  0FE5                     	;# 
  2261  0FE6                     	;# 
  2262  0FE7                     	;# 
  2263  0FE8                     	;# 
  2264  0FE9                     	;# 
  2265  0FEA                     	;# 
  2266  0FEB                     	;# 
  2267  0FED                     	;# 
  2268  0FEE                     	;# 
  2269  0FEF                     	;# 
  2270  0000                     	;# 
  2271  0001                     	;# 
  2272  0002                     	;# 
  2273  0003                     	;# 
  2274  0004                     	;# 
  2275  0005                     	;# 
  2276  0006                     	;# 
  2277  0007                     	;# 
  2278  0008                     	;# 
  2279  0009                     	;# 
  2280  000A                     	;# 
  2281  000B                     	;# 
  2282  000C                     	;# 
  2283  000D                     	;# 
  2284  000E                     	;# 
  2285  0010                     	;# 
  2286  0011                     	;# 
  2287  0012                     	;# 
  2288  0013                     	;# 
  2289  0014                     	;# 
  2290  0015                     	;# 
  2291  0016                     	;# 
  2292  0016                     	;# 
  2293  0017                     	;# 
  2294  0018                     	;# 
  2295  0019                     	;# 
  2296  001A                     	;# 
  2297  001A                     	;# 
  2298  001B                     	;# 
  2299  001B                     	;# 
  2300  001C                     	;# 
  2301  001D                     	;# 
  2302  001E                     	;# 
  2303  001F                     	;# 
  2304  008C                     	;# 
  2305  008D                     	;# 
  2306  008E                     	;# 
  2307  0090                     	;# 
  2308  0091                     	;# 
  2309  0092                     	;# 
  2310  0093                     	;# 
  2311  0094                     	;# 
  2312  0095                     	;# 
  2313  0096                     	;# 
  2314  0098                     	;# 
  2315  0099                     	;# 
  2316  009A                     	;# 
  2317  009B                     	;# 
  2318  009B                     	;# 
  2319  009C                     	;# 
  2320  009D                     	;# 
  2321  009E                     	;# 
  2322  009F                     	;# 
  2323  010C                     	;# 
  2324  010D                     	;# 
  2325  010E                     	;# 
  2326  0111                     	;# 
  2327  0112                     	;# 
  2328  0113                     	;# 
  2329  0114                     	;# 
  2330  0115                     	;# 
  2331  0116                     	;# 
  2332  0117                     	;# 
  2333  0118                     	;# 
  2334  0119                     	;# 
  2335  011C                     	;# 
  2336  018C                     	;# 
  2337  018D                     	;# 
  2338  018E                     	;# 
  2339  0191                     	;# 
  2340  0191                     	;# 
  2341  0192                     	;# 
  2342  0193                     	;# 
  2343  0193                     	;# 
  2344  0194                     	;# 
  2345  0195                     	;# 
  2346  0196                     	;# 
  2347  0197                     	;# 
  2348  0199                     	;# 
  2349  0199                     	;# 
  2350  0199                     	;# 
  2351  019A                     	;# 
  2352  019A                     	;# 
  2353  019A                     	;# 
  2354  019B                     	;# 
  2355  019B                     	;# 
  2356  019B                     	;# 
  2357  019B                     	;# 
  2358  019B                     	;# 
  2359  019C                     	;# 
  2360  019C                     	;# 
  2361  019C                     	;# 
  2362  019D                     	;# 
  2363  019D                     	;# 
  2364  019D                     	;# 
  2365  019E                     	;# 
  2366  019E                     	;# 
  2367  019E                     	;# 
  2368  019F                     	;# 
  2369  019F                     	;# 
  2370  019F                     	;# 
  2371  019F                     	;# 
  2372  019F                     	;# 
  2373  020C                     	;# 
  2374  020D                     	;# 
  2375  020E                     	;# 
  2376  0211                     	;# 
  2377  0211                     	;# 
  2378  0212                     	;# 
  2379  0212                     	;# 
  2380  0213                     	;# 
  2381  0213                     	;# 
  2382  0214                     	;# 
  2383  0214                     	;# 
  2384  0215                     	;# 
  2385  0215                     	;# 
  2386  0215                     	;# 
  2387  0215                     	;# 
  2388  0216                     	;# 
  2389  0216                     	;# 
  2390  0217                     	;# 
  2391  0217                     	;# 
  2392  028C                     	;# 
  2393  028D                     	;# 
  2394  028E                     	;# 
  2395  0291                     	;# 
  2396  0291                     	;# 
  2397  0292                     	;# 
  2398  0293                     	;# 
  2399  0294                     	;# 
  2400  0298                     	;# 
  2401  0298                     	;# 
  2402  0299                     	;# 
  2403  029A                     	;# 
  2404  029B                     	;# 
  2405  029E                     	;# 
  2406  030C                     	;# 
  2407  030D                     	;# 
  2408  030E                     	;# 
  2409  038C                     	;# 
  2410  038D                     	;# 
  2411  038E                     	;# 
  2412  0391                     	;# 
  2413  0392                     	;# 
  2414  0393                     	;# 
  2415  0394                     	;# 
  2416  0395                     	;# 
  2417  0396                     	;# 
  2418  0397                     	;# 
  2419  0398                     	;# 
  2420  0399                     	;# 
  2421  040E                     	;# 
  2422  0413                     	;# 
  2423  0413                     	;# 
  2424  0414                     	;# 
  2425  0414                     	;# 
  2426  0415                     	;# 
  2427  0416                     	;# 
  2428  0417                     	;# 
  2429  0418                     	;# 
  2430  041A                     	;# 
  2431  041A                     	;# 
  2432  041B                     	;# 
  2433  041B                     	;# 
  2434  041C                     	;# 
  2435  041D                     	;# 
  2436  041E                     	;# 
  2437  041F                     	;# 
  2438  0493                     	;# 
  2439  0494                     	;# 
  2440  0495                     	;# 
  2441  0496                     	;# 
  2442  049A                     	;# 
  2443  049B                     	;# 
  2444  049C                     	;# 
  2445  049D                     	;# 
  2446  058C                     	;# 
  2447  058C                     	;# 
  2448  058D                     	;# 
  2449  058E                     	;# 
  2450  058E                     	;# 
  2451  058F                     	;# 
  2452  0590                     	;# 
  2453  0590                     	;# 
  2454  0591                     	;# 
  2455  0592                     	;# 
  2456  0592                     	;# 
  2457  0593                     	;# 
  2458  0594                     	;# 
  2459  0594                     	;# 
  2460  0595                     	;# 
  2461  0596                     	;# 
  2462  0596                     	;# 
  2463  0597                     	;# 
  2464  0598                     	;# 
  2465  0599                     	;# 
  2466  059A                     	;# 
  2467  059B                     	;# 
  2468  059B                     	;# 
  2469  059C                     	;# 
  2470  059D                     	;# 
  2471  060C                     	;# 
  2472  060C                     	;# 
  2473  060D                     	;# 
  2474  060E                     	;# 
  2475  060F                     	;# 
  2476  060F                     	;# 
  2477  0610                     	;# 
  2478  0611                     	;# 
  2479  0612                     	;# 
  2480  0613                     	;# 
  2481  0614                     	;# 
  2482  0617                     	;# 
  2483  0618                     	;# 
  2484  0619                     	;# 
  2485  061A                     	;# 
  2486  061B                     	;# 
  2487  061C                     	;# 
  2488  0691                     	;# 
  2489  0692                     	;# 
  2490  0693                     	;# 
  2491  0694                     	;# 
  2492  0695                     	;# 
  2493  0696                     	;# 
  2494  0697                     	;# 
  2495  0699                     	;# 
  2496  069A                     	;# 
  2497  0711                     	;# 
  2498  0712                     	;# 
  2499  0713                     	;# 
  2500  0714                     	;# 
  2501  0715                     	;# 
  2502  0718                     	;# 
  2503  0718                     	;# 
  2504  0719                     	;# 
  2505  071A                     	;# 
  2506  071A                     	;# 
  2507  071B                     	;# 
  2508  071C                     	;# 
  2509  071D                     	;# 
  2510  0791                     	;# 
  2511  0791                     	;# 
  2512  0792                     	;# 
  2513  0793                     	;# 
  2514  0793                     	;# 
  2515  0794                     	;# 
  2516  0795                     	;# 
  2517  0795                     	;# 
  2518  0796                     	;# 
  2519  0797                     	;# 
  2520  0797                     	;# 
  2521  0798                     	;# 
  2522  0799                     	;# 
  2523  079A                     	;# 
  2524  080C                     	;# 
  2525  080C                     	;# 
  2526  080D                     	;# 
  2527  080E                     	;# 
  2528  080E                     	;# 
  2529  080F                     	;# 
  2530  0810                     	;# 
  2531  0810                     	;# 
  2532  0811                     	;# 
  2533  0812                     	;# 
  2534  0812                     	;# 
  2535  0813                     	;# 
  2536  0814                     	;# 
  2537  0815                     	;# 
  2538  0816                     	;# 
  2539  0817                     	;# 
  2540  0818                     	;# 
  2541  0819                     	;# 
  2542  081A                     	;# 
  2543  081A                     	;# 
  2544  081B                     	;# 
  2545  081C                     	;# 
  2546  081C                     	;# 
  2547  081D                     	;# 
  2548  088C                     	;# 
  2549  088D                     	;# 
  2550  088E                     	;# 
  2551  088F                     	;# 
  2552  088F                     	;# 
  2553  0890                     	;# 
  2554  0891                     	;# 
  2555  0892                     	;# 
  2556  0893                     	;# 
  2557  0893                     	;# 
  2558  0894                     	;# 
  2559  0895                     	;# 
  2560  0896                     	;# 
  2561  0897                     	;# 
  2562  0897                     	;# 
  2563  0898                     	;# 
  2564  0899                     	;# 
  2565  0D8C                     	;# 
  2566  0D8C                     	;# 
  2567  0D8D                     	;# 
  2568  0D8E                     	;# 
  2569  0D8F                     	;# 
  2570  0D8F                     	;# 
  2571  0D90                     	;# 
  2572  0D91                     	;# 
  2573  0D92                     	;# 
  2574  0D92                     	;# 
  2575  0D93                     	;# 
  2576  0D94                     	;# 
  2577  0D95                     	;# 
  2578  0D95                     	;# 
  2579  0D96                     	;# 
  2580  0D97                     	;# 
  2581  0D98                     	;# 
  2582  0D99                     	;# 
  2583  0D9A                     	;# 
  2584  0D9B                     	;# 
  2585  0D9C                     	;# 
  2586  0D9D                     	;# 
  2587  0D9E                     	;# 
  2588  0D9E                     	;# 
  2589  0D9F                     	;# 
  2590  0DA0                     	;# 
  2591  0DA1                     	;# 
  2592  0DA1                     	;# 
  2593  0DA2                     	;# 
  2594  0DA3                     	;# 
  2595  0DA4                     	;# 
  2596  0DA4                     	;# 
  2597  0DA5                     	;# 
  2598  0DA6                     	;# 
  2599  0DA7                     	;# 
  2600  0DA7                     	;# 
  2601  0DA8                     	;# 
  2602  0DA9                     	;# 
  2603  0DAA                     	;# 
  2604  0DAB                     	;# 
  2605  0DAC                     	;# 
  2606  0DAD                     	;# 
  2607  0DAE                     	;# 
  2608  0DAF                     	;# 
  2609  0E0F                     	;# 
  2610  0E10                     	;# 
  2611  0E11                     	;# 
  2612  0E12                     	;# 
  2613  0E13                     	;# 
  2614  0E14                     	;# 
  2615  0E15                     	;# 
  2616  0E16                     	;# 
  2617  0E17                     	;# 
  2618  0E18                     	;# 
  2619  0E19                     	;# 
  2620  0E1A                     	;# 
  2621  0E1B                     	;# 
  2622  0E1C                     	;# 
  2623  0E1D                     	;# 
  2624  0E1E                     	;# 
  2625  0E1F                     	;# 
  2626  0E20                     	;# 
  2627  0E21                     	;# 
  2628  0E22                     	;# 
  2629  0E23                     	;# 
  2630  0E24                     	;# 
  2631  0E25                     	;# 
  2632  0E26                     	;# 
  2633  0E27                     	;# 
  2634  0E28                     	;# 
  2635  0E29                     	;# 
  2636  0E2A                     	;# 
  2637  0E2B                     	;# 
  2638  0E2C                     	;# 
  2639  0E2D                     	;# 
  2640  0E2E                     	;# 
  2641  0E90                     	;# 
  2642  0E91                     	;# 
  2643  0E92                     	;# 
  2644  0E94                     	;# 
  2645  0E95                     	;# 
  2646  0E9C                     	;# 
  2647  0E9D                     	;# 
  2648  0E9E                     	;# 
  2649  0E9F                     	;# 
  2650  0EA0                     	;# 
  2651  0EA1                     	;# 
  2652  0EA2                     	;# 
  2653  0EA3                     	;# 
  2654  0EA4                     	;# 
  2655  0EA5                     	;# 
  2656  0EA6                     	;# 
  2657  0EA7                     	;# 
  2658  0F0F                     	;# 
  2659  0F10                     	;# 
  2660  0F11                     	;# 
  2661  0F12                     	;# 
  2662  0F13                     	;# 
  2663  0F14                     	;# 
  2664  0F15                     	;# 
  2665  0F16                     	;# 
  2666  0F17                     	;# 
  2667  0F18                     	;# 
  2668  0F19                     	;# 
  2669  0F1A                     	;# 
  2670  0F1B                     	;# 
  2671  0F1C                     	;# 
  2672  0F1D                     	;# 
  2673  0F1E                     	;# 
  2674  0F1F                     	;# 
  2675  0F20                     	;# 
  2676  0F21                     	;# 
  2677  0F22                     	;# 
  2678  0F23                     	;# 
  2679  0F24                     	;# 
  2680  0F25                     	;# 
  2681  0F26                     	;# 
  2682  0F27                     	;# 
  2683  0F28                     	;# 
  2684  0F29                     	;# 
  2685  0F2A                     	;# 
  2686  0F2B                     	;# 
  2687  0F2C                     	;# 
  2688  0F2D                     	;# 
  2689  0F2E                     	;# 
  2690  0F2F                     	;# 
  2691  0F30                     	;# 
  2692  0F31                     	;# 
  2693  0F32                     	;# 
  2694  0F33                     	;# 
  2695  0F34                     	;# 
  2696  0F35                     	;# 
  2697  0F36                     	;# 
  2698  0F37                     	;# 
  2699  0FE4                     	;# 
  2700  0FE5                     	;# 
  2701  0FE6                     	;# 
  2702  0FE7                     	;# 
  2703  0FE8                     	;# 
  2704  0FE9                     	;# 
  2705  0FEA                     	;# 
  2706  0FEB                     	;# 
  2707  0FED                     	;# 
  2708  0FEE                     	;# 
  2709  0FEF                     	;# 
  2710  0000                     	;# 
  2711  0001                     	;# 
  2712  0002                     	;# 
  2713  0003                     	;# 
  2714  0004                     	;# 
  2715  0005                     	;# 
  2716  0006                     	;# 
  2717  0007                     	;# 
  2718  0008                     	;# 
  2719  0009                     	;# 
  2720  000A                     	;# 
  2721  000B                     	;# 
  2722  000C                     	;# 
  2723  000D                     	;# 
  2724  000E                     	;# 
  2725  0010                     	;# 
  2726  0011                     	;# 
  2727  0012                     	;# 
  2728  0013                     	;# 
  2729  0014                     	;# 
  2730  0015                     	;# 
  2731  0016                     	;# 
  2732  0016                     	;# 
  2733  0017                     	;# 
  2734  0018                     	;# 
  2735  0019                     	;# 
  2736  001A                     	;# 
  2737  001A                     	;# 
  2738  001B                     	;# 
  2739  001B                     	;# 
  2740  001C                     	;# 
  2741  001D                     	;# 
  2742  001E                     	;# 
  2743  001F                     	;# 
  2744  008C                     	;# 
  2745  008D                     	;# 
  2746  008E                     	;# 
  2747  0090                     	;# 
  2748  0091                     	;# 
  2749  0092                     	;# 
  2750  0093                     	;# 
  2751  0094                     	;# 
  2752  0095                     	;# 
  2753  0096                     	;# 
  2754  0098                     	;# 
  2755  0099                     	;# 
  2756  009A                     	;# 
  2757  009B                     	;# 
  2758  009B                     	;# 
  2759  009C                     	;# 
  2760  009D                     	;# 
  2761  009E                     	;# 
  2762  009F                     	;# 
  2763  010C                     	;# 
  2764  010D                     	;# 
  2765  010E                     	;# 
  2766  0111                     	;# 
  2767  0112                     	;# 
  2768  0113                     	;# 
  2769  0114                     	;# 
  2770  0115                     	;# 
  2771  0116                     	;# 
  2772  0117                     	;# 
  2773  0118                     	;# 
  2774  0119                     	;# 
  2775  011C                     	;# 
  2776  018C                     	;# 
  2777  018D                     	;# 
  2778  018E                     	;# 
  2779  0191                     	;# 
  2780  0191                     	;# 
  2781  0192                     	;# 
  2782  0193                     	;# 
  2783  0193                     	;# 
  2784  0194                     	;# 
  2785  0195                     	;# 
  2786  0196                     	;# 
  2787  0197                     	;# 
  2788  0199                     	;# 
  2789  0199                     	;# 
  2790  0199                     	;# 
  2791  019A                     	;# 
  2792  019A                     	;# 
  2793  019A                     	;# 
  2794  019B                     	;# 
  2795  019B                     	;# 
  2796  019B                     	;# 
  2797  019B                     	;# 
  2798  019B                     	;# 
  2799  019C                     	;# 
  2800  019C                     	;# 
  2801  019C                     	;# 
  2802  019D                     	;# 
  2803  019D                     	;# 
  2804  019D                     	;# 
  2805  019E                     	;# 
  2806  019E                     	;# 
  2807  019E                     	;# 
  2808  019F                     	;# 
  2809  019F                     	;# 
  2810  019F                     	;# 
  2811  019F                     	;# 
  2812  019F                     	;# 
  2813  020C                     	;# 
  2814  020D                     	;# 
  2815  020E                     	;# 
  2816  0211                     	;# 
  2817  0211                     	;# 
  2818  0212                     	;# 
  2819  0212                     	;# 
  2820  0213                     	;# 
  2821  0213                     	;# 
  2822  0214                     	;# 
  2823  0214                     	;# 
  2824  0215                     	;# 
  2825  0215                     	;# 
  2826  0215                     	;# 
  2827  0215                     	;# 
  2828  0216                     	;# 
  2829  0216                     	;# 
  2830  0217                     	;# 
  2831  0217                     	;# 
  2832  028C                     	;# 
  2833  028D                     	;# 
  2834  028E                     	;# 
  2835  0291                     	;# 
  2836  0291                     	;# 
  2837  0292                     	;# 
  2838  0293                     	;# 
  2839  0294                     	;# 
  2840  0298                     	;# 
  2841  0298                     	;# 
  2842  0299                     	;# 
  2843  029A                     	;# 
  2844  029B                     	;# 
  2845  029E                     	;# 
  2846  030C                     	;# 
  2847  030D                     	;# 
  2848  030E                     	;# 
  2849  038C                     	;# 
  2850  038D                     	;# 
  2851  038E                     	;# 
  2852  0391                     	;# 
  2853  0392                     	;# 
  2854  0393                     	;# 
  2855  0394                     	;# 
  2856  0395                     	;# 
  2857  0396                     	;# 
  2858  0397                     	;# 
  2859  0398                     	;# 
  2860  0399                     	;# 
  2861  040E                     	;# 
  2862  0413                     	;# 
  2863  0413                     	;# 
  2864  0414                     	;# 
  2865  0414                     	;# 
  2866  0415                     	;# 
  2867  0416                     	;# 
  2868  0417                     	;# 
  2869  0418                     	;# 
  2870  041A                     	;# 
  2871  041A                     	;# 
  2872  041B                     	;# 
  2873  041B                     	;# 
  2874  041C                     	;# 
  2875  041D                     	;# 
  2876  041E                     	;# 
  2877  041F                     	;# 
  2878  0493                     	;# 
  2879  0494                     	;# 
  2880  0495                     	;# 
  2881  0496                     	;# 
  2882  049A                     	;# 
  2883  049B                     	;# 
  2884  049C                     	;# 
  2885  049D                     	;# 
  2886  058C                     	;# 
  2887  058C                     	;# 
  2888  058D                     	;# 
  2889  058E                     	;# 
  2890  058E                     	;# 
  2891  058F                     	;# 
  2892  0590                     	;# 
  2893  0590                     	;# 
  2894  0591                     	;# 
  2895  0592                     	;# 
  2896  0592                     	;# 
  2897  0593                     	;# 
  2898  0594                     	;# 
  2899  0594                     	;# 
  2900  0595                     	;# 
  2901  0596                     	;# 
  2902  0596                     	;# 
  2903  0597                     	;# 
  2904  0598                     	;# 
  2905  0599                     	;# 
  2906  059A                     	;# 
  2907  059B                     	;# 
  2908  059B                     	;# 
  2909  059C                     	;# 
  2910  059D                     	;# 
  2911  060C                     	;# 
  2912  060C                     	;# 
  2913  060D                     	;# 
  2914  060E                     	;# 
  2915  060F                     	;# 
  2916  060F                     	;# 
  2917  0610                     	;# 
  2918  0611                     	;# 
  2919  0612                     	;# 
  2920  0613                     	;# 
  2921  0614                     	;# 
  2922  0617                     	;# 
  2923  0618                     	;# 
  2924  0619                     	;# 
  2925  061A                     	;# 
  2926  061B                     	;# 
  2927  061C                     	;# 
  2928  0691                     	;# 
  2929  0692                     	;# 
  2930  0693                     	;# 
  2931  0694                     	;# 
  2932  0695                     	;# 
  2933  0696                     	;# 
  2934  0697                     	;# 
  2935  0699                     	;# 
  2936  069A                     	;# 
  2937  0711                     	;# 
  2938  0712                     	;# 
  2939  0713                     	;# 
  2940  0714                     	;# 
  2941  0715                     	;# 
  2942  0718                     	;# 
  2943  0718                     	;# 
  2944  0719                     	;# 
  2945  071A                     	;# 
  2946  071A                     	;# 
  2947  071B                     	;# 
  2948  071C                     	;# 
  2949  071D                     	;# 
  2950  0791                     	;# 
  2951  0791                     	;# 
  2952  0792                     	;# 
  2953  0793                     	;# 
  2954  0793                     	;# 
  2955  0794                     	;# 
  2956  0795                     	;# 
  2957  0795                     	;# 
  2958  0796                     	;# 
  2959  0797                     	;# 
  2960  0797                     	;# 
  2961  0798                     	;# 
  2962  0799                     	;# 
  2963  079A                     	;# 
  2964  080C                     	;# 
  2965  080C                     	;# 
  2966  080D                     	;# 
  2967  080E                     	;# 
  2968  080E                     	;# 
  2969  080F                     	;# 
  2970  0810                     	;# 
  2971  0810                     	;# 
  2972  0811                     	;# 
  2973  0812                     	;# 
  2974  0812                     	;# 
  2975  0813                     	;# 
  2976  0814                     	;# 
  2977  0815                     	;# 
  2978  0816                     	;# 
  2979  0817                     	;# 
  2980  0818                     	;# 
  2981  0819                     	;# 
  2982  081A                     	;# 
  2983  081A                     	;# 
  2984  081B                     	;# 
  2985  081C                     	;# 
  2986  081C                     	;# 
  2987  081D                     	;# 
  2988  088C                     	;# 
  2989  088D                     	;# 
  2990  088E                     	;# 
  2991  088F                     	;# 
  2992  088F                     	;# 
  2993  0890                     	;# 
  2994  0891                     	;# 
  2995  0892                     	;# 
  2996  0893                     	;# 
  2997  0893                     	;# 
  2998  0894                     	;# 
  2999  0895                     	;# 
  3000  0896                     	;# 
  3001  0897                     	;# 
  3002  0897                     	;# 
  3003  0898                     	;# 
  3004  0899                     	;# 
  3005  0D8C                     	;# 
  3006  0D8C                     	;# 
  3007  0D8D                     	;# 
  3008  0D8E                     	;# 
  3009  0D8F                     	;# 
  3010  0D8F                     	;# 
  3011  0D90                     	;# 
  3012  0D91                     	;# 
  3013  0D92                     	;# 
  3014  0D92                     	;# 
  3015  0D93                     	;# 
  3016  0D94                     	;# 
  3017  0D95                     	;# 
  3018  0D95                     	;# 
  3019  0D96                     	;# 
  3020  0D97                     	;# 
  3021  0D98                     	;# 
  3022  0D99                     	;# 
  3023  0D9A                     	;# 
  3024  0D9B                     	;# 
  3025  0D9C                     	;# 
  3026  0D9D                     	;# 
  3027  0D9E                     	;# 
  3028  0D9E                     	;# 
  3029  0D9F                     	;# 
  3030  0DA0                     	;# 
  3031  0DA1                     	;# 
  3032  0DA1                     	;# 
  3033  0DA2                     	;# 
  3034  0DA3                     	;# 
  3035  0DA4                     	;# 
  3036  0DA4                     	;# 
  3037  0DA5                     	;# 
  3038  0DA6                     	;# 
  3039  0DA7                     	;# 
  3040  0DA7                     	;# 
  3041  0DA8                     	;# 
  3042  0DA9                     	;# 
  3043  0DAA                     	;# 
  3044  0DAB                     	;# 
  3045  0DAC                     	;# 
  3046  0DAD                     	;# 
  3047  0DAE                     	;# 
  3048  0DAF                     	;# 
  3049  0E0F                     	;# 
  3050  0E10                     	;# 
  3051  0E11                     	;# 
  3052  0E12                     	;# 
  3053  0E13                     	;# 
  3054  0E14                     	;# 
  3055  0E15                     	;# 
  3056  0E16                     	;# 
  3057  0E17                     	;# 
  3058  0E18                     	;# 
  3059  0E19                     	;# 
  3060  0E1A                     	;# 
  3061  0E1B                     	;# 
  3062  0E1C                     	;# 
  3063  0E1D                     	;# 
  3064  0E1E                     	;# 
  3065  0E1F                     	;# 
  3066  0E20                     	;# 
  3067  0E21                     	;# 
  3068  0E22                     	;# 
  3069  0E23                     	;# 
  3070  0E24                     	;# 
  3071  0E25                     	;# 
  3072  0E26                     	;# 
  3073  0E27                     	;# 
  3074  0E28                     	;# 
  3075  0E29                     	;# 
  3076  0E2A                     	;# 
  3077  0E2B                     	;# 
  3078  0E2C                     	;# 
  3079  0E2D                     	;# 
  3080  0E2E                     	;# 
  3081  0E90                     	;# 
  3082  0E91                     	;# 
  3083  0E92                     	;# 
  3084  0E94                     	;# 
  3085  0E95                     	;# 
  3086  0E9C                     	;# 
  3087  0E9D                     	;# 
  3088  0E9E                     	;# 
  3089  0E9F                     	;# 
  3090  0EA0                     	;# 
  3091  0EA1                     	;# 
  3092  0EA2                     	;# 
  3093  0EA3                     	;# 
  3094  0EA4                     	;# 
  3095  0EA5                     	;# 
  3096  0EA6                     	;# 
  3097  0EA7                     	;# 
  3098  0F0F                     	;# 
  3099  0F10                     	;# 
  3100  0F11                     	;# 
  3101  0F12                     	;# 
  3102  0F13                     	;# 
  3103  0F14                     	;# 
  3104  0F15                     	;# 
  3105  0F16                     	;# 
  3106  0F17                     	;# 
  3107  0F18                     	;# 
  3108  0F19                     	;# 
  3109  0F1A                     	;# 
  3110  0F1B                     	;# 
  3111  0F1C                     	;# 
  3112  0F1D                     	;# 
  3113  0F1E                     	;# 
  3114  0F1F                     	;# 
  3115  0F20                     	;# 
  3116  0F21                     	;# 
  3117  0F22                     	;# 
  3118  0F23                     	;# 
  3119  0F24                     	;# 
  3120  0F25                     	;# 
  3121  0F26                     	;# 
  3122  0F27                     	;# 
  3123  0F28                     	;# 
  3124  0F29                     	;# 
  3125  0F2A                     	;# 
  3126  0F2B                     	;# 
  3127  0F2C                     	;# 
  3128  0F2D                     	;# 
  3129  0F2E                     	;# 
  3130  0F2F                     	;# 
  3131  0F30                     	;# 
  3132  0F31                     	;# 
  3133  0F32                     	;# 
  3134  0F33                     	;# 
  3135  0F34                     	;# 
  3136  0F35                     	;# 
  3137  0F36                     	;# 
  3138  0F37                     	;# 
  3139  0FE4                     	;# 
  3140  0FE5                     	;# 
  3141  0FE6                     	;# 
  3142  0FE7                     	;# 
  3143  0FE8                     	;# 
  3144  0FE9                     	;# 
  3145  0FEA                     	;# 
  3146  0FEB                     	;# 
  3147  0FED                     	;# 
  3148  0FEE                     	;# 
  3149  0FEF                     	;# 
  3150  0000                     	;# 
  3151  0001                     	;# 
  3152  0002                     	;# 
  3153  0003                     	;# 
  3154  0004                     	;# 
  3155  0005                     	;# 
  3156  0006                     	;# 
  3157  0007                     	;# 
  3158  0008                     	;# 
  3159  0009                     	;# 
  3160  000A                     	;# 
  3161  000B                     	;# 
  3162  000C                     	;# 
  3163  000D                     	;# 
  3164  000E                     	;# 
  3165  0010                     	;# 
  3166  0011                     	;# 
  3167  0012                     	;# 
  3168  0013                     	;# 
  3169  0014                     	;# 
  3170  0015                     	;# 
  3171  0016                     	;# 
  3172  0016                     	;# 
  3173  0017                     	;# 
  3174  0018                     	;# 
  3175  0019                     	;# 
  3176  001A                     	;# 
  3177  001A                     	;# 
  3178  001B                     	;# 
  3179  001B                     	;# 
  3180  001C                     	;# 
  3181  001D                     	;# 
  3182  001E                     	;# 
  3183  001F                     	;# 
  3184  008C                     	;# 
  3185  008D                     	;# 
  3186  008E                     	;# 
  3187  0090                     	;# 
  3188  0091                     	;# 
  3189  0092                     	;# 
  3190  0093                     	;# 
  3191  0094                     	;# 
  3192  0095                     	;# 
  3193  0096                     	;# 
  3194  0098                     	;# 
  3195  0099                     	;# 
  3196  009A                     	;# 
  3197  009B                     	;# 
  3198  009B                     	;# 
  3199  009C                     	;# 
  3200  009D                     	;# 
  3201  009E                     	;# 
  3202  009F                     	;# 
  3203  010C                     	;# 
  3204  010D                     	;# 
  3205  010E                     	;# 
  3206  0111                     	;# 
  3207  0112                     	;# 
  3208  0113                     	;# 
  3209  0114                     	;# 
  3210  0115                     	;# 
  3211  0116                     	;# 
  3212  0117                     	;# 
  3213  0118                     	;# 
  3214  0119                     	;# 
  3215  011C                     	;# 
  3216  018C                     	;# 
  3217  018D                     	;# 
  3218  018E                     	;# 
  3219  0191                     	;# 
  3220  0191                     	;# 
  3221  0192                     	;# 
  3222  0193                     	;# 
  3223  0193                     	;# 
  3224  0194                     	;# 
  3225  0195                     	;# 
  3226  0196                     	;# 
  3227  0197                     	;# 
  3228  0199                     	;# 
  3229  0199                     	;# 
  3230  0199                     	;# 
  3231  019A                     	;# 
  3232  019A                     	;# 
  3233  019A                     	;# 
  3234  019B                     	;# 
  3235  019B                     	;# 
  3236  019B                     	;# 
  3237  019B                     	;# 
  3238  019B                     	;# 
  3239  019C                     	;# 
  3240  019C                     	;# 
  3241  019C                     	;# 
  3242  019D                     	;# 
  3243  019D                     	;# 
  3244  019D                     	;# 
  3245  019E                     	;# 
  3246  019E                     	;# 
  3247  019E                     	;# 
  3248  019F                     	;# 
  3249  019F                     	;# 
  3250  019F                     	;# 
  3251  019F                     	;# 
  3252  019F                     	;# 
  3253  020C                     	;# 
  3254  020D                     	;# 
  3255  020E                     	;# 
  3256  0211                     	;# 
  3257  0211                     	;# 
  3258  0212                     	;# 
  3259  0212                     	;# 
  3260  0213                     	;# 
  3261  0213                     	;# 
  3262  0214                     	;# 
  3263  0214                     	;# 
  3264  0215                     	;# 
  3265  0215                     	;# 
  3266  0215                     	;# 
  3267  0215                     	;# 
  3268  0216                     	;# 
  3269  0216                     	;# 
  3270  0217                     	;# 
  3271  0217                     	;# 
  3272  028C                     	;# 
  3273  028D                     	;# 
  3274  028E                     	;# 
  3275  0291                     	;# 
  3276  0291                     	;# 
  3277  0292                     	;# 
  3278  0293                     	;# 
  3279  0294                     	;# 
  3280  0298                     	;# 
  3281  0298                     	;# 
  3282  0299                     	;# 
  3283  029A                     	;# 
  3284  029B                     	;# 
  3285  029E                     	;# 
  3286  030C                     	;# 
  3287  030D                     	;# 
  3288  030E                     	;# 
  3289  038C                     	;# 
  3290  038D                     	;# 
  3291  038E                     	;# 
  3292  0391                     	;# 
  3293  0392                     	;# 
  3294  0393                     	;# 
  3295  0394                     	;# 
  3296  0395                     	;# 
  3297  0396                     	;# 
  3298  0397                     	;# 
  3299  0398                     	;# 
  3300  0399                     	;# 
  3301  040E                     	;# 
  3302  0413                     	;# 
  3303  0413                     	;# 
  3304  0414                     	;# 
  3305  0414                     	;# 
  3306  0415                     	;# 
  3307  0416                     	;# 
  3308  0417                     	;# 
  3309  0418                     	;# 
  3310  041A                     	;# 
  3311  041A                     	;# 
  3312  041B                     	;# 
  3313  041B                     	;# 
  3314  041C                     	;# 
  3315  041D                     	;# 
  3316  041E                     	;# 
  3317  041F                     	;# 
  3318  0493                     	;# 
  3319  0494                     	;# 
  3320  0495                     	;# 
  3321  0496                     	;# 
  3322  049A                     	;# 
  3323  049B                     	;# 
  3324  049C                     	;# 
  3325  049D                     	;# 
  3326  058C                     	;# 
  3327  058C                     	;# 
  3328  058D                     	;# 
  3329  058E                     	;# 
  3330  058E                     	;# 
  3331  058F                     	;# 
  3332  0590                     	;# 
  3333  0590                     	;# 
  3334  0591                     	;# 
  3335  0592                     	;# 
  3336  0592                     	;# 
  3337  0593                     	;# 
  3338  0594                     	;# 
  3339  0594                     	;# 
  3340  0595                     	;# 
  3341  0596                     	;# 
  3342  0596                     	;# 
  3343  0597                     	;# 
  3344  0598                     	;# 
  3345  0599                     	;# 
  3346  059A                     	;# 
  3347  059B                     	;# 
  3348  059B                     	;# 
  3349  059C                     	;# 
  3350  059D                     	;# 
  3351  060C                     	;# 
  3352  060C                     	;# 
  3353  060D                     	;# 
  3354  060E                     	;# 
  3355  060F                     	;# 
  3356  060F                     	;# 
  3357  0610                     	;# 
  3358  0611                     	;# 
  3359  0612                     	;# 
  3360  0613                     	;# 
  3361  0614                     	;# 
  3362  0617                     	;# 
  3363  0618                     	;# 
  3364  0619                     	;# 
  3365  061A                     	;# 
  3366  061B                     	;# 
  3367  061C                     	;# 
  3368  0691                     	;# 
  3369  0692                     	;# 
  3370  0693                     	;# 
  3371  0694                     	;# 
  3372  0695                     	;# 
  3373  0696                     	;# 
  3374  0697                     	;# 
  3375  0699                     	;# 
  3376  069A                     	;# 
  3377  0711                     	;# 
  3378  0712                     	;# 
  3379  0713                     	;# 
  3380  0714                     	;# 
  3381  0715                     	;# 
  3382  0718                     	;# 
  3383  0718                     	;# 
  3384  0719                     	;# 
  3385  071A                     	;# 
  3386  071A                     	;# 
  3387  071B                     	;# 
  3388  071C                     	;# 
  3389  071D                     	;# 
  3390  0791                     	;# 
  3391  0791                     	;# 
  3392  0792                     	;# 
  3393  0793                     	;# 
  3394  0793                     	;# 
  3395  0794                     	;# 
  3396  0795                     	;# 
  3397  0795                     	;# 
  3398  0796                     	;# 
  3399  0797                     	;# 
  3400  0797                     	;# 
  3401  0798                     	;# 
  3402  0799                     	;# 
  3403  079A                     	;# 
  3404  080C                     	;# 
  3405  080C                     	;# 
  3406  080D                     	;# 
  3407  080E                     	;# 
  3408  080E                     	;# 
  3409  080F                     	;# 
  3410  0810                     	;# 
  3411  0810                     	;# 
  3412  0811                     	;# 
  3413  0812                     	;# 
  3414  0812                     	;# 
  3415  0813                     	;# 
  3416  0814                     	;# 
  3417  0815                     	;# 
  3418  0816                     	;# 
  3419  0817                     	;# 
  3420  0818                     	;# 
  3421  0819                     	;# 
  3422  081A                     	;# 
  3423  081A                     	;# 
  3424  081B                     	;# 
  3425  081C                     	;# 
  3426  081C                     	;# 
  3427  081D                     	;# 
  3428  088C                     	;# 
  3429  088D                     	;# 
  3430  088E                     	;# 
  3431  088F                     	;# 
  3432  088F                     	;# 
  3433  0890                     	;# 
  3434  0891                     	;# 
  3435  0892                     	;# 
  3436  0893                     	;# 
  3437  0893                     	;# 
  3438  0894                     	;# 
  3439  0895                     	;# 
  3440  0896                     	;# 
  3441  0897                     	;# 
  3442  0897                     	;# 
  3443  0898                     	;# 
  3444  0899                     	;# 
  3445  0D8C                     	;# 
  3446  0D8C                     	;# 
  3447  0D8D                     	;# 
  3448  0D8E                     	;# 
  3449  0D8F                     	;# 
  3450  0D8F                     	;# 
  3451  0D90                     	;# 
  3452  0D91                     	;# 
  3453  0D92                     	;# 
  3454  0D92                     	;# 
  3455  0D93                     	;# 
  3456  0D94                     	;# 
  3457  0D95                     	;# 
  3458  0D95                     	;# 
  3459  0D96                     	;# 
  3460  0D97                     	;# 
  3461  0D98                     	;# 
  3462  0D99                     	;# 
  3463  0D9A                     	;# 
  3464  0D9B                     	;# 
  3465  0D9C                     	;# 
  3466  0D9D                     	;# 
  3467  0D9E                     	;# 
  3468  0D9E                     	;# 
  3469  0D9F                     	;# 
  3470  0DA0                     	;# 
  3471  0DA1                     	;# 
  3472  0DA1                     	;# 
  3473  0DA2                     	;# 
  3474  0DA3                     	;# 
  3475  0DA4                     	;# 
  3476  0DA4                     	;# 
  3477  0DA5                     	;# 
  3478  0DA6                     	;# 
  3479  0DA7                     	;# 
  3480  0DA7                     	;# 
  3481  0DA8                     	;# 
  3482  0DA9                     	;# 
  3483  0DAA                     	;# 
  3484  0DAB                     	;# 
  3485  0DAC                     	;# 
  3486  0DAD                     	;# 
  3487  0DAE                     	;# 
  3488  0DAF                     	;# 
  3489  0E0F                     	;# 
  3490  0E10                     	;# 
  3491  0E11                     	;# 
  3492  0E12                     	;# 
  3493  0E13                     	;# 
  3494  0E14                     	;# 
  3495  0E15                     	;# 
  3496  0E16                     	;# 
  3497  0E17                     	;# 
  3498  0E18                     	;# 
  3499  0E19                     	;# 
  3500  0E1A                     	;# 
  3501  0E1B                     	;# 
  3502  0E1C                     	;# 
  3503  0E1D                     	;# 
  3504  0E1E                     	;# 
  3505  0E1F                     	;# 
  3506  0E20                     	;# 
  3507  0E21                     	;# 
  3508  0E22                     	;# 
  3509  0E23                     	;# 
  3510  0E24                     	;# 
  3511  0E25                     	;# 
  3512  0E26                     	;# 
  3513  0E27                     	;# 
  3514  0E28                     	;# 
  3515  0E29                     	;# 
  3516  0E2A                     	;# 
  3517  0E2B                     	;# 
  3518  0E2C                     	;# 
  3519  0E2D                     	;# 
  3520  0E2E                     	;# 
  3521  0E90                     	;# 
  3522  0E91                     	;# 
  3523  0E92                     	;# 
  3524  0E94                     	;# 
  3525  0E95                     	;# 
  3526  0E9C                     	;# 
  3527  0E9D                     	;# 
  3528  0E9E                     	;# 
  3529  0E9F                     	;# 
  3530  0EA0                     	;# 
  3531  0EA1                     	;# 
  3532  0EA2                     	;# 
  3533  0EA3                     	;# 
  3534  0EA4                     	;# 
  3535  0EA5                     	;# 
  3536  0EA6                     	;# 
  3537  0EA7                     	;# 
  3538  0F0F                     	;# 
  3539  0F10                     	;# 
  3540  0F11                     	;# 
  3541  0F12                     	;# 
  3542  0F13                     	;# 
  3543  0F14                     	;# 
  3544  0F15                     	;# 
  3545  0F16                     	;# 
  3546  0F17                     	;# 
  3547  0F18                     	;# 
  3548  0F19                     	;# 
  3549  0F1A                     	;# 
  3550  0F1B                     	;# 
  3551  0F1C                     	;# 
  3552  0F1D                     	;# 
  3553  0F1E                     	;# 
  3554  0F1F                     	;# 
  3555  0F20                     	;# 
  3556  0F21                     	;# 
  3557  0F22                     	;# 
  3558  0F23                     	;# 
  3559  0F24                     	;# 
  3560  0F25                     	;# 
  3561  0F26                     	;# 
  3562  0F27                     	;# 
  3563  0F28                     	;# 
  3564  0F29                     	;# 
  3565  0F2A                     	;# 
  3566  0F2B                     	;# 
  3567  0F2C                     	;# 
  3568  0F2D                     	;# 
  3569  0F2E                     	;# 
  3570  0F2F                     	;# 
  3571  0F30                     	;# 
  3572  0F31                     	;# 
  3573  0F32                     	;# 
  3574  0F33                     	;# 
  3575  0F34                     	;# 
  3576  0F35                     	;# 
  3577  0F36                     	;# 
  3578  0F37                     	;# 
  3579  0FE4                     	;# 
  3580  0FE5                     	;# 
  3581  0FE6                     	;# 
  3582  0FE7                     	;# 
  3583  0FE8                     	;# 
  3584  0FE9                     	;# 
  3585  0FEA                     	;# 
  3586  0FEB                     	;# 
  3587  0FED                     	;# 
  3588  0FEE                     	;# 
  3589  0FEF                     	;# 
  3590                           
  3591                           	psect	nvBANK0
  3592  0065                     __pnvBANK0:	
  3593  0065                     _TMR0_InterruptHandler:	
  3594  0065                     	ds	2
  3595  0067                     _timer0ReloadVal:	
  3596  0067                     	ds	1
  3597  0015                     _TMR0	set	21
  3598  000B                     _INTCONbits	set	11
  3599  0011                     _PIR2bits	set	17
  3600  0010                     _PIR1bits	set	16
  3601  0095                     _OPTION_REG	set	149
  3602  0095                     _OPTION_REGbits	set	149
  3603  008E                     _TRISC	set	142
  3604  008D                     _TRISB	set	141
  3605  008C                     _TRISA	set	140
  3606  0098                     _OSCTUNE	set	152
  3607  0099                     _OSCCON	set	153
  3608  0091                     _PIE2bits	set	145
  3609  0090                     _PIE1bits	set	144
  3610  010E                     _LATC	set	270
  3611  010D                     _LATB	set	269
  3612  010C                     _LATA	set	268
  3613  0116                     _BORCON	set	278
  3614  010E                     _LATCbits	set	270
  3615  018C                     _ANSELA	set	396
  3616  018D                     _ANSELB	set	397
  3617  018E                     _ANSELC	set	398
  3618  020E                     _WPUC	set	526
  3619  020C                     _WPUA	set	524
  3620  020D                     _WPUB	set	525
  3621  0215                     _SSP1CON1bits	set	533
  3622  0211                     _SSPBUF	set	529
  3623  0214                     _SSP1STATbits	set	532
  3624  0211                     _SSP1BUF	set	529
  3625  0216                     _SSP1CON2bits	set	534
  3626  0212                     _SSP1ADD	set	530
  3627  0217                     _SSP1CON3	set	535
  3628  0215                     _SSP1CON1	set	533
  3629  0214                     _SSP1STAT	set	532
  3630  028E                     _ODCONC	set	654
  3631  028D                     _ODCONB	set	653
  3632  028C                     _ODCONA	set	652
  3633  0E21                     _SSPDATPPS	set	3617
  3634  0E20                     _SSPCLKPPS	set	3616
  3635  0E9C                     _RB4PPS	set	3740
  3636  0E9E                     _RB6PPS	set	3742
  3637                           
  3638                           ; #config settings
  3639  0000                     
  3640                           	psect	cinit
  3641  002B                     start_initialization:	
  3642  002B                     __initialization:	
  3643                           
  3644                           ; Clear objects allocated to COMMON
  3645  002B  01F0               	clrf	__pbssCOMMON& (0+127)
  3646  002C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3647  002D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3648  002E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3649  002F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3650  0030  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  3651                           
  3652                           ; Clear objects allocated to BANK0
  3653  0031  3020               	movlw	low __pbssBANK0
  3654  0032  0084               	movwf	4
  3655  0033  3000               	movlw	high __pbssBANK0
  3656  0034  0085               	movwf	5
  3657  0035  3023               	movlw	35
  3658  0036  3183  23B8         	fcall	clear_ram0
  3659  0038                     end_of_initialization:	
  3660                           ;End of C runtime variable initialization code
  3661                           
  3662  0038                     __end_of__initialization:	
  3663  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3664  0039  0020               	movlb	0
  3665  003A  3182  2ACD         	ljmp	_main	;jump to C main() function
  3666                           
  3667                           	psect	bssCOMMON
  3668  0070                     __pbssCOMMON:	
  3669  0070                     _p_i2c_trb_current:	
  3670  0070                     	ds	1
  3671  0071                     _i2c_state:	
  3672  0071                     	ds	1
  3673  0072                     _fullResolutionSet:	
  3674  0072                     	ds	1
  3675  0073                     _selectedRange:	
  3676  0073                     	ds	1
  3677  0074                     I2C_ISR@i2c_address:	
  3678  0074                     	ds	2
  3679                           
  3680                           	psect	bssBANK0
  3681  0020                     __pbssBANK0:	
  3682  0020                     ADXL345_GetXyz@F101:	
  3683  0020                     	ds	7
  3684  0027                     _i2c_object:	
  3685  0027                     	ds	5
  3686  002C                     TMR0_ISR@CountCallBack:	
  3687  002C                     	ds	2
  3688  002E                     ADXL345_SetRegisterValue@F90:	
  3689  002E                     	ds	2
  3690  0030                     ADXL345_GetRegisterValue@F85:	
  3691  0030                     	ds	2
  3692  0032                     I2C_ISR@i2c_10bit_address_restart:	
  3693  0032                     	ds	1
  3694  0033                     I2C_ISR@i2c_bytes_left:	
  3695  0033                     	ds	1
  3696  0034                     I2C_ISR@pi2c_buf_ptr:	
  3697  0034                     	ds	1
  3698  0035                     _p_i2c_current:	
  3699  0035                     	ds	1
  3700  0036                     _i2c_trb_count:	
  3701  0036                     	ds	1
  3702  0037                     _communicationType:	
  3703  0037                     	ds	1
  3704  0038                     I2C_MasterRead@trBlock:	
  3705  0038                     	ds	4
  3706  003C                     I2C_MasterWrite@trBlock:	
  3707  003C                     	ds	4
  3708  0040                     _i2c_tr_queue:	
  3709  0040                     	ds	3
  3710                           
  3711                           	psect	clrtext
  3712  03B8                     clear_ram0:	
  3713                           ;	Called with FSR0 containing the base address, and
  3714                           ;	WREG with the size to clear
  3715                           
  3716  03B8  0064               	clrwdt	;clear the watchdog before getting into this loop
  3717  03B9                     clrloop0:	
  3718  03B9  0180               	clrf	0	;clear RAM location pointed to by FSR
  3719  03BA  3101               	addfsr 0,1
  3720  03BB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3721  03BC  2BB9               	goto	clrloop0	;have we reached the end yet?
  3722  03BD  3400               	retlw	0	;all done for this memory range, return
  3723                           
  3724                           	psect	cstackCOMMON
  3725  0076                     __pcstackCOMMON:	
  3726  0076                     ?_I2C_Stop:	
  3727  0076                     ??_I2C_Stop:	
  3728                           ; 1 bytes @ 0x0
  3729                           
  3730  0076                     ?_I2C_FunctionComplete:	
  3731                           ; 1 bytes @ 0x0
  3732                           
  3733  0076                     ??_I2C_FunctionComplete:	
  3734                           ; 1 bytes @ 0x0
  3735                           
  3736  0076                     ?_TMR0_ISR:	
  3737                           ; 1 bytes @ 0x0
  3738                           
  3739  0076                     ??_TMR0_ISR:	
  3740                           ; 1 bytes @ 0x0
  3741                           
  3742  0076                     ?_SYSTEM_Initialize:	
  3743                           ; 1 bytes @ 0x0
  3744                           
  3745  0076                     ?_PIN_MANAGER_Initialize:	
  3746                           ; 1 bytes @ 0x0
  3747                           
  3748  0076                     ?_OSCILLATOR_Initialize:	
  3749                           ; 1 bytes @ 0x0
  3750                           
  3751  0076                     ?_TMR0_Initialize:	
  3752                           ; 1 bytes @ 0x0
  3753                           
  3754  0076                     ?_TMR0_DefaultInterruptHandler:	
  3755                           ; 1 bytes @ 0x0
  3756                           
  3757  0076                     ??_TMR0_DefaultInterruptHandler:	
  3758                           ; 1 bytes @ 0x0
  3759                           
  3760  0076                     ?_TMR0_CallBack:	
  3761                           ; 1 bytes @ 0x0
  3762                           
  3763  0076                     ??_TMR0_CallBack:	
  3764                           ; 1 bytes @ 0x0
  3765                           
  3766  0076                     ?_ADXL345_GetRegisterValue:	
  3767                           ; 1 bytes @ 0x0
  3768                           
  3769  0076                     ?_ADXL345_Init:	
  3770                           ; 1 bytes @ 0x0
  3771                           
  3772  0076                     ?_I2C_ISR:	
  3773                           ; 1 bytes @ 0x0
  3774                           
  3775  0076                     ?_I2C_BusCollisionISR:	
  3776                           ; 1 bytes @ 0x0
  3777                           
  3778  0076                     ??_I2C_BusCollisionISR:	
  3779                           ; 1 bytes @ 0x0
  3780                           
  3781  0076                     ?_INTERRUPT_InterruptManager:	
  3782                           ; 1 bytes @ 0x0
  3783                           
  3784  0076                     ?_main:	
  3785                           ; 1 bytes @ 0x0
  3786                           
  3787  0076                     SPI_Init@lsbFirst:	
  3788                           ; 1 bytes @ 0x0
  3789                           
  3790  0076                     SPI_Read@slaveDeviceId:	
  3791                           ; 1 bytes @ 0x0
  3792                           
  3793  0076                     I2C_Stop@completion_code:	
  3794                           ; 1 bytes @ 0x0
  3795                           
  3796                           
  3797                           ; 1 bytes @ 0x0
  3798  0076                     	ds	1
  3799  0077                     ??_I2C_ISR:	
  3800                           
  3801                           ; 1 bytes @ 0x1
  3802  0077                     	ds	4
  3803  007B                     ??_INTERRUPT_InterruptManager:	
  3804                           
  3805                           ; 1 bytes @ 0x5
  3806  007B                     	ds	1
  3807                           
  3808                           	psect	cstackBANK0
  3809  0043                     __pcstackBANK0:	
  3810  0043                     ?_SPI_Read:	
  3811  0043                     ?_I2C_Write:	
  3812                           ; 1 bytes @ 0x0
  3813                           
  3814  0043                     ?_I2C_Read:	
  3815                           ; 1 bytes @ 0x0
  3816                           
  3817  0043                     ?_SPI_Init:	
  3818                           ; 1 bytes @ 0x0
  3819                           
  3820  0043                     ?_I2C_Init:	
  3821                           ; 1 bytes @ 0x0
  3822                           
  3823  0043                     ?_AccelReadStatus:	
  3824                           ; 1 bytes @ 0x0
  3825                           
  3826  0043                     ??_PIN_MANAGER_Initialize:	
  3827                           ; 1 bytes @ 0x0
  3828                           
  3829  0043                     ??_OSCILLATOR_Initialize:	
  3830                           ; 1 bytes @ 0x0
  3831                           
  3832  0043                     ?_TMR0_SetInterruptHandler:	
  3833                           ; 1 bytes @ 0x0
  3834                           
  3835  0043                     I2C_Write@dataBuffer:	
  3836                           ; 1 bytes @ 0x0
  3837                           
  3838  0043                     I2C_Read@dataBuffer:	
  3839                           ; 1 bytes @ 0x0
  3840                           
  3841  0043                     SPI_Read@data:	
  3842                           ; 1 bytes @ 0x0
  3843                           
  3844  0043                     AccelReadStatus@DataAdd:	
  3845                           ; 1 bytes @ 0x0
  3846                           
  3847  0043                     TMR0_SetInterruptHandler@InterruptHandler:	
  3848                           ; 1 bytes @ 0x0
  3849                           
  3850  0043                     I2C_Init@clockFreq:	
  3851                           ; 2 bytes @ 0x0
  3852                           
  3853  0043                     SPI_Init@clockFreq:	
  3854                           ; 4 bytes @ 0x0
  3855                           
  3856                           
  3857                           ; 4 bytes @ 0x0
  3858  0043                     	ds	1
  3859  0044                     ??_AccelReadStatus:	
  3860  0044                     I2C_Write@bytesNumber:	
  3861                           ; 1 bytes @ 0x1
  3862                           
  3863  0044                     I2C_Read@bytesNumber:	
  3864                           ; 1 bytes @ 0x1
  3865                           
  3866  0044                     SPI_Read@bytesNumber:	
  3867                           ; 1 bytes @ 0x1
  3868                           
  3869                           
  3870                           ; 1 bytes @ 0x1
  3871  0044                     	ds	1
  3872  0045                     ??_SPI_Read:	
  3873  0045                     ??_TMR0_Initialize:	
  3874                           ; 1 bytes @ 0x2
  3875                           
  3876  0045                     ??_TMR0_SetInterruptHandler:	
  3877                           ; 1 bytes @ 0x2
  3878                           
  3879  0045                     I2C_Write@stopBit:	
  3880                           ; 1 bytes @ 0x2
  3881                           
  3882  0045                     I2C_Read@stopBit:	
  3883                           ; 1 bytes @ 0x2
  3884                           
  3885  0045                     AccelReadStatus@TempData:	
  3886                           ; 1 bytes @ 0x2
  3887                           
  3888                           
  3889                           ; 1 bytes @ 0x2
  3890  0045                     	ds	1
  3891  0046                     ??_I2C_Write:	
  3892  0046                     ??_I2C_Read:	
  3893                           ; 1 bytes @ 0x3
  3894                           
  3895  0046                     ??_SYSTEM_Initialize:	
  3896                           ; 1 bytes @ 0x3
  3897                           
  3898  0046                     AccelReadStatus@SlaveAdd:	
  3899                           ; 1 bytes @ 0x3
  3900                           
  3901                           
  3902                           ; 1 bytes @ 0x3
  3903  0046                     	ds	1
  3904  0047                     ??_I2C_Init:	
  3905  0047                     I2C_Write@status:	
  3906                           ; 1 bytes @ 0x4
  3907                           
  3908  0047                     SPI_Init@clockPol:	
  3909                           ; 1 bytes @ 0x4
  3910                           
  3911  0047                     I2C_Init@pbFrequency:	
  3912                           ; 1 bytes @ 0x4
  3913                           
  3914                           
  3915                           ; 4 bytes @ 0x4
  3916  0047                     	ds	1
  3917  0048                     I2C_Write@slaveAddress:	
  3918  0048                     I2C_Read@status:	
  3919                           ; 1 bytes @ 0x5
  3920                           
  3921  0048                     SPI_Init@clockEdg:	
  3922                           ; 1 bytes @ 0x5
  3923                           
  3924                           
  3925                           ; 1 bytes @ 0x5
  3926  0048                     	ds	1
  3927  0049                     ??_SPI_Init:	
  3928  0049                     I2C_Write@acknowledge:	
  3929                           ; 1 bytes @ 0x6
  3930                           
  3931  0049                     I2C_Read@slaveAddress:	
  3932                           ; 1 bytes @ 0x6
  3933                           
  3934                           
  3935                           ; 1 bytes @ 0x6
  3936  0049                     	ds	1
  3937  004A                     I2C_Write@byte:	
  3938  004A                     I2C_Read@acknowledge:	
  3939                           ; 1 bytes @ 0x7
  3940                           
  3941                           
  3942                           ; 1 bytes @ 0x7
  3943  004A                     	ds	1
  3944  004B                     I2C_Read@byte:	
  3945  004B                     I2C_Init@brgValue:	
  3946                           ; 1 bytes @ 0x8
  3947                           
  3948                           
  3949                           ; 2 bytes @ 0x8
  3950  004B                     	ds	1
  3951  004C                     ??_ADXL345_GetRegisterValue:	
  3952                           
  3953                           ; 1 bytes @ 0x9
  3954  004C                     	ds	1
  3955  004D                     I2C_Init@status:	
  3956                           
  3957                           ; 1 bytes @ 0xA
  3958  004D                     	ds	1
  3959  004E                     ADXL345_GetRegisterValue@dataBuffer:	
  3960                           
  3961                           ; 2 bytes @ 0xB
  3962  004E                     	ds	2
  3963  0050                     ADXL345_GetRegisterValue@registerAddress:	
  3964                           
  3965                           ; 1 bytes @ 0xD
  3966  0050                     	ds	1
  3967  0051                     ADXL345_GetRegisterValue@registerValue:	
  3968                           
  3969                           ; 1 bytes @ 0xE
  3970  0051                     	ds	1
  3971  0052                     ??_ADXL345_Init:	
  3972                           
  3973                           ; 1 bytes @ 0xF
  3974  0052                     	ds	1
  3975  0053                     ADXL345_Init@commProtocol:	
  3976                           
  3977                           ; 1 bytes @ 0x10
  3978  0053                     	ds	1
  3979  0054                     ADXL345_Init@status:	
  3980                           
  3981                           ; 1 bytes @ 0x11
  3982  0054                     	ds	1
  3983  0055                     ??_main:	
  3984                           
  3985                           ; 1 bytes @ 0x12
  3986  0055                     	ds	1
  3987  0056                     main@AccelX:	
  3988                           
  3989                           ; 2 bytes @ 0x13
  3990  0056                     	ds	2
  3991  0058                     main@AccelY:	
  3992                           
  3993                           ; 2 bytes @ 0x15
  3994  0058                     	ds	2
  3995  005A                     main@AccelZ:	
  3996                           
  3997                           ; 2 bytes @ 0x17
  3998  005A                     	ds	2
  3999  005C                     main@AccelXtemp:	
  4000                           
  4001                           ; 2 bytes @ 0x19
  4002  005C                     	ds	2
  4003  005E                     main@AccelYtemp:	
  4004                           
  4005                           ; 2 bytes @ 0x1B
  4006  005E                     	ds	2
  4007  0060                     main@AccelZtemp:	
  4008                           
  4009                           ; 2 bytes @ 0x1D
  4010  0060                     	ds	2
  4011  0062                     main@i2cStatus:	
  4012                           
  4013                           ; 1 bytes @ 0x1F
  4014  0062                     	ds	1
  4015  0063                     main@AccelStatus:	
  4016                           
  4017                           ; 1 bytes @ 0x20
  4018  0063                     	ds	1
  4019  0064                     main@counter:	
  4020                           
  4021                           ; 1 bytes @ 0x21
  4022  0064                     	ds	1
  4023                           
  4024                           	psect	maintext
  4025  02CD                     __pmaintext:	
  4026 ;;
  4027 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4028 ;;
  4029 ;; *************** function _main *****************
  4030 ;; Defined at:
  4031 ;;		line 45 in file "../projectswithmick/CuriositywithADXL345Port/main.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;		None
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  AccelZtemp      2   29[BANK0 ] int 
  4036 ;;  AccelYtemp      2   27[BANK0 ] int 
  4037 ;;  AccelXtemp      2   25[BANK0 ] int 
  4038 ;;  AccelZ          2   23[BANK0 ] int 
  4039 ;;  AccelY          2   21[BANK0 ] int 
  4040 ;;  AccelX          2   19[BANK0 ] int 
  4041 ;;  z               2    0        short 
  4042 ;;  y               2    0        short 
  4043 ;;  x               2    0        short 
  4044 ;;  counter         1   33[BANK0 ] unsigned char 
  4045 ;;  AccelStatus     1   32[BANK0 ] unsigned char 
  4046 ;;  i2cStatus       1   31[BANK0 ] unsigned char 
  4047 ;;  TempZLSB        1    0        unsigned char 
  4048 ;;  TempZMSB        1    0        unsigned char 
  4049 ;;  TempYLSB        1    0        unsigned char 
  4050 ;;  TempYMSB        1    0        unsigned char 
  4051 ;;  TempXLSB        1    0        unsigned char 
  4052 ;;  TempXMSB        1    0        unsigned char 
  4053 ;;  DeviceID        1    0        unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : B1F/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4064 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4065 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4066 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4067 ;;Total ram usage:       16 bytes
  4068 ;; Hardware stack levels required when called:    7
  4069 ;; This function calls:
  4070 ;;		_ADXL345_Init
  4071 ;;		_AccelReadStatus
  4072 ;;		_SYSTEM_Initialize
  4073 ;; This function is called by:
  4074 ;;		Startup code after reset
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           
  4079                           ;psect for function _main
  4080  02CD                     _main:	
  4081                           
  4082                           ;main.c: 47: unsigned char i2cStatus;
  4083                           ;main.c: 49: short x;
  4084                           ;main.c: 50: short y;
  4085                           ;main.c: 51: short z;
  4086                           ;main.c: 52: unsigned char DeviceID;
  4087                           ;main.c: 54: char AccelStatus;
  4088                           ;main.c: 55: char TempXMSB;
  4089                           ;main.c: 56: char TempXLSB;
  4090                           ;main.c: 57: char TempYMSB;
  4091                           ;main.c: 58: char TempYLSB;
  4092                           ;main.c: 59: char TempZMSB;
  4093                           ;main.c: 60: char TempZLSB;
  4094                           ;main.c: 61: int16_t AccelX = 0;
  4095                           
  4096                           ;incstack = 0
  4097                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4098  02CD  0020               	movlb	0	; select bank0
  4099  02CE  01D6               	clrf	main@AccelX
  4100  02CF  01D7               	clrf	main@AccelX+1
  4101                           
  4102                           ;main.c: 62: int16_t AccelY = 0;
  4103  02D0  01D8               	clrf	main@AccelY
  4104  02D1  01D9               	clrf	main@AccelY+1
  4105                           
  4106                           ;main.c: 63: int16_t AccelZ = 0;
  4107  02D2  01DA               	clrf	main@AccelZ
  4108  02D3  01DB               	clrf	main@AccelZ+1
  4109                           
  4110                           ;main.c: 64: int16_t AccelXtemp = 0;
  4111  02D4  01DC               	clrf	main@AccelXtemp
  4112  02D5  01DD               	clrf	main@AccelXtemp+1
  4113                           
  4114                           ;main.c: 65: int16_t AccelYtemp = 0;
  4115  02D6  01DE               	clrf	main@AccelYtemp
  4116  02D7  01DF               	clrf	main@AccelYtemp+1
  4117                           
  4118                           ;main.c: 66: int16_t AccelZtemp = 0;
  4119  02D8  01E0               	clrf	main@AccelZtemp
  4120  02D9  01E1               	clrf	main@AccelZtemp+1
  4121                           
  4122                           ;main.c: 67: char counter = 0;
  4123  02DA  01E4               	clrf	main@counter
  4124                           
  4125                           ;main.c: 70: SYSTEM_Initialize();
  4126  02DB  3183  23A8  3182   	fcall	_SYSTEM_Initialize
  4127                           
  4128                           ;main.c: 71: i2cStatus = ADXL345_Init(1);
  4129  02DE  3001               	movlw	1
  4130  02DF  3182  2254  3182   	fcall	_ADXL345_Init
  4131  02E2  0020               	movlb	0	; select bank0
  4132  02E3  00D5               	movwf	??_main
  4133  02E4  0855               	movf	??_main,w
  4134  02E5  00E2               	movwf	main@i2cStatus
  4135  02E6                     l2890:	
  4136                           ;main.c: 90: while (1)
  4137                           
  4138                           
  4139                           ;main.c: 91: {
  4140                           ;main.c: 99: AccelStatus = AccelReadStatus(0x1D,0x00);
  4141  02E6  0020               	movlb	0	; select bank0
  4142  02E7  01C3               	clrf	AccelReadStatus@DataAdd
  4143  02E8  301D               	movlw	29
  4144  02E9  3181  216C  3182   	fcall	_AccelReadStatus
  4145  02EC  0020               	movlb	0	; select bank0
  4146  02ED  00D5               	movwf	??_main
  4147  02EE  0855               	movf	??_main,w
  4148  02EF  00E3               	movwf	main@AccelStatus
  4149                           
  4150                           ;main.c: 100: _delay((unsigned long)((5)*(4000000/4000.0)));
  4151  02F0  3007               	movlw	7
  4152  02F1  0020               	movlb	0	; select bank0
  4153  02F2  00D5               	movwf	??_main
  4154  02F3  307D               	movlw	125
  4155  02F4                     u2477:	
  4156  02F4  0B89               	decfsz	9,f
  4157  02F5  2AF4               	goto	u2477
  4158  02F6  0BD5               	decfsz	??_main,f
  4159  02F7  2AF4               	goto	u2477
  4160  02F8  2AE6               	goto	l2890
  4161  02F9                     __end_of_main:	
  4162                           
  4163                           	psect	text1
  4164  03A8                     __ptext1:	
  4165 ;; *************** function _SYSTEM_Initialize *****************
  4166 ;; Defined at:
  4167 ;;		line 77 in file "../projectswithmick/CuriositywithADXL345Port/mcc.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;		None
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;		None
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0, pclath, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4185 ;;Total ram usage:        0 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    6
  4188 ;; This function calls:
  4189 ;;		_OSCILLATOR_Initialize
  4190 ;;		_PIN_MANAGER_Initialize
  4191 ;;		_TMR0_Initialize
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _SYSTEM_Initialize
  4199  03A8                     _SYSTEM_Initialize:	
  4200                           
  4201                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4205  03A8  3182  22F9  3183   	fcall	_PIN_MANAGER_Initialize
  4206                           
  4207                           ;mcc.c: 80: OSCILLATOR_Initialize();
  4208  03AB  3183  23B1  3183   	fcall	_OSCILLATOR_Initialize
  4209                           
  4210                           ;mcc.c: 82: TMR0_Initialize();
  4211  03AE  3183  2377         	fcall	_TMR0_Initialize
  4212  03B0  0008               	return
  4213  03B1                     __end_of_SYSTEM_Initialize:	
  4214                           
  4215                           	psect	text2
  4216  0377                     __ptext2:	
  4217 ;; *************** function _TMR0_Initialize *****************
  4218 ;; Defined at:
  4219 ;;		line 63 in file "../projectswithmick/CuriositywithADXL345Port/tmr0.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0, pclath, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4235 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;Total ram usage:        1 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    5
  4240 ;; This function calls:
  4241 ;;		_TMR0_SetInterruptHandler
  4242 ;; This function is called by:
  4243 ;;		_SYSTEM_Initialize
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           
  4248                           ;psect for function _TMR0_Initialize
  4249  0377                     _TMR0_Initialize:	
  4250                           
  4251                           ;tmr0.c: 68: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD2 & 0x3F);
  4252                           
  4253                           ;incstack = 0
  4254                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4255  0377  0021               	movlb	1	; select bank1
  4256  0378  0815               	movf	21,w	;volatile
  4257  0379  39C0               	andlw	192
  4258  037A  3812               	iorlw	18
  4259  037B  0095               	movwf	21	;volatile
  4260                           
  4261                           ;tmr0.c: 71: TMR0 = 0x06;
  4262  037C  3006               	movlw	6
  4263  037D  0020               	movlb	0	; select bank0
  4264  037E  0095               	movwf	21	;volatile
  4265                           
  4266                           ;tmr0.c: 74: timer0ReloadVal= 6;
  4267  037F  3006               	movlw	6
  4268  0380  00C5               	movwf	??_TMR0_Initialize
  4269  0381  0845               	movf	??_TMR0_Initialize,w
  4270  0382  00E7               	movwf	_timer0ReloadVal	;volatile
  4271                           
  4272                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  4273  0383  110B               	bcf	11,2	;volatile
  4274                           
  4275                           ;tmr0.c: 80: INTCONbits.TMR0IE = 1;
  4276  0384  168B               	bsf	11,5	;volatile
  4277                           
  4278                           ;tmr0.c: 83: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  4279  0385  30CD               	movlw	low _TMR0_DefaultInterruptHandler
  4280  0386  00C3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4281  0387  3003               	movlw	high _TMR0_DefaultInterruptHandler
  4282  0388  00C4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4283  0389  3183  23BE         	fcall	_TMR0_SetInterruptHandler
  4284  038B  0008               	return
  4285  038C                     __end_of_TMR0_Initialize:	
  4286                           
  4287                           	psect	text3
  4288  03BE                     __ptext3:	
  4289 ;; *************** function _TMR0_SetInterruptHandler *****************
  4290 ;; Defined at:
  4291 ;;		line 139 in file "../projectswithmick/CuriositywithADXL345Port/tmr0.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4294 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      void 
  4299 ;; Registers used:
  4300 ;;		wreg
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4306 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4309 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4310 ;;Total ram usage:        2 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    4
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_TMR0_Initialize
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           
  4321                           ;psect for function _TMR0_SetInterruptHandler
  4322  03BE                     _TMR0_SetInterruptHandler:	
  4323                           
  4324                           ;tmr0.c: 140: TMR0_InterruptHandler = InterruptHandler;
  4325                           
  4326                           ;incstack = 0
  4327                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4328  03BE  0020               	movlb	0	; select bank0
  4329  03BF  0844               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  4330  03C0  00E6               	movwf	_TMR0_InterruptHandler+1
  4331  03C1  0843               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  4332  03C2  00E5               	movwf	_TMR0_InterruptHandler
  4333  03C3  0008               	return
  4334  03C4                     __end_of_TMR0_SetInterruptHandler:	
  4335                           
  4336                           	psect	text4
  4337  02F9                     __ptext4:	
  4338 ;; *************** function _PIN_MANAGER_Initialize *****************
  4339 ;; Defined at:
  4340 ;;		line 52 in file "../projectswithmick/CuriositywithADXL345Port/pin_manager.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;		None
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      void 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4358 ;;Total ram usage:        0 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    4
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_SYSTEM_Initialize
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           
  4369                           ;psect for function _PIN_MANAGER_Initialize
  4370  02F9                     _PIN_MANAGER_Initialize:	
  4371                           
  4372                           ;pin_manager.c: 57: LATA = 0x00;
  4373                           
  4374                           ;incstack = 0
  4375                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4376  02F9  0022               	movlb	2	; select bank2
  4377  02FA  018C               	clrf	12	;volatile
  4378                           
  4379                           ;pin_manager.c: 58: LATB = 0x00;
  4380  02FB  018D               	clrf	13	;volatile
  4381                           
  4382                           ;pin_manager.c: 59: LATC = 0x00;
  4383  02FC  018E               	clrf	14	;volatile
  4384                           
  4385                           ;pin_manager.c: 64: TRISA = 0x37;
  4386  02FD  3037               	movlw	55
  4387  02FE  0021               	movlb	1	; select bank1
  4388  02FF  008C               	movwf	12	;volatile
  4389                           
  4390                           ;pin_manager.c: 65: TRISB = 0xF0;
  4391  0300  30F0               	movlw	240
  4392  0301  008D               	movwf	13	;volatile
  4393                           
  4394                           ;pin_manager.c: 66: TRISC = 0x9F;
  4395  0302  309F               	movlw	159
  4396  0303  008E               	movwf	14	;volatile
  4397                           
  4398                           ;pin_manager.c: 71: ANSELC = 0xCF;
  4399  0304  30CF               	movlw	207
  4400  0305  0023               	movlb	3	; select bank3
  4401  0306  008E               	movwf	14	;volatile
  4402                           
  4403                           ;pin_manager.c: 72: ANSELB = 0xA0;
  4404  0307  30A0               	movlw	160
  4405  0308  008D               	movwf	13	;volatile
  4406                           
  4407                           ;pin_manager.c: 73: ANSELA = 0x17;
  4408  0309  3017               	movlw	23
  4409  030A  008C               	movwf	12	;volatile
  4410                           
  4411                           ;pin_manager.c: 78: WPUB = 0x00;
  4412  030B  0024               	movlb	4	; select bank4
  4413  030C  018D               	clrf	13	;volatile
  4414                           
  4415                           ;pin_manager.c: 79: WPUA = 0x00;
  4416  030D  018C               	clrf	12	;volatile
  4417                           
  4418                           ;pin_manager.c: 80: WPUC = 0x00;
  4419  030E  018E               	clrf	14	;volatile
  4420                           
  4421                           ;pin_manager.c: 81: OPTION_REGbits.nWPUEN = 1;
  4422  030F  0021               	movlb	1	; select bank1
  4423  0310  1795               	bsf	21,7	;volatile
  4424                           
  4425                           ;pin_manager.c: 86: ODCONA = 0x00;
  4426  0311  0025               	movlb	5	; select bank5
  4427  0312  018C               	clrf	12	;volatile
  4428                           
  4429                           ;pin_manager.c: 87: ODCONB = 0x00;
  4430  0313  018D               	clrf	13	;volatile
  4431                           
  4432                           ;pin_manager.c: 88: ODCONC = 0x00;
  4433  0314  018E               	clrf	14	;volatile
  4434                           
  4435                           ;pin_manager.c: 95: SSPCLKPPS = 0x0E;
  4436  0315  300E               	movlw	14
  4437  0316  003C               	movlb	28	; select bank28
  4438  0317  00A0               	movwf	32	;volatile
  4439                           
  4440                           ;pin_manager.c: 96: SSPDATPPS = 0x0C;
  4441  0318  300C               	movlw	12
  4442  0319  00A1               	movwf	33	;volatile
  4443                           
  4444                           ;pin_manager.c: 97: RB6PPS = 0x10;
  4445  031A  3010               	movlw	16
  4446  031B  003D               	movlb	29	; select bank29
  4447  031C  009E               	movwf	30	;volatile
  4448                           
  4449                           ;pin_manager.c: 98: RB4PPS = 0x11;
  4450  031D  3011               	movlw	17
  4451  031E  009C               	movwf	28	;volatile
  4452  031F  0008               	return
  4453  0320                     __end_of_PIN_MANAGER_Initialize:	
  4454                           
  4455                           	psect	text5
  4456  03B1                     __ptext5:	
  4457 ;; *************** function _OSCILLATOR_Initialize *****************
  4458 ;; Defined at:
  4459 ;;		line 85 in file "../projectswithmick/CuriositywithADXL345Port/mcc.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;		None
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      void 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;Total ram usage:        0 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    4
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_SYSTEM_Initialize
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function _OSCILLATOR_Initialize
  4489  03B1                     _OSCILLATOR_Initialize:	
  4490                           
  4491                           ;mcc.c: 88: OSCCON = 0x6A;
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4495  03B1  306A               	movlw	106
  4496  03B2  0021               	movlb	1	; select bank1
  4497  03B3  0099               	movwf	25	;volatile
  4498                           
  4499                           ;mcc.c: 90: OSCTUNE = 0x00;
  4500  03B4  0198               	clrf	24	;volatile
  4501                           
  4502                           ;mcc.c: 92: BORCON = 0x00;
  4503  03B5  0022               	movlb	2	; select bank2
  4504  03B6  0196               	clrf	22	;volatile
  4505  03B7  0008               	return
  4506  03B8                     __end_of_OSCILLATOR_Initialize:	
  4507                           
  4508                           	psect	text6
  4509  016C                     __ptext6:	
  4510 ;; *************** function _AccelReadStatus *****************
  4511 ;; Defined at:
  4512 ;;		line 292 in file "../projectswithmick/CuriositywithADXL345Port/main.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  SlaveAdd        1    wreg     unsigned char 
  4515 ;;  DataAdd         1    0[BANK0 ] unsigned char 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  SlaveAdd        1    3[BANK0 ] unsigned char 
  4518 ;;  TempData        1    2[BANK0 ] unsigned char 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      unsigned char 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4528 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;Total ram usage:        4 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    4
  4535 ;; This function calls:
  4536 ;;		Nothing
  4537 ;; This function is called by:
  4538 ;;		_main
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           
  4543                           ;psect for function _AccelReadStatus
  4544  016C                     _AccelReadStatus:	
  4545                           
  4546                           ;incstack = 0
  4547                           ; Regs used in _AccelReadStatus: [wreg+status,2+status,0]
  4548                           ;AccelReadStatus@SlaveAdd stored from wreg
  4549  016C  0020               	movlb	0	; select bank0
  4550  016D  00C6               	movwf	AccelReadStatus@SlaveAdd
  4551                           
  4552                           ;main.c: 294: char TempData;
  4553                           ;main.c: 295: do { LATCbits.LATC6 = 1; } while(0);
  4554  016E  0022               	movlb	2	; select bank2
  4555  016F  170E               	bsf	14,6	;volatile
  4556                           
  4557                           ;main.c: 296: _delay((unsigned long)((1)*(4000000/4000.0)));
  4558  0170  30C8               	movlw	200
  4559  0171                     u2487:	
  4560  0171  3200               	nop2
  4561  0172  0B89               	decfsz	9,f
  4562  0173  2971               	goto	u2487
  4563                           
  4564                           ;main.c: 297: SSP1CON2bits.SEN = 1;
  4565  0174  0024               	movlb	4	; select bank4
  4566  0175  1416               	bsf	22,0	;volatile
  4567  0176                     l498:	
  4568                           ;main.c: 298: while(SSP1CON2bits.SEN);
  4569                           
  4570  0176  1816               	btfsc	22,0	;volatile
  4571  0177  2976               	goto	l498
  4572                           
  4573                           ;main.c: 299: PIR1bits.SSP1IF = 0;
  4574  0178  0020               	movlb	0	; select bank0
  4575  0179  1190               	bcf	16,3	;volatile
  4576                           
  4577                           ;main.c: 301: SSP1BUF = SlaveAdd << 1;
  4578  017A  3546               	lslf	AccelReadStatus@SlaveAdd,w
  4579  017B  0024               	movlb	4	; select bank4
  4580  017C  0091               	movwf	17	;volatile
  4581  017D                     l501:	
  4582                           ;main.c: 302: while(!PIR1bits.SSP1IF);
  4583                           
  4584  017D  0020               	movlb	0	; select bank0
  4585  017E  1D90               	btfss	16,3	;volatile
  4586  017F  297D               	goto	l501
  4587                           
  4588                           ;main.c: 303: PIR1bits.SSP1IF = 0;
  4589  0180  1190               	bcf	16,3	;volatile
  4590                           
  4591                           ;main.c: 304: if (SSP1CON2bits.ACKSTAT)
  4592  0181  0024               	movlb	4	; select bank4
  4593  0182  1F16               	btfss	22,6	;volatile
  4594  0183  2989               	goto	l2696
  4595                           
  4596                           ;main.c: 305: {
  4597                           ;main.c: 306: SSP1CON2bits.PEN = 1;
  4598  0184  1516               	bsf	22,2	;volatile
  4599  0185                     l505:	
  4600                           ;main.c: 307: while(SSP1CON2bits.PEN);
  4601                           
  4602  0185  1916               	btfsc	22,2	;volatile
  4603  0186  2985               	goto	l505
  4604                           
  4605                           ;main.c: 308: return (0xFF);
  4606  0187  30FF               	movlw	255
  4607  0188  0008               	return
  4608  0189                     l2696:	
  4609                           
  4610                           ;main.c: 309: }
  4611                           ;main.c: 311: SSP1BUF = DataAdd;
  4612  0189  0020               	movlb	0	; select bank0
  4613  018A  0843               	movf	AccelReadStatus@DataAdd,w
  4614  018B  0024               	movlb	4	; select bank4
  4615  018C  0091               	movwf	17	;volatile
  4616  018D                     l509:	
  4617                           ;main.c: 312: while(!PIR1bits.SSP1IF);
  4618                           
  4619  018D  0020               	movlb	0	; select bank0
  4620  018E  1D90               	btfss	16,3	;volatile
  4621  018F  298D               	goto	l509
  4622                           
  4623                           ;main.c: 313: PIR1bits.SSP1IF = 0;
  4624  0190  1190               	bcf	16,3	;volatile
  4625                           
  4626                           ;main.c: 314: if (SSP1CON2bits.ACKSTAT)
  4627  0191  0024               	movlb	4	; select bank4
  4628  0192  1F16               	btfss	22,6	;volatile
  4629  0193  2999               	goto	l512
  4630                           
  4631                           ;main.c: 315: {
  4632                           ;main.c: 316: SSP1CON2bits.PEN = 1;
  4633  0194  1516               	bsf	22,2	;volatile
  4634  0195                     l513:	
  4635                           ;main.c: 317: while(SSP1CON2bits.PEN);
  4636                           
  4637  0195  1916               	btfsc	22,2	;volatile
  4638  0196  2995               	goto	l513
  4639                           
  4640                           ;main.c: 318: return (0xFF);
  4641  0197  30FF               	movlw	255
  4642  0198  0008               	return
  4643  0199                     l512:	
  4644                           
  4645                           ;main.c: 319: }
  4646                           ;main.c: 321: SSP1CON2bits.RSEN = 1;
  4647  0199  1496               	bsf	22,1	;volatile
  4648  019A                     l516:	
  4649                           ;main.c: 322: while(SSP1CON2bits.RSEN);
  4650                           
  4651  019A  1896               	btfsc	22,1	;volatile
  4652  019B  299A               	goto	l516
  4653                           
  4654                           ;main.c: 323: PIR1bits.SSP1IF = 0;
  4655  019C  0020               	movlb	0	; select bank0
  4656  019D  1190               	bcf	16,3	;volatile
  4657                           
  4658                           ;main.c: 325: SSP1BUF = ((SlaveAdd << 1) + 1);
  4659  019E  1403               	setc
  4660  019F  0D46               	rlf	AccelReadStatus@SlaveAdd,w
  4661  01A0  0024               	movlb	4	; select bank4
  4662  01A1  0091               	movwf	17	;volatile
  4663  01A2                     l519:	
  4664                           ;main.c: 326: while(!PIR1bits.SSP1IF);
  4665                           
  4666  01A2  0020               	movlb	0	; select bank0
  4667  01A3  1D90               	btfss	16,3	;volatile
  4668  01A4  29A2               	goto	l519
  4669                           
  4670                           ;main.c: 327: PIR1bits.SSP1IF = 0;
  4671  01A5  1190               	bcf	16,3	;volatile
  4672                           
  4673                           ;main.c: 328: if (SSP1CON2bits.ACKSTAT)
  4674  01A6  0024               	movlb	4	; select bank4
  4675  01A7  1F16               	btfss	22,6	;volatile
  4676  01A8  29AE               	goto	l522
  4677                           
  4678                           ;main.c: 329: {
  4679                           ;main.c: 330: SSP1CON2bits.PEN = 1;
  4680  01A9  1516               	bsf	22,2	;volatile
  4681  01AA                     l523:	
  4682                           ;main.c: 331: while(SSP1CON2bits.PEN);
  4683                           
  4684  01AA  1916               	btfsc	22,2	;volatile
  4685  01AB  29AA               	goto	l523
  4686                           
  4687                           ;main.c: 332: return (0xFF);
  4688  01AC  30FF               	movlw	255
  4689  01AD  0008               	return
  4690  01AE                     l522:	
  4691                           
  4692                           ;main.c: 333: }
  4693                           ;main.c: 335: SSP1CON2bits.RCEN = 1;
  4694  01AE  1596               	bsf	22,3	;volatile
  4695  01AF                     l526:	
  4696                           ;main.c: 336: while(!SSP1STATbits.BF);
  4697                           
  4698  01AF  1C14               	btfss	20,0	;volatile
  4699  01B0  29AF               	goto	l526
  4700                           
  4701                           ;main.c: 337: TempData = SSPBUF;
  4702  01B1  0811               	movf	17,w	;volatile
  4703  01B2  0020               	movlb	0	; select bank0
  4704  01B3  00C4               	movwf	??_AccelReadStatus
  4705  01B4  0844               	movf	??_AccelReadStatus,w
  4706  01B5  00C5               	movwf	AccelReadStatus@TempData
  4707                           
  4708                           ;main.c: 339: SSP1CON2bits.ACKDT = 1;
  4709  01B6  0024               	movlb	4	; select bank4
  4710  01B7  1696               	bsf	22,5	;volatile
  4711                           
  4712                           ;main.c: 340: SSP1CON2bits.ACKEN = 1;
  4713  01B8  1616               	bsf	22,4	;volatile
  4714  01B9                     l529:	
  4715                           ;main.c: 341: while(SSP1CON2bits.ACKEN);
  4716                           
  4717  01B9  1A16               	btfsc	22,4	;volatile
  4718  01BA  29B9               	goto	l529
  4719                           
  4720                           ;main.c: 343: SSP1CON2bits.PEN = 1;
  4721  01BB  1516               	bsf	22,2	;volatile
  4722  01BC                     l532:	
  4723                           ;main.c: 344: while(SSP1CON2bits.PEN);
  4724                           
  4725  01BC  1916               	btfsc	22,2	;volatile
  4726  01BD  29BC               	goto	l532
  4727                           
  4728                           ;main.c: 345: return TempData;
  4729  01BE  0020               	movlb	0	; select bank0
  4730  01BF  0845               	movf	AccelReadStatus@TempData,w
  4731  01C0  0008               	return
  4732  01C1                     __end_of_AccelReadStatus:	
  4733                           
  4734                           	psect	text7
  4735  0254                     __ptext7:	
  4736 ;; *************** function _ADXL345_Init *****************
  4737 ;; Defined at:
  4738 ;;		line 135 in file "../projectswithmick/CuriositywithADXL345Port/ADXL345.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  commProtocol    1    wreg     unsigned char 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  commProtocol    1   16[BANK0 ] unsigned char 
  4743 ;;  status          1   17[BANK0 ] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      unsigned char 
  4746 ;; Registers used:
  4747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;Total ram usage:        3 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    6
  4760 ;; This function calls:
  4761 ;;		_ADXL345_GetRegisterValue
  4762 ;;		_I2C_Init
  4763 ;;		_SPI_Init
  4764 ;; This function is called by:
  4765 ;;		_main
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           
  4770                           ;psect for function _ADXL345_Init
  4771  0254                     _ADXL345_Init:	
  4772                           
  4773                           ;incstack = 0
  4774                           ; Regs used in _ADXL345_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4775                           ;ADXL345_Init@commProtocol stored from wreg
  4776  0254  0020               	movlb	0	; select bank0
  4777  0255  00D3               	movwf	ADXL345_Init@commProtocol
  4778                           
  4779                           ;ADXL345.c: 137: unsigned char status = 0;
  4780  0256  01D4               	clrf	ADXL345_Init@status
  4781                           
  4782                           ;ADXL345.c: 139: communicationType = commProtocol;
  4783  0257  0853               	movf	ADXL345_Init@commProtocol,w
  4784  0258  00D2               	movwf	??_ADXL345_Init
  4785  0259  0852               	movf	??_ADXL345_Init,w
  4786  025A  00B7               	movwf	_communicationType
  4787                           
  4788                           ;ADXL345.c: 140: if(commProtocol == 0)
  4789  025B  0853               	movf	ADXL345_Init@commProtocol,w
  4790  025C  1D03               	btfss	3,2
  4791  025D  2A6E               	goto	l2646
  4792                           
  4793                           ;ADXL345.c: 141: {
  4794                           ;ADXL345.c: 142: status = SPI_Init(0,
  4795                           ;ADXL345.c: 143: 1000000,
  4796                           ;ADXL345.c: 144: 1,
  4797                           ;ADXL345.c: 145: 0);
  4798  025E  3000               	movlw	0
  4799  025F  00C6               	movwf	SPI_Init@clockFreq+3
  4800  0260  300F               	movlw	15
  4801  0261  00C5               	movwf	SPI_Init@clockFreq+2
  4802  0262  3042               	movlw	66
  4803  0263  00C4               	movwf	SPI_Init@clockFreq+1
  4804  0264  3040               	movlw	64
  4805  0265  00C3               	movwf	SPI_Init@clockFreq
  4806  0266  01C7               	clrf	SPI_Init@clockPol
  4807  0267  0AC7               	incf	SPI_Init@clockPol,f
  4808  0268  01C8               	clrf	SPI_Init@clockEdg
  4809  0269  3000               	movlw	0
  4810  026A  3183  23CB  3182   	fcall	_SPI_Init
  4811  026D  2A79               	goto	L1
  4812  026E                     l2646:	
  4813                           ;ADXL345.c: 146: }
  4814                           
  4815                           
  4816                           ;ADXL345.c: 147: else
  4817                           ;ADXL345.c: 148: {
  4818                           ;ADXL345.c: 149: status = I2C_Init(100000);
  4819  026E  3000               	movlw	0
  4820  026F  00C6               	movwf	I2C_Init@clockFreq+3
  4821  0270  3001               	movlw	1
  4822  0271  00C5               	movwf	I2C_Init@clockFreq+2
  4823  0272  3086               	movlw	134
  4824  0273  00C4               	movwf	I2C_Init@clockFreq+1
  4825  0274  30A0               	movlw	160
  4826  0275  00C3               	movwf	I2C_Init@clockFreq
  4827  0276  3183  2341  3182   	fcall	_I2C_Init
  4828  0279                     L1:	
  4829  0279  0020               	movlb	0	; select bank0
  4830  027A  00D2               	movwf	??_ADXL345_Init
  4831  027B  0852               	movf	??_ADXL345_Init,w
  4832  027C  00D4               	movwf	ADXL345_Init@status
  4833                           
  4834                           ;ADXL345.c: 150: }
  4835                           ;ADXL345.c: 151: if(ADXL345_GetRegisterValue(0x00) != 0xE5)
  4836  027D  3000               	movlw	0
  4837  027E  3182  2291  3182   	fcall	_ADXL345_GetRegisterValue
  4838  0281  3AE5               	xorlw	229
  4839  0282  1903               	skipnz
  4840  0283  2A89               	goto	l37
  4841                           
  4842                           ;ADXL345.c: 152: {
  4843                           ;ADXL345.c: 153: status = -1;
  4844  0284  30FF               	movlw	255
  4845  0285  0020               	movlb	0	; select bank0
  4846  0286  00D2               	movwf	??_ADXL345_Init
  4847  0287  0852               	movf	??_ADXL345_Init,w
  4848  0288  00D4               	movwf	ADXL345_Init@status
  4849  0289                     l37:	
  4850                           
  4851                           ;ADXL345.c: 154: }
  4852                           ;ADXL345.c: 155: selectedRange = 2;
  4853  0289  3002               	movlw	2
  4854  028A  0020               	movlb	0	; select bank0
  4855  028B  00D2               	movwf	??_ADXL345_Init
  4856  028C  0852               	movf	??_ADXL345_Init,w
  4857  028D  00F3               	movwf	_selectedRange
  4858                           
  4859                           ;ADXL345.c: 156: fullResolutionSet = 0;
  4860  028E  01F2               	clrf	_fullResolutionSet
  4861                           
  4862                           ;ADXL345.c: 158: return status;
  4863  028F  0854               	movf	ADXL345_Init@status,w
  4864  0290  0008               	return
  4865  0291                     __end_of_ADXL345_Init:	
  4866                           
  4867                           	psect	text8
  4868  03CB                     __ptext8:	
  4869 ;; *************** function _SPI_Init *****************
  4870 ;; Defined at:
  4871 ;;		line 218 in file "../projectswithmick/CuriositywithADXL345Port/Communication.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  lsbFirst        1    wreg     unsigned char 
  4874 ;;  clockFreq       4    0[BANK0 ] unsigned long 
  4875 ;;  clockPol        1    4[BANK0 ] unsigned char 
  4876 ;;  clockEdg        1    5[BANK0 ] unsigned char 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  lsbFirst        1    0[COMMON] unsigned char 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      unsigned char 
  4881 ;; Registers used:
  4882 ;;		wreg
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4888 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4891 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4892 ;;Total ram usage:        6 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    4
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_ADXL345_Init
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           
  4903                           ;psect for function _SPI_Init
  4904  03CB                     _SPI_Init:	
  4905                           
  4906                           ;incstack = 0
  4907                           ; Regs used in _SPI_Init: [wreg]
  4908  03CB  0008               	return
  4909  03CC                     __end_of_SPI_Init:	
  4910                           
  4911                           	psect	text9
  4912  0341                     __ptext9:	
  4913 ;; *************** function _I2C_Init *****************
  4914 ;; Defined at:
  4915 ;;		line 56 in file "../projectswithmick/CuriositywithADXL345Port/Communication.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  clockFreq       4    0[BANK0 ] unsigned long 
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;  pbFrequency     4    4[BANK0 ] unsigned long 
  4920 ;;  brgValue        2    8[BANK0 ] unsigned short 
  4921 ;;  status          1   10[BANK0 ] unsigned char 
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      unsigned char 
  4924 ;; Registers used:
  4925 ;;		wreg, status,2
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4931 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4932 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4934 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;Total ram usage:       11 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; Hardware stack levels required when called:    4
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_ADXL345_Init
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           
  4946                           ;psect for function _I2C_Init
  4947  0341                     _I2C_Init:	
  4948                           
  4949                           ;Communication.c: 58: unsigned char status = 0;
  4950                           
  4951                           ;incstack = 0
  4952                           ; Regs used in _I2C_Init: [wreg+status,2]
  4953  0341  0020               	movlb	0	; select bank0
  4954  0342  01CD               	clrf	I2C_Init@status
  4955                           
  4956                           ;Communication.c: 59: unsigned long pbFrequency = 4000000;
  4957  0343  3000               	movlw	0
  4958  0344  00CA               	movwf	I2C_Init@pbFrequency+3
  4959  0345  303D               	movlw	61
  4960  0346  00C9               	movwf	I2C_Init@pbFrequency+2
  4961  0347  3009               	movlw	9
  4962  0348  00C8               	movwf	I2C_Init@pbFrequency+1
  4963  0349  3000               	movlw	0
  4964  034A  00C7               	movwf	I2C_Init@pbFrequency
  4965                           
  4966                           ;Communication.c: 60: unsigned short brgValue = 0;
  4967  034B  01CB               	clrf	I2C_Init@brgValue
  4968  034C  01CC               	clrf	I2C_Init@brgValue+1
  4969                           
  4970                           ;Communication.c: 63: SSP1STAT = 0x00;
  4971  034D  0024               	movlb	4	; select bank4
  4972  034E  0194               	clrf	20	;volatile
  4973                           
  4974                           ;Communication.c: 65: SSP1CON1 = 0x28;
  4975  034F  3028               	movlw	40
  4976  0350  0095               	movwf	21	;volatile
  4977                           
  4978                           ;Communication.c: 67: SSP1CON3 = 0x00;
  4979  0351  0197               	clrf	23	;volatile
  4980                           
  4981                           ;Communication.c: 71: SSP1ADD = 0x03;
  4982  0352  3003               	movlw	3
  4983  0353  0092               	movwf	18	;volatile
  4984                           
  4985                           ;Communication.c: 74: PIR1bits.SSP1IF = 0;
  4986  0354  0020               	movlb	0	; select bank0
  4987  0355  1190               	bcf	16,3	;volatile
  4988                           
  4989                           ;Communication.c: 75: PIR2bits.BCL1IF = 0;
  4990  0356  1191               	bcf	17,3	;volatile
  4991                           
  4992                           ;Communication.c: 78: PIE1bits.SSP1IE = 1;
  4993  0357  0021               	movlb	1	; select bank1
  4994  0358  1590               	bsf	16,3	;volatile
  4995                           
  4996                           ;Communication.c: 79: PIE2bits.BCL1IE = 1;
  4997  0359  1591               	bsf	17,3	;volatile
  4998                           
  4999                           ;Communication.c: 81: status = 1;
  5000  035A  0020               	movlb	0	; select bank0
  5001  035B  01CD               	clrf	I2C_Init@status
  5002  035C  0ACD               	incf	I2C_Init@status,f
  5003                           
  5004                           ;Communication.c: 83: return status;
  5005  035D  084D               	movf	I2C_Init@status,w
  5006  035E  0008               	return
  5007  035F                     __end_of_I2C_Init:	
  5008                           
  5009                           	psect	text10
  5010  0291                     __ptext10:	
  5011 ;; *************** function _ADXL345_GetRegisterValue *****************
  5012 ;; Defined at:
  5013 ;;		line 67 in file "../projectswithmick/CuriositywithADXL345Port/ADXL345.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  registerAddr    1    wreg     unsigned char 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  registerAddr    1   13[BANK0 ] unsigned char 
  5018 ;;  dataBuffer      2   11[BANK0 ] unsigned char [2]
  5019 ;;  registerValu    1   14[BANK0 ] unsigned char 
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  1    wreg      unsigned char 
  5022 ;; Registers used:
  5023 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;Total ram usage:        6 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:    5
  5036 ;; This function calls:
  5037 ;;		_I2C_Read
  5038 ;;		_I2C_Write
  5039 ;;		_SPI_Read
  5040 ;; This function is called by:
  5041 ;;		_ADXL345_Init
  5042 ;;		_ADXL345_SetPowerMode
  5043 ;;		_ADXL345_SetTapDetection
  5044 ;;		_ADXL345_SetActivityDetection
  5045 ;;		_ADXL345_SetInactivityDetection
  5046 ;;		_ADXL345_SetFreeFallDetection
  5047 ;;		_ADXL345_SetRangeResolution
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           
  5052                           ;psect for function _ADXL345_GetRegisterValue
  5053  0291                     _ADXL345_GetRegisterValue:	
  5054                           
  5055                           ;incstack = 0
  5056                           ; Regs used in _ADXL345_GetRegisterValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5057                           ;ADXL345_GetRegisterValue@registerAddress stored from wreg
  5058  0291  0020               	movlb	0	; select bank0
  5059  0292  00D0               	movwf	ADXL345_GetRegisterValue@registerAddress
  5060                           
  5061                           ;ADXL345.c: 69: unsigned char dataBuffer[2] = {0, 0};
  5062  0293  0831               	movf	ADXL345_GetRegisterValue@F85+1,w
  5063  0294  00CF               	movwf	ADXL345_GetRegisterValue@dataBuffer+1
  5064  0295  0830               	movf	ADXL345_GetRegisterValue@F85,w
  5065  0296  00CE               	movwf	ADXL345_GetRegisterValue@dataBuffer
  5066                           
  5067                           ;ADXL345.c: 70: unsigned char registerValue = 0;
  5068  0297  01D1               	clrf	ADXL345_GetRegisterValue@registerValue
  5069                           
  5070                           ;ADXL345.c: 72: if(communicationType == 0)
  5071  0298  0837               	movf	_communicationType,w
  5072  0299  1D03               	btfss	3,2
  5073  029A  2AB3               	goto	l2552
  5074                           
  5075                           ;ADXL345.c: 73: {
  5076                           ;ADXL345.c: 74: dataBuffer[0] = (1 << 7) | registerAddress;
  5077  029B  0850               	movf	ADXL345_GetRegisterValue@registerAddress,w
  5078  029C  3880               	iorlw	128
  5079  029D  00CC               	movwf	??_ADXL345_GetRegisterValue
  5080  029E  084C               	movf	??_ADXL345_GetRegisterValue,w
  5081  029F  00CE               	movwf	ADXL345_GetRegisterValue@dataBuffer
  5082                           
  5083                           ;ADXL345.c: 75: dataBuffer[1] = 0;
  5084  02A0  01CF               	clrf	ADXL345_GetRegisterValue@dataBuffer+1
  5085                           
  5086                           ;ADXL345.c: 76: SPI_Read(1, dataBuffer, 2);
  5087  02A1  304E               	movlw	(low (ADXL345_GetRegisterValue@dataBuffer| 0))& (0+255)
  5088  02A2  00CC               	movwf	??_ADXL345_GetRegisterValue
  5089  02A3  084C               	movf	??_ADXL345_GetRegisterValue,w
  5090  02A4  00C3               	movwf	SPI_Read@data
  5091  02A5  3002               	movlw	2
  5092  02A6  00CD               	movwf	??_ADXL345_GetRegisterValue+1
  5093  02A7  084D               	movf	??_ADXL345_GetRegisterValue+1,w
  5094  02A8  00C4               	movwf	SPI_Read@bytesNumber
  5095  02A9  3001               	movlw	1
  5096  02AA  3183  23CC  3182   	fcall	_SPI_Read
  5097                           
  5098                           ;ADXL345.c: 77: registerValue = dataBuffer[1];
  5099  02AD  0020               	movlb	0	; select bank0
  5100  02AE  084F               	movf	ADXL345_GetRegisterValue@dataBuffer+1,w
  5101  02AF  00CC               	movwf	??_ADXL345_GetRegisterValue
  5102  02B0  084C               	movf	??_ADXL345_GetRegisterValue,w
  5103  02B1  00D1               	movwf	ADXL345_GetRegisterValue@registerValue
  5104                           
  5105                           ;ADXL345.c: 78: }
  5106  02B2  2ACA               	goto	l2554
  5107  02B3                     l2552:	
  5108                           
  5109                           ;ADXL345.c: 79: else
  5110                           ;ADXL345.c: 80: {
  5111                           ;ADXL345.c: 81: I2C_Write(0x1D,
  5112                           ;ADXL345.c: 82: &registerAddress,
  5113                           ;ADXL345.c: 83: 1,
  5114                           ;ADXL345.c: 84: 0);
  5115  02B3  3050               	movlw	(low (ADXL345_GetRegisterValue@registerAddress| 0))& (0+255)
  5116  02B4  00CC               	movwf	??_ADXL345_GetRegisterValue
  5117  02B5  084C               	movf	??_ADXL345_GetRegisterValue,w
  5118  02B6  00C3               	movwf	I2C_Write@dataBuffer
  5119  02B7  01C4               	clrf	I2C_Write@bytesNumber
  5120  02B8  0AC4               	incf	I2C_Write@bytesNumber,f
  5121  02B9  01C5               	clrf	I2C_Write@stopBit
  5122  02BA  301D               	movlw	29
  5123  02BB  3182  2216  3182   	fcall	_I2C_Write
  5124                           
  5125                           ;ADXL345.c: 85: I2C_Read(0x1D,
  5126                           ;ADXL345.c: 86: &registerValue,
  5127                           ;ADXL345.c: 87: 1,
  5128                           ;ADXL345.c: 88: 1);
  5129  02BE  3051               	movlw	(low (ADXL345_GetRegisterValue@registerValue| 0))& (0+255)
  5130  02BF  0020               	movlb	0	; select bank0
  5131  02C0  00CC               	movwf	??_ADXL345_GetRegisterValue
  5132  02C1  084C               	movf	??_ADXL345_GetRegisterValue,w
  5133  02C2  00C3               	movwf	I2C_Read@dataBuffer
  5134  02C3  01C4               	clrf	I2C_Read@bytesNumber
  5135  02C4  0AC4               	incf	I2C_Read@bytesNumber,f
  5136  02C5  01C5               	clrf	I2C_Read@stopBit
  5137  02C6  0AC5               	incf	I2C_Read@stopBit,f
  5138  02C7  301D               	movlw	29
  5139  02C8  3181  21C1         	fcall	_I2C_Read
  5140  02CA                     l2554:	
  5141                           
  5142                           ;ADXL345.c: 89: }
  5143                           ;ADXL345.c: 91: return registerValue;
  5144  02CA  0020               	movlb	0	; select bank0
  5145  02CB  0851               	movf	ADXL345_GetRegisterValue@registerValue,w
  5146  02CC  0008               	return
  5147  02CD                     __end_of_ADXL345_GetRegisterValue:	
  5148                           
  5149                           	psect	text11
  5150  03CC                     __ptext11:	
  5151 ;; *************** function _SPI_Read *****************
  5152 ;; Defined at:
  5153 ;;		line 236 in file "../projectswithmick/CuriositywithADXL345Port/Communication.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  slaveDeviceI    1    wreg     unsigned char 
  5156 ;;  data            1    0[BANK0 ] PTR unsigned char 
  5157 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@dataBuffer(2), 
  5158 ;;  bytesNumber     1    1[BANK0 ] unsigned char 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  slaveDeviceI    1    0[COMMON] unsigned char 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  1    wreg      unsigned char 
  5163 ;; Registers used:
  5164 ;;		wreg
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5170 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5173 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5174 ;;Total ram usage:        2 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; Hardware stack levels required when called:    4
  5177 ;; This function calls:
  5178 ;;		Nothing
  5179 ;; This function is called by:
  5180 ;;		_ADXL345_GetRegisterValue
  5181 ;;		_ADXL345_GetXyz
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           
  5186                           ;psect for function _SPI_Read
  5187  03CC                     _SPI_Read:	
  5188                           
  5189                           ;incstack = 0
  5190                           ; Regs used in _SPI_Read: [wreg]
  5191  03CC  0008               	return
  5192  03CD                     __end_of_SPI_Read:	
  5193                           
  5194                           	psect	text12
  5195  0216                     __ptext12:	
  5196 ;; *************** function _I2C_Write *****************
  5197 ;; Defined at:
  5198 ;;		line 98 in file "../projectswithmick/CuriositywithADXL345Port/Communication.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  slaveAddress    1    wreg     unsigned char 
  5201 ;;  dataBuffer      1    0[BANK0 ] PTR unsigned char 
  5202 ;;		 -> ADXL345_GetXyz@firstRegAddress(1), ADXL345_SetRegisterValue@dataBuffer(2), ADXL345_GetRegisterValue@registerAddr
      +ess(1), 
  5203 ;;  bytesNumber     1    1[BANK0 ] unsigned char 
  5204 ;;  stopBit         1    2[BANK0 ] unsigned char 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  slaveAddress    1    5[BANK0 ] unsigned char 
  5207 ;;  byte            1    7[BANK0 ] unsigned char 
  5208 ;;  acknowledge     1    6[BANK0 ] unsigned char 
  5209 ;;  status          1    4[BANK0 ] unsigned char 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      unsigned char 
  5212 ;; Registers used:
  5213 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5219 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;Total ram usage:        8 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    4
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_ADXL345_GetRegisterValue
  5230 ;;		_ADXL345_SetRegisterValue
  5231 ;;		_ADXL345_GetXyz
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           
  5236                           ;psect for function _I2C_Write
  5237  0216                     _I2C_Write:	
  5238                           
  5239                           ;incstack = 0
  5240                           ; Regs used in _I2C_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  5241                           ;I2C_Write@slaveAddress stored from wreg
  5242  0216  0020               	movlb	0	; select bank0
  5243  0217  00C8               	movwf	I2C_Write@slaveAddress
  5244                           
  5245                           ;Communication.c: 103: unsigned char status = 0;
  5246  0218  01C7               	clrf	I2C_Write@status
  5247                           
  5248                           ;Communication.c: 104: unsigned char acknowledge = 0;
  5249  0219  01C9               	clrf	I2C_Write@acknowledge
  5250                           
  5251                           ;Communication.c: 105: unsigned char byte = 0;
  5252  021A  01CA               	clrf	I2C_Write@byte
  5253                           
  5254                           ;Communication.c: 107: SSP1CON2bits.SEN = 1;
  5255  021B  0024               	movlb	4	; select bank4
  5256  021C  1416               	bsf	22,0	;volatile
  5257  021D                     l111:	
  5258                           ;Communication.c: 108: while(SSP1CON2bits.SEN);
  5259                           
  5260  021D  1816               	btfsc	22,0	;volatile
  5261  021E  2A1D               	goto	l111
  5262                           
  5263                           ;Communication.c: 109: PIR1bits.SSP1IF = 0;
  5264  021F  0020               	movlb	0	; select bank0
  5265  0220  1190               	bcf	16,3	;volatile
  5266                           
  5267                           ;Communication.c: 111: SSP1BUF = slaveAddress << 1;
  5268  0221  3548               	lslf	I2C_Write@slaveAddress,w
  5269  0222  0024               	movlb	4	; select bank4
  5270  0223  0091               	movwf	17	;volatile
  5271  0224                     l114:	
  5272                           ;Communication.c: 112: while(!PIR1bits.SSP1IF);
  5273                           
  5274  0224  0020               	movlb	0	; select bank0
  5275  0225  1D90               	btfss	16,3	;volatile
  5276  0226  2A24               	goto	l114
  5277                           
  5278                           ;Communication.c: 113: PIR1bits.SSP1IF = 0;
  5279  0227  1190               	bcf	16,3	;volatile
  5280                           
  5281                           ;Communication.c: 114: acknowledge = SSP1CON2bits.ACKSTAT;
  5282  0228  3000               	movlw	0
  5283  0229  0024               	movlb	4	; select bank4
  5284  022A  1B16               	btfsc	22,6	;volatile
  5285  022B  3001               	movlw	1
  5286  022C  0020               	movlb	0	; select bank0
  5287  022D  00C9               	movwf	I2C_Write@acknowledge
  5288                           
  5289                           ;Communication.c: 115: if (acknowledge == 0)
  5290  022E  0849               	movf	I2C_Write@acknowledge,w
  5291  022F  1D03               	btfss	3,2
  5292  0230  2A48               	goto	l2500
  5293                           
  5294                           ;Communication.c: 116: {
  5295                           ;Communication.c: 117: for(byte = 0; byte < bytesNumber; byte++)
  5296  0231  01CA               	clrf	I2C_Write@byte
  5297  0232                     l2498:	
  5298  0232  0844               	movf	I2C_Write@bytesNumber,w
  5299  0233  024A               	subwf	I2C_Write@byte,w
  5300  0234  1803               	btfsc	3,0
  5301  0235  2A4C               	goto	l2502
  5302                           
  5303                           ;Communication.c: 118: {
  5304                           ;Communication.c: 119: SSP1BUF = dataBuffer[byte];
  5305  0236  084A               	movf	I2C_Write@byte,w
  5306  0237  0743               	addwf	I2C_Write@dataBuffer,w
  5307  0238  00C6               	movwf	??_I2C_Write
  5308  0239  0846               	movf	??_I2C_Write,w
  5309  023A  0086               	movwf	6
  5310  023B  0187               	clrf	7
  5311  023C  0801               	movf	1,w
  5312  023D  0024               	movlb	4	; select bank4
  5313  023E  0091               	movwf	17	;volatile
  5314  023F                     l120:	
  5315                           ;Communication.c: 120: while(!PIR1bits.SSP1IF);
  5316                           
  5317  023F  0020               	movlb	0	; select bank0
  5318  0240  1D90               	btfss	16,3	;volatile
  5319  0241  2A3F               	goto	l120
  5320                           
  5321                           ;Communication.c: 121: PIR1bits.SSP1IF = 0;
  5322  0242  1190               	bcf	16,3	;volatile
  5323  0243  3001               	movlw	1
  5324  0244  00C6               	movwf	??_I2C_Write
  5325  0245  0846               	movf	??_I2C_Write,w
  5326  0246  07CA               	addwf	I2C_Write@byte,f
  5327  0247  2A32               	goto	l2498
  5328  0248                     l2500:	
  5329                           ;Communication.c: 122: }
  5330                           ;Communication.c: 123: }
  5331                           
  5332                           
  5333                           ;Communication.c: 124: else
  5334                           ;Communication.c: 125: {
  5335                           ;Communication.c: 126: status = 0xFF;
  5336  0248  30FF               	movlw	255
  5337  0249  00C6               	movwf	??_I2C_Write
  5338  024A  0846               	movf	??_I2C_Write,w
  5339  024B  00C7               	movwf	I2C_Write@status
  5340  024C                     l2502:	
  5341                           
  5342                           ;Communication.c: 127: }
  5343                           ;Communication.c: 128: if(stopBit)
  5344  024C  0845               	movf	I2C_Write@stopBit,w
  5345  024D  1903               	btfsc	3,2
  5346  024E  0008               	return
  5347                           
  5348                           ;Communication.c: 129: {
  5349                           ;Communication.c: 130: SSP1CON2bits.PEN = 1;
  5350  024F  0024               	movlb	4	; select bank4
  5351  0250  1516               	bsf	22,2	;volatile
  5352  0251                     l126:	
  5353                           ;Communication.c: 131: while(SSP1CON2bits.PEN);
  5354                           
  5355  0251  1D16               	btfss	22,2	;volatile
  5356  0252  0008               	return
  5357  0253  2A51               	goto	l126
  5358  0254                     __end_of_I2C_Write:	
  5359                           ;Communication.c: 132: }
  5360                           ;Communication.c: 134: return status;
  5361                           ;	Return value of _I2C_Write is never used
  5362                           
  5363                           
  5364                           	psect	text13
  5365  01C1                     __ptext13:	
  5366 ;; *************** function _I2C_Read *****************
  5367 ;; Defined at:
  5368 ;;		line 149 in file "../projectswithmick/CuriositywithADXL345Port/Communication.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  slaveAddress    1    wreg     unsigned char 
  5371 ;;  dataBuffer      1    0[BANK0 ] PTR unsigned char 
  5372 ;;		 -> ADXL345_GetXyz@readBuffer(7), ADXL345_GetRegisterValue@registerValue(1), 
  5373 ;;  bytesNumber     1    1[BANK0 ] unsigned char 
  5374 ;;  stopBit         1    2[BANK0 ] unsigned char 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  slaveAddress    1    6[BANK0 ] unsigned char 
  5377 ;;  byte            1    8[BANK0 ] unsigned char 
  5378 ;;  acknowledge     1    7[BANK0 ] unsigned char 
  5379 ;;  status          1    5[BANK0 ] unsigned char 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      unsigned char 
  5382 ;; Registers used:
  5383 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5389 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5390 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5392 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5393 ;;Total ram usage:        9 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    4
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_ADXL345_GetRegisterValue
  5400 ;;		_ADXL345_GetXyz
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           
  5405                           ;psect for function _I2C_Read
  5406  01C1                     _I2C_Read:	
  5407                           
  5408                           ;incstack = 0
  5409                           ; Regs used in _I2C_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5410                           ;I2C_Read@slaveAddress stored from wreg
  5411  01C1  0020               	movlb	0	; select bank0
  5412  01C2  00C9               	movwf	I2C_Read@slaveAddress
  5413                           
  5414                           ;Communication.c: 154: unsigned char status = bytesNumber;
  5415  01C3  0844               	movf	I2C_Read@bytesNumber,w
  5416  01C4  00C6               	movwf	??_I2C_Read
  5417  01C5  0846               	movf	??_I2C_Read,w
  5418  01C6  00C8               	movwf	I2C_Read@status
  5419                           
  5420                           ;Communication.c: 155: unsigned char acknowledge = 0;
  5421  01C7  01CA               	clrf	I2C_Read@acknowledge
  5422                           
  5423                           ;Communication.c: 156: unsigned char byte = 0;
  5424  01C8  01CB               	clrf	I2C_Read@byte
  5425                           
  5426                           ;Communication.c: 158: SSP1CON2bits.SEN = 1;
  5427  01C9  0024               	movlb	4	; select bank4
  5428  01CA  1416               	bsf	22,0	;volatile
  5429  01CB                     l132:	
  5430                           ;Communication.c: 159: while(SSP1CON2bits.SEN);
  5431                           
  5432  01CB  1816               	btfsc	22,0	;volatile
  5433  01CC  29CB               	goto	l132
  5434                           
  5435                           ;Communication.c: 160: PIR1bits.SSP1IF = 0;
  5436  01CD  0020               	movlb	0	; select bank0
  5437  01CE  1190               	bcf	16,3	;volatile
  5438                           
  5439                           ;Communication.c: 162: SSP1BUF = slaveAddress << 1;
  5440  01CF  3549               	lslf	I2C_Read@slaveAddress,w
  5441  01D0  0024               	movlb	4	; select bank4
  5442  01D1  0091               	movwf	17	;volatile
  5443  01D2                     l135:	
  5444                           ;Communication.c: 163: while(!PIR1bits.SSP1IF);
  5445                           
  5446  01D2  0020               	movlb	0	; select bank0
  5447  01D3  1D90               	btfss	16,3	;volatile
  5448  01D4  29D2               	goto	l135
  5449                           
  5450                           ;Communication.c: 164: PIR1bits.SSP1IF = 0;
  5451  01D5  1190               	bcf	16,3	;volatile
  5452                           
  5453                           ;Communication.c: 165: acknowledge = SSP1CON2bits.ACKSTAT;
  5454  01D6  3000               	movlw	0
  5455  01D7  0024               	movlb	4	; select bank4
  5456  01D8  1B16               	btfsc	22,6	;volatile
  5457  01D9  3001               	movlw	1
  5458  01DA  0020               	movlb	0	; select bank0
  5459  01DB  00CA               	movwf	I2C_Read@acknowledge
  5460                           
  5461                           ;Communication.c: 166: if (acknowledge == 0)
  5462  01DC  084A               	movf	I2C_Read@acknowledge,w
  5463  01DD  1D03               	btfss	3,2
  5464  01DE  2A0D               	goto	l2532
  5465                           
  5466                           ;Communication.c: 167: {
  5467                           ;Communication.c: 168: for(byte = 0; byte < bytesNumber; byte++)
  5468  01DF  01CB               	clrf	I2C_Read@byte
  5469  01E0                     l2530:	
  5470  01E0  0844               	movf	I2C_Read@bytesNumber,w
  5471  01E1  024B               	subwf	I2C_Read@byte,w
  5472  01E2  1803               	btfsc	3,0
  5473  01E3  2A11               	goto	l2534
  5474                           
  5475                           ;Communication.c: 169: {
  5476                           ;Communication.c: 170: SSP1CON2bits.RCEN = 1;
  5477  01E4  0024               	movlb	4	; select bank4
  5478  01E5  1596               	bsf	22,3	;volatile
  5479  01E6                     l141:	
  5480                           ;Communication.c: 171: while(!SSP1STATbits.BF);
  5481                           
  5482  01E6  1C14               	btfss	20,0	;volatile
  5483  01E7  29E6               	goto	l141
  5484                           
  5485                           ;Communication.c: 172: dataBuffer[byte] = SSPBUF;
  5486  01E8  0811               	movf	17,w	;volatile
  5487  01E9  0020               	movlb	0	; select bank0
  5488  01EA  00C6               	movwf	??_I2C_Read
  5489  01EB  084B               	movf	I2C_Read@byte,w
  5490  01EC  0743               	addwf	I2C_Read@dataBuffer,w
  5491  01ED  00C7               	movwf	??_I2C_Read+1
  5492  01EE  0847               	movf	??_I2C_Read+1,w
  5493  01EF  0086               	movwf	6
  5494  01F0  0187               	clrf	7
  5495  01F1  0846               	movf	??_I2C_Read,w
  5496  01F2  0081               	movwf	1
  5497                           
  5498                           ;Communication.c: 173: if(byte == (bytesNumber - 1))
  5499  01F3  0844               	movf	I2C_Read@bytesNumber,w
  5500  01F4  3EFF               	addlw	255
  5501  01F5  00C6               	movwf	??_I2C_Read
  5502  01F6  30FF               	movlw	255
  5503  01F7  1803               	skipnc
  5504  01F8  3000               	movlw	0
  5505  01F9  00C7               	movwf	??_I2C_Read+1
  5506  01FA  084B               	movf	I2C_Read@byte,w
  5507  01FB  0646               	xorwf	??_I2C_Read,w
  5508  01FC  0447               	iorwf	??_I2C_Read+1,w
  5509  01FD  1D03               	skipz
  5510  01FE  2A02               	goto	l144
  5511                           
  5512                           ;Communication.c: 174: {
  5513                           ;Communication.c: 175: SSP1CON2bits.ACKDT = 1;
  5514  01FF  0024               	movlb	4	; select bank4
  5515  0200  1696               	bsf	22,5	;volatile
  5516                           
  5517                           ;Communication.c: 176: }
  5518  0201  2A04               	goto	l145
  5519  0202                     l144:	
  5520                           
  5521                           ;Communication.c: 177: else
  5522                           ;Communication.c: 178: {
  5523                           ;Communication.c: 179: SSP1CON2bits.ACKDT = 0;
  5524  0202  0024               	movlb	4	; select bank4
  5525  0203  1296               	bcf	22,5	;volatile
  5526  0204                     l145:	
  5527                           
  5528                           ;Communication.c: 180: }
  5529                           ;Communication.c: 181: SSP1CON2bits.ACKEN = 1;
  5530  0204  1616               	bsf	22,4	;volatile
  5531  0205                     l146:	
  5532                           ;Communication.c: 182: while(SSP1CON2bits.ACKEN);
  5533                           
  5534  0205  1A16               	btfsc	22,4	;volatile
  5535  0206  2A05               	goto	l146
  5536  0207  3001               	movlw	1
  5537  0208  0020               	movlb	0	; select bank0
  5538  0209  00C6               	movwf	??_I2C_Read
  5539  020A  0846               	movf	??_I2C_Read,w
  5540  020B  07CB               	addwf	I2C_Read@byte,f
  5541  020C  29E0               	goto	l2530
  5542  020D                     l2532:	
  5543                           ;Communication.c: 183: }
  5544                           ;Communication.c: 184: }
  5545                           
  5546                           
  5547                           ;Communication.c: 185: else
  5548                           ;Communication.c: 186: {
  5549                           ;Communication.c: 187: status = 0xFF;
  5550  020D  30FF               	movlw	255
  5551  020E  00C6               	movwf	??_I2C_Read
  5552  020F  0846               	movf	??_I2C_Read,w
  5553  0210  00C8               	movwf	I2C_Read@status
  5554  0211                     l2534:	
  5555                           
  5556                           ;Communication.c: 188: }
  5557                           ;Communication.c: 189: SSP1CON2bits.PEN = 1;
  5558  0211  0024               	movlb	4	; select bank4
  5559  0212  1516               	bsf	22,2	;volatile
  5560  0213                     l151:	
  5561                           ;Communication.c: 190: while(SSP1CON2bits.PEN);
  5562                           
  5563  0213  1D16               	btfss	22,2	;volatile
  5564  0214  0008               	return
  5565  0215  2A13               	goto	l151
  5566  0216                     __end_of_I2C_Read:	
  5567                           ;Communication.c: 192: return status;
  5568                           ;	Return value of _I2C_Read is never used
  5569                           
  5570                           
  5571                           	psect	intentry
  5572  0004                     __pintentry:	
  5573 ;; *************** function _INTERRUPT_InterruptManager *****************
  5574 ;; Defined at:
  5575 ;;		line 51 in file "../projectswithmick/CuriositywithADXL345Port/interrupt_manager.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;		None
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;		None
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  1    wreg      void 
  5582 ;; Registers used:
  5583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5593 ;;Total ram usage:        1 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:    3
  5596 ;; This function calls:
  5597 ;;		_I2C_BusCollisionISR
  5598 ;;		_I2C_ISR
  5599 ;;		_TMR0_ISR
  5600 ;; This function is called by:
  5601 ;;		Interrupt level 1
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605  0004                     _INTERRUPT_InterruptManager:	
  5606                           
  5607                           ;incstack = 0
  5608  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5609                           
  5610                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5611  0005  3180               	pagesel	$
  5612  0006  0020               	movlb	0	; select bank0
  5613  0007  087F               	movf	127,w
  5614  0008  00FB               	movwf	??_INTERRUPT_InterruptManager
  5615                           
  5616                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  5617  0009  1A8B               	btfsc	11,5	;volatile
  5618  000A  1D0B               	btfss	11,2	;volatile
  5619  000B  2810               	goto	i1l339
  5620                           
  5621                           ;interrupt_manager.c: 55: {
  5622                           ;interrupt_manager.c: 56: TMR0_ISR();
  5623  000C  3183  2320  3180   	fcall	_TMR0_ISR
  5624                           
  5625                           ;interrupt_manager.c: 57: }
  5626  000F  2824               	goto	i1l347
  5627  0010                     i1l339:	
  5628                           
  5629                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1)
  5630  0010  1F0B               	btfss	11,6	;volatile
  5631  0011  2824               	goto	i1l347
  5632                           
  5633                           ;interrupt_manager.c: 59: {
  5634                           ;interrupt_manager.c: 60: if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  5635  0012  0021               	movlb	1	; select bank1
  5636  0013  1D91               	btfss	17,3	;volatile
  5637  0014  281C               	goto	i1l342
  5638  0015  0020               	movlb	0	; select bank0
  5639  0016  1D91               	btfss	17,3	;volatile
  5640  0017  281C               	goto	i1l342
  5641                           
  5642                           ;interrupt_manager.c: 61: {
  5643                           ;interrupt_manager.c: 62: I2C_BusCollisionISR();
  5644  0018  3183  23C8  3180   	fcall	_I2C_BusCollisionISR
  5645                           
  5646                           ;interrupt_manager.c: 63: }
  5647  001B  2824               	goto	i1l347
  5648  001C                     i1l342:	
  5649                           
  5650                           ;interrupt_manager.c: 64: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  5651  001C  0021               	movlb	1	; select bank1
  5652  001D  1D90               	btfss	16,3	;volatile
  5653  001E  2824               	goto	i1l347
  5654  001F  0020               	movlb	0	; select bank0
  5655  0020  1D90               	btfss	16,3	;volatile
  5656  0021  2824               	goto	i1l347
  5657                           
  5658                           ;interrupt_manager.c: 65: {
  5659                           ;interrupt_manager.c: 66: I2C_ISR();
  5660  0022  3180  203C         	fcall	_I2C_ISR
  5661  0024                     i1l347:	
  5662                           ;interrupt_manager.c: 73: else
  5663                           ;interrupt_manager.c: 74: {
  5664                           
  5665                           ;interrupt_manager.c: 71: }
  5666                           ;interrupt_manager.c: 72: }
  5667                           
  5668                           ;interrupt_manager.c: 68: else
  5669                           ;interrupt_manager.c: 69: {
  5670                           
  5671                           ;interrupt_manager.c: 67: }
  5672                           
  5673  0024  087B               	movf	??_INTERRUPT_InterruptManager,w
  5674  0025  0020               	movlb	0	; select bank0
  5675  0026  00FF               	movwf	127
  5676  0027  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5677  0028  0009               	retfie
  5678  0029                     __end_of_INTERRUPT_InterruptManager:	
  5679                           
  5680                           	psect	text15
  5681  0320                     __ptext15:	
  5682 ;; *************** function _TMR0_ISR *****************
  5683 ;; Defined at:
  5684 ;;		line 107 in file "../projectswithmick/CuriositywithADXL345Port/tmr0.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;		None
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;		None
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  1    wreg      void 
  5691 ;; Registers used:
  5692 ;;		wreg, status,2, status,0, pclath, cstack
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;Total ram usage:        0 bytes
  5703 ;; Hardware stack levels used:    1
  5704 ;; Hardware stack levels required when called:    2
  5705 ;; This function calls:
  5706 ;;		_TMR0_CallBack
  5707 ;; This function is called by:
  5708 ;;		_INTERRUPT_InterruptManager
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           
  5713                           ;psect for function _TMR0_ISR
  5714  0320                     _TMR0_ISR:	
  5715                           
  5716                           ;tmr0.c: 109: static volatile uint16_t CountCallBack = 0;
  5717                           ;tmr0.c: 112: INTCONbits.TMR0IF = 0;
  5718                           
  5719                           ;incstack = 0
  5720                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5721  0320  110B               	bcf	11,2	;volatile
  5722                           
  5723                           ;tmr0.c: 114: TMR0 = timer0ReloadVal;
  5724  0321  0020               	movlb	0	; select bank0
  5725  0322  0867               	movf	_timer0ReloadVal,w	;volatile
  5726  0323  0095               	movwf	21	;volatile
  5727                           
  5728                           ;tmr0.c: 117: if (++CountCallBack >= 250)
  5729  0324  3001               	movlw	1
  5730  0325  07AC               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  5731  0326  3000               	movlw	0
  5732  0327  3DAD               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  5733  0328  3000               	movlw	0
  5734  0329  022D               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  5735  032A  30FA               	movlw	250
  5736  032B  1903               	skipnz
  5737  032C  022C               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  5738  032D  1C03               	skipc
  5739  032E  2B36               	goto	L2
  5740                           
  5741                           ;tmr0.c: 118: {
  5742                           ;tmr0.c: 120: TMR0_CallBack();
  5743  032F  3183  239D  3183   	fcall	_TMR0_CallBack
  5744                           
  5745                           ;tmr0.c: 123: CountCallBack = 0;
  5746  0332  0020               	movlb	0	; select bank0
  5747  0333  01AC               	clrf	TMR0_ISR@CountCallBack	;volatile
  5748  0334  01AD               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  5749                           
  5750                           ;tmr0.c: 124: }
  5751                           ;tmr0.c: 125: do { LATCbits.LATC5 = ~LATCbits.LATC5; } while(0);
  5752  0335  1003               	clrc
  5753  0336                     L2:	
  5754  0336  0022               	movlb	2	; select bank2
  5755  0337  1E8E               	btfss	14,5	;volatile
  5756  0338  1403               	setc
  5757  0339  1C03               	btfss	3,0
  5758  033A  2B3E               	goto	u162_20
  5759  033B  0022               	movlb	2	; select bank2
  5760  033C  168E               	bsf	14,5	;volatile
  5761  033D  0008               	return
  5762  033E                     u162_20:	
  5763  033E  0022               	movlb	2	; select bank2
  5764  033F  128E               	bcf	14,5	;volatile
  5765  0340  0008               	return
  5766  0341                     __end_of_TMR0_ISR:	
  5767                           
  5768                           	psect	text16
  5769  039D                     __ptext16:	
  5770 ;; *************** function _TMR0_CallBack *****************
  5771 ;; Defined at:
  5772 ;;		line 129 in file "../projectswithmick/CuriositywithADXL345Port/tmr0.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;		None
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;		None
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      void 
  5779 ;; Registers used:
  5780 ;;		wreg, status,2, status,0, pclath, cstack
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;Total ram usage:        0 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:    1
  5793 ;; This function calls:
  5794 ;;		Absolute function
  5795 ;;		_TMR0_DefaultInterruptHandler
  5796 ;; This function is called by:
  5797 ;;		_TMR0_ISR
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           
  5802                           ;psect for function _TMR0_CallBack
  5803  039D                     _TMR0_CallBack:	
  5804                           
  5805                           ;tmr0.c: 133: if(TMR0_InterruptHandler)
  5806                           
  5807                           ;incstack = 0
  5808                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  5809  039D  0020               	movlb	0	; select bank0
  5810  039E  0865               	movf	_TMR0_InterruptHandler,w
  5811  039F  0466               	iorwf	_TMR0_InterruptHandler+1,w
  5812  03A0  1903               	btfsc	3,2
  5813  03A1  0008               	return
  5814                           
  5815                           ;tmr0.c: 134: {
  5816                           ;tmr0.c: 135: TMR0_InterruptHandler();
  5817  03A2  0866               	movf	_TMR0_InterruptHandler+1,w
  5818  03A3  008A               	movwf	10
  5819  03A4  0865               	movf	_TMR0_InterruptHandler,w
  5820  03A5  000A               	callw
  5821  03A6  3183               	pagesel	$
  5822  03A7  0008               	return
  5823  03A8                     __end_of_TMR0_CallBack:	
  5824                           
  5825                           	psect	text17
  5826  03CD                     __ptext17:	
  5827 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5828 ;; Defined at:
  5829 ;;		line 143 in file "../projectswithmick/CuriositywithADXL345Port/tmr0.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;		None
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;		None
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      void 
  5836 ;; Registers used:
  5837 ;;		None
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;Total ram usage:        0 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; This function calls:
  5850 ;;		Nothing
  5851 ;; This function is called by:
  5852 ;;		_TMR0_Initialize
  5853 ;;		_TMR0_CallBack
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           
  5858                           ;psect for function _TMR0_DefaultInterruptHandler
  5859  03CD                     _TMR0_DefaultInterruptHandler:	
  5860                           
  5861                           ;incstack = 0
  5862                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5863  03CD  0008               	return
  5864  03CE                     __end_of_TMR0_DefaultInterruptHandler:	
  5865                           
  5866                           	psect	text18
  5867  003C                     __ptext18:	
  5868 ;; *************** function _I2C_ISR *****************
  5869 ;; Defined at:
  5870 ;;		line 233 in file "../projectswithmick/CuriositywithADXL345Port/i2c.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;		None
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1    wreg      void 
  5877 ;; Registers used:
  5878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5886 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5888 ;;Total ram usage:        4 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    1
  5891 ;; This function calls:
  5892 ;;		_I2C_FunctionComplete
  5893 ;;		_I2C_Stop
  5894 ;; This function is called by:
  5895 ;;		_INTERRUPT_InterruptManager
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           
  5900                           ;psect for function _I2C_ISR
  5901  003C                     _I2C_ISR:	
  5902                           
  5903                           ;i2c.c: 236: static uint8_t *pi2c_buf_ptr;
  5904                           ;i2c.c: 237: static uint16_t i2c_address = 0;
  5905                           ;i2c.c: 238: static uint8_t i2c_bytes_left = 0;
  5906                           ;i2c.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  5907                           ;i2c.c: 241: PIR1bits.SSP1IF = 0;
  5908                           
  5909                           ;incstack = 0
  5910                           ; Regs used in _I2C_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5911  003C  0020               	movlb	0	; select bank0
  5912  003D  1190               	bcf	16,3	;volatile
  5913                           
  5914                           ;i2c.c: 245: if(SSP1CON1bits.WCOL)
  5915  003E  0024               	movlb	4	; select bank4
  5916  003F  1F95               	btfss	21,7	;volatile
  5917  0040  2961               	goto	i1l2158
  5918                           
  5919                           ;i2c.c: 246: {
  5920                           ;i2c.c: 248: SSP1CON1bits.WCOL = 0;
  5921  0041  1395               	bcf	21,7	;volatile
  5922                           
  5923                           ;i2c.c: 250: *(p_i2c_current->pTrFlag) = I2C_MESSAGE_FAIL;
  5924  0042  01F1               	clrf	_i2c_state
  5925                           
  5926                           ;i2c.c: 253: p_i2c_current = (0);
  5927  0043  0020               	movlb	0	; select bank0
  5928  0044  01B5               	clrf	_p_i2c_current
  5929                           
  5930                           ;i2c.c: 255: return;
  5931  0045  0008               	return
  5932  0046                     i1l231:	
  5933                           ;i2c.c: 260: {
  5934                           ;i2c.c: 261: case S_MASTER_IDLE:
  5935                           
  5936                           ;i2c.c: 256: }
  5937                           ;i2c.c: 259: switch(i2c_state)
  5938                           
  5939                           
  5940                           ;i2c.c: 263: if(i2c_object.trStatus.s.empty != 1)
  5941  0046  0020               	movlb	0	; select bank0
  5942  0047  18A9               	btfsc	_i2c_object+2,1
  5943  0048  0008               	return
  5944                           
  5945                           ;i2c.c: 264: {
  5946                           ;i2c.c: 266: p_i2c_current = i2c_object.pTrHead;
  5947  0049  0828               	movf	low ((_i2c_object| 0+1)),w
  5948  004A  00F7               	movwf	??_I2C_ISR
  5949  004B  0877               	movf	??_I2C_ISR,w
  5950  004C  00B5               	movwf	_p_i2c_current
  5951                           
  5952                           ;i2c.c: 267: i2c_trb_count = i2c_object.pTrHead->count;
  5953  004D  0828               	movf	low ((_i2c_object| 0+1)),w
  5954  004E  0086               	movwf	6
  5955  004F  0187               	clrf	7
  5956  0050  0801               	movf	1,w
  5957  0051  00F7               	movwf	??_I2C_ISR
  5958  0052  0877               	movf	??_I2C_ISR,w
  5959  0053  00B6               	movwf	_i2c_trb_count
  5960                           
  5961                           ;i2c.c: 268: p_i2c_trb_current = i2c_object.pTrHead->ptrb_list;
  5962  0054  0828               	movf	low ((_i2c_object| 0+1)),w
  5963  0055  0086               	movwf	6
  5964  0056  0187               	clrf	7
  5965  0057  3F41               	moviw [1]fsr1
  5966  0058  00F0               	movwf	_p_i2c_trb_current
  5967                           
  5968                           ;i2c.c: 270: i2c_object.pTrHead++;
  5969  0059  3003               	movlw	3
  5970  005A  00F7               	movwf	??_I2C_ISR
  5971  005B  0877               	movf	??_I2C_ISR,w
  5972  005C  07A8               	addwf	low ((_i2c_object| 0+1)),f
  5973                           
  5974                           ;i2c.c: 273: if(i2c_object.pTrHead == (i2c_tr_queue + 1))
  5975  005D  0828               	movf	low ((_i2c_object| 0+1)),w
  5976  005E  3A43               	xorlw	(low ((_i2c_tr_queue| 0+3)))& (0+255)
  5977  005F  1D03               	skipz
  5978  0060  2865               	goto	i1l2046
  5979                           
  5980                           ;i2c.c: 274: {
  5981                           ;i2c.c: 276: i2c_object.pTrHead = i2c_tr_queue;
  5982  0061  3040               	movlw	(low (_i2c_tr_queue| 0))& (0+255)
  5983  0062  00F7               	movwf	??_I2C_ISR
  5984  0063  0877               	movf	??_I2C_ISR,w
  5985  0064  00A8               	movwf	low ((_i2c_object| 0+1))
  5986  0065                     i1l2046:	
  5987                           
  5988                           ;i2c.c: 277: }
  5989                           ;i2c.c: 281: i2c_object.trStatus.s.full = 0;
  5990  0065  1029               	bcf	_i2c_object+2,0
  5991                           
  5992                           ;i2c.c: 284: if(i2c_object.pTrHead == i2c_object.pTrTail)
  5993  0066  0828               	movf	low ((_i2c_object| 0+1)),w
  5994  0067  0627               	xorwf	_i2c_object,w
  5995  0068  1903               	btfsc	3,2
  5996                           
  5997                           ;i2c.c: 285: {
  5998                           ;i2c.c: 287: i2c_object.trStatus.s.empty = 1;
  5999  0069  14A9               	bsf	_i2c_object+2,1
  6000                           
  6001                           ;i2c.c: 288: }
  6002                           ;i2c.c: 291: SSP1CON2bits.SEN = 1;
  6003  006A  0024               	movlb	4	; select bank4
  6004  006B  1416               	bsf	22,0	;volatile
  6005                           
  6006                           ;i2c.c: 294: i2c_state = S_MASTER_SEND_ADDR;
  6007  006C  3002               	movlw	2
  6008  006D  00F7               	movwf	??_I2C_ISR
  6009  006E  0877               	movf	??_I2C_ISR,w
  6010  006F  00F1               	movwf	_i2c_state
  6011                           
  6012                           ;i2c.c: 295: }
  6013                           ;i2c.c: 297: break;
  6014  0070  0008               	return
  6015  0071                     i1l236:	
  6016                           ;i2c.c: 299: case S_MASTER_RESTART:
  6017                           
  6018                           
  6019                           ;i2c.c: 304: SSP1CON2bits.RSEN = 1;
  6020  0071  0024               	movlb	4	; select bank4
  6021  0072  1496               	bsf	22,1	;volatile
  6022                           
  6023                           ;i2c.c: 307: i2c_state = S_MASTER_SEND_ADDR;
  6024  0073  3002               	movlw	2
  6025  0074  00F7               	movwf	??_I2C_ISR
  6026  0075  0877               	movf	??_I2C_ISR,w
  6027  0076  00F1               	movwf	_i2c_state
  6028                           
  6029                           ;i2c.c: 309: break;
  6030  0077  0008               	return
  6031  0078                     i1l237:	
  6032                           ;i2c.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  6033                           
  6034                           
  6035                           ;i2c.c: 313: if(SSP1CON2bits.ACKSTAT)
  6036  0078  0024               	movlb	4	; select bank4
  6037  0079  1F16               	btfss	22,6	;volatile
  6038  007A  2884               	goto	i1l2058
  6039                           
  6040                           ;i2c.c: 314: {
  6041                           ;i2c.c: 315: i2c_object.i2cErrors++;
  6042  007B  3001               	movlw	1
  6043  007C  00F7               	movwf	??_I2C_ISR
  6044  007D  0877               	movf	??_I2C_ISR,w
  6045  007E  0020               	movlb	0	; select bank0
  6046  007F  07AB               	addwf	_i2c_object+4,f
  6047                           
  6048                           ;i2c.c: 316: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  6049  0080  3004               	movlw	4
  6050  0081  3183  23C4         	fcall	_I2C_Stop
  6051                           
  6052                           ;i2c.c: 317: }
  6053  0083  0008               	return
  6054  0084                     i1l2058:	
  6055                           
  6056                           ;i2c.c: 318: else
  6057                           ;i2c.c: 319: {
  6058                           ;i2c.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  6059  0084  0875               	movf	I2C_ISR@i2c_address+1,w
  6060  0085  00F8               	movwf	??_I2C_ISR+1
  6061  0086  0874               	movf	I2C_ISR@i2c_address,w
  6062  0087  00F7               	movwf	??_I2C_ISR
  6063  0088  36F8               	lsrf	??_I2C_ISR+1,f
  6064  0089  0CF7               	rrf	??_I2C_ISR,f
  6065  008A  0877               	movf	??_I2C_ISR,w
  6066  008B  0024               	movlb	4	; select bank4
  6067  008C  0091               	movwf	17	;volatile
  6068                           
  6069                           ;i2c.c: 324: if(i2c_address & 0x01)
  6070  008D  1C74               	btfss	I2C_ISR@i2c_address,0
  6071  008E  2894               	goto	i1l2064
  6072                           
  6073                           ;i2c.c: 325: {
  6074                           ;i2c.c: 328: i2c_state = S_MASTER_10BIT_RESTART;
  6075  008F  300B               	movlw	11
  6076  0090  00F7               	movwf	??_I2C_ISR
  6077  0091  0877               	movf	??_I2C_ISR,w
  6078  0092  00F1               	movwf	_i2c_state
  6079                           
  6080                           ;i2c.c: 329: }
  6081  0093  0008               	return
  6082  0094                     i1l2064:	
  6083                           
  6084                           ;i2c.c: 330: else
  6085                           ;i2c.c: 331: {
  6086                           ;i2c.c: 333: i2c_state = S_MASTER_SEND_DATA;
  6087  0094  3003               	movlw	3
  6088  0095  00F7               	movwf	??_I2C_ISR
  6089  0096  0877               	movf	??_I2C_ISR,w
  6090  0097  00F1               	movwf	_i2c_state
  6091                           
  6092                           ;i2c.c: 334: }
  6093                           ;i2c.c: 335: }
  6094                           ;i2c.c: 337: break;
  6095  0098  0008               	return
  6096  0099                     i1l242:	
  6097                           ;i2c.c: 339: case S_MASTER_10BIT_RESTART:
  6098                           
  6099                           
  6100                           ;i2c.c: 341: if(SSP1CON2bits.ACKSTAT)
  6101  0099  0024               	movlb	4	; select bank4
  6102  009A  1F16               	btfss	22,6	;volatile
  6103  009B  28A5               	goto	i1l243
  6104                           
  6105                           ;i2c.c: 342: {
  6106                           ;i2c.c: 343: i2c_object.i2cErrors++;
  6107  009C  3001               	movlw	1
  6108  009D  00F7               	movwf	??_I2C_ISR
  6109  009E  0877               	movf	??_I2C_ISR,w
  6110  009F  0020               	movlb	0	; select bank0
  6111  00A0  07AB               	addwf	_i2c_object+4,f
  6112                           
  6113                           ;i2c.c: 344: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  6114  00A1  3004               	movlw	4
  6115  00A2  3183  23C4         	fcall	_I2C_Stop
  6116                           
  6117                           ;i2c.c: 345: }
  6118  00A4  0008               	return
  6119  00A5                     i1l243:	
  6120                           
  6121                           ;i2c.c: 346: else
  6122                           ;i2c.c: 347: {
  6123                           ;i2c.c: 350: SSP1CON2bits.RSEN = 1;
  6124  00A5  1496               	bsf	22,1	;volatile
  6125                           
  6126                           ;i2c.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  6127  00A6  0875               	movf	I2C_ISR@i2c_address+1,w
  6128  00A7  00F8               	movwf	??_I2C_ISR+1
  6129  00A8  0874               	movf	I2C_ISR@i2c_address,w
  6130  00A9  00F7               	movwf	??_I2C_ISR
  6131  00AA  0878               	movf	??_I2C_ISR+1,w
  6132  00AB  00F7               	movwf	??_I2C_ISR
  6133  00AC  01F8               	clrf	??_I2C_ISR+1
  6134  00AD  3006               	movlw	6
  6135  00AE  0577               	andwf	??_I2C_ISR,w
  6136  00AF  00F9               	movwf	??_I2C_ISR+2
  6137  00B0  3000               	movlw	0
  6138  00B1  0578               	andwf	??_I2C_ISR+1,w
  6139  00B2  00FA               	movwf	??_I2C_ISR+3
  6140  00B3  30F0               	movlw	240
  6141  00B4  0479               	iorwf	??_I2C_ISR+2,w
  6142  00B5  00F4               	movwf	I2C_ISR@i2c_address
  6143  00B6  3000               	movlw	0
  6144  00B7  047A               	iorwf	??_I2C_ISR+3,w
  6145  00B8  00F5               	movwf	I2C_ISR@i2c_address+1
  6146                           
  6147                           ;i2c.c: 357: i2c_address |= 0x0001;
  6148  00B9  1474               	bsf	I2C_ISR@i2c_address,0
  6149                           
  6150                           ;i2c.c: 360: i2c_10bit_address_restart = 1;
  6151  00BA  0020               	movlb	0	; select bank0
  6152  00BB  01B2               	clrf	I2C_ISR@i2c_10bit_address_restart
  6153  00BC  0AB2               	incf	I2C_ISR@i2c_10bit_address_restart,f
  6154                           
  6155                           ;i2c.c: 363: i2c_state = S_MASTER_SEND_ADDR;
  6156  00BD  3002               	movlw	2
  6157  00BE  00F7               	movwf	??_I2C_ISR
  6158  00BF  0877               	movf	??_I2C_ISR,w
  6159  00C0  00F1               	movwf	_i2c_state
  6160                           
  6161                           ;i2c.c: 364: }
  6162                           ;i2c.c: 366: break;
  6163  00C1  0008               	return
  6164  00C2                     i1l2078:	
  6165                           ;i2c.c: 368: case S_MASTER_SEND_ADDR:
  6166                           
  6167                           
  6168                           ;i2c.c: 381: if(i2c_10bit_address_restart != 1)
  6169  00C2  0020               	movlb	0	; select bank0
  6170  00C3  0332               	decf	I2C_ISR@i2c_10bit_address_restart,w
  6171  00C4  1903               	btfsc	3,2
  6172  00C5  28D7               	goto	i1l2098
  6173                           
  6174                           ;i2c.c: 382: {
  6175                           ;i2c.c: 384: i2c_address = p_i2c_trb_current->address;
  6176  00C6  0870               	movf	_p_i2c_trb_current,w
  6177  00C7  0086               	movwf	6
  6178  00C8  0187               	clrf	7
  6179  00C9  3F40               	moviw [0]fsr1
  6180  00CA  00F4               	movwf	I2C_ISR@i2c_address
  6181  00CB  3F41               	moviw [1]fsr1
  6182  00CC  00F5               	movwf	I2C_ISR@i2c_address+1
  6183                           
  6184                           ;i2c.c: 385: pi2c_buf_ptr = p_i2c_trb_current->pbuffer;
  6185  00CD  0870               	movf	_p_i2c_trb_current,w
  6186  00CE  0086               	movwf	6
  6187  00CF  0187               	clrf	7
  6188  00D0  3F43               	moviw [3]fsr1
  6189  00D1  00B4               	movwf	I2C_ISR@pi2c_buf_ptr
  6190                           
  6191                           ;i2c.c: 386: i2c_bytes_left = p_i2c_trb_current->length;
  6192  00D2  0870               	movf	_p_i2c_trb_current,w
  6193  00D3  0086               	movwf	6
  6194  00D4  0187               	clrf	7
  6195  00D5  3F42               	moviw [2]fsr1
  6196  00D6  00B3               	movwf	I2C_ISR@i2c_bytes_left
  6197  00D7                     i1l2098:	
  6198                           ;i2c.c: 407: }
  6199                           ;i2c.c: 408: }
  6200                           
  6201                           ;i2c.c: 406: i2c_10bit_address_restart = 0;
  6202                           
  6203                           ;i2c.c: 404: i2c_state = S_MASTER_ACK_ADDR;
  6204                           
  6205                           ;i2c.c: 400: else
  6206                           ;i2c.c: 401: {
  6207                           ;i2c.c: 403: SSP1BUF = i2c_address;
  6208                           
  6209                           ;i2c.c: 399: }
  6210                           
  6211                           ;i2c.c: 398: i2c_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  6212                           
  6213                           ;i2c.c: 393: {
  6214                           ;i2c.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  6215                           
  6216                           ;i2c.c: 391: {
  6217                           ;i2c.c: 392: if (0 == i2c_10bit_address_restart)
  6218                           
  6219                           ;i2c.c: 387: }
  6220                           ;i2c.c: 390: if(!1 && (0x0 != i2c_address))
  6221                           
  6222                           
  6223                           ;i2c.c: 409: else
  6224                           ;i2c.c: 410: {
  6225                           ;i2c.c: 412: SSP1BUF = i2c_address;
  6226  00D7  0874               	movf	I2C_ISR@i2c_address,w
  6227  00D8  0024               	movlb	4	; select bank4
  6228  00D9  0091               	movwf	17	;volatile
  6229                           
  6230                           ;i2c.c: 413: if(i2c_address & 0x01)
  6231  00DA  1C74               	btfss	I2C_ISR@i2c_address,0
  6232  00DB  28E1               	goto	i1l2104
  6233                           
  6234                           ;i2c.c: 414: {
  6235                           ;i2c.c: 416: i2c_state = S_MASTER_ACK_ADDR;
  6236  00DC  3005               	movlw	5
  6237  00DD  00F7               	movwf	??_I2C_ISR
  6238  00DE  0877               	movf	??_I2C_ISR,w
  6239  00DF  00F1               	movwf	_i2c_state
  6240                           
  6241                           ;i2c.c: 417: }
  6242  00E0  0008               	return
  6243  00E1                     i1l2104:	
  6244                           
  6245                           ;i2c.c: 418: else
  6246                           ;i2c.c: 419: {
  6247                           ;i2c.c: 421: i2c_state = S_MASTER_SEND_DATA;
  6248  00E1  3003               	movlw	3
  6249  00E2  00F7               	movwf	??_I2C_ISR
  6250  00E3  0877               	movf	??_I2C_ISR,w
  6251  00E4  00F1               	movwf	_i2c_state
  6252                           
  6253                           ;i2c.c: 422: }
  6254                           ;i2c.c: 423: }
  6255                           ;i2c.c: 424: break;
  6256  00E5  0008               	return
  6257  00E6                     i1l253:	
  6258                           ;i2c.c: 426: case S_MASTER_SEND_DATA:
  6259                           
  6260                           
  6261                           ;i2c.c: 429: if(SSP1CON2bits.ACKSTAT)
  6262  00E6  0024               	movlb	4	; select bank4
  6263  00E7  1F16               	btfss	22,6	;volatile
  6264  00E8  28F4               	goto	i1l2112
  6265                           
  6266                           ;i2c.c: 430: {
  6267                           ;i2c.c: 432: i2c_object.i2cErrors++;
  6268  00E9  3001               	movlw	1
  6269  00EA  00F7               	movwf	??_I2C_ISR
  6270  00EB  0877               	movf	??_I2C_ISR,w
  6271  00EC  0020               	movlb	0	; select bank0
  6272  00ED  07AB               	addwf	_i2c_object+4,f
  6273                           
  6274                           ;i2c.c: 435: SSP1CON2bits.ACKSTAT = 0;
  6275  00EE  0024               	movlb	4	; select bank4
  6276  00EF  1316               	bcf	22,6	;volatile
  6277                           
  6278                           ;i2c.c: 438: I2C_Stop(I2C_DATA_NO_ACK);
  6279  00F0  3005               	movlw	5
  6280  00F1  3183  23C4         	fcall	_I2C_Stop
  6281                           
  6282                           ;i2c.c: 440: }
  6283  00F3  0008               	return
  6284  00F4                     i1l2112:	
  6285                           
  6286                           ;i2c.c: 441: else
  6287                           ;i2c.c: 442: {
  6288                           ;i2c.c: 444: if(i2c_bytes_left-- == 0U)
  6289  00F4  3001               	movlw	1
  6290  00F5  0020               	movlb	0	; select bank0
  6291  00F6  02B3               	subwf	I2C_ISR@i2c_bytes_left,f
  6292  00F7  0A33               	incf	I2C_ISR@i2c_bytes_left,w
  6293  00F8  1D03               	btfss	3,2
  6294  00F9  290D               	goto	i1l2120
  6295                           
  6296                           ;i2c.c: 445: {
  6297                           ;i2c.c: 449: p_i2c_trb_current++;
  6298  00FA  3004               	movlw	4
  6299  00FB  00F7               	movwf	??_I2C_ISR
  6300  00FC  0877               	movf	??_I2C_ISR,w
  6301  00FD  07F0               	addwf	_p_i2c_trb_current,f
  6302                           
  6303                           ;i2c.c: 452: if(--i2c_trb_count == 0)
  6304  00FE  3001               	movlw	1
  6305  00FF  02B6               	subwf	_i2c_trb_count,f
  6306  0100  1D03               	btfss	3,2
  6307  0101  2906               	goto	i1l257
  6308                           
  6309                           ;i2c.c: 453: {
  6310                           ;i2c.c: 454: I2C_Stop(I2C_MESSAGE_COMPLETE);
  6311  0102  3000               	movlw	0
  6312  0103  3183  23C4         	fcall	_I2C_Stop
  6313                           
  6314                           ;i2c.c: 455: }
  6315  0105  0008               	return
  6316  0106                     i1l257:	
  6317                           
  6318                           ;i2c.c: 456: else
  6319                           ;i2c.c: 457: {
  6320                           ;i2c.c: 464: SSP1CON2bits.RSEN = 1;
  6321  0106  0024               	movlb	4	; select bank4
  6322  0107  1496               	bsf	22,1	;volatile
  6323                           
  6324                           ;i2c.c: 467: i2c_state = S_MASTER_SEND_ADDR;
  6325  0108  3002               	movlw	2
  6326  0109  00F7               	movwf	??_I2C_ISR
  6327  010A  0877               	movf	??_I2C_ISR,w
  6328  010B  00F1               	movwf	_i2c_state
  6329                           
  6330                           ;i2c.c: 469: }
  6331                           ;i2c.c: 470: }
  6332  010C  0008               	return
  6333  010D                     i1l2120:	
  6334                           
  6335                           ;i2c.c: 471: else
  6336                           ;i2c.c: 472: {
  6337                           ;i2c.c: 474: SSP1BUF = *pi2c_buf_ptr++;
  6338  010D  0020               	movlb	0	; select bank0
  6339  010E  0834               	movf	I2C_ISR@pi2c_buf_ptr,w
  6340  010F  0086               	movwf	6
  6341  0110  0187               	clrf	7
  6342  0111  0801               	movf	1,w
  6343  0112  0024               	movlb	4	; select bank4
  6344  0113  0091               	movwf	17	;volatile
  6345  0114  3001               	movlw	1
  6346  0115  00F7               	movwf	??_I2C_ISR
  6347  0116  0877               	movf	??_I2C_ISR,w
  6348  0117  0020               	movlb	0	; select bank0
  6349  0118  07B4               	addwf	I2C_ISR@pi2c_buf_ptr,f
  6350                           
  6351                           ;i2c.c: 475: }
  6352                           ;i2c.c: 476: }
  6353                           ;i2c.c: 477: break;
  6354  0119  0008               	return
  6355  011A                     i1l260:	
  6356                           ;i2c.c: 479: case S_MASTER_ACK_ADDR:
  6357                           
  6358                           
  6359                           ;i2c.c: 482: if(SSP1CON2bits.ACKSTAT)
  6360  011A  0024               	movlb	4	; select bank4
  6361  011B  1F16               	btfss	22,6	;volatile
  6362  011C  2928               	goto	i1l261
  6363                           
  6364                           ;i2c.c: 483: {
  6365                           ;i2c.c: 486: i2c_object.i2cErrors++;
  6366  011D  3001               	movlw	1
  6367  011E  00F7               	movwf	??_I2C_ISR
  6368  011F  0877               	movf	??_I2C_ISR,w
  6369  0120  0020               	movlb	0	; select bank0
  6370  0121  07AB               	addwf	_i2c_object+4,f
  6371                           
  6372                           ;i2c.c: 489: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  6373  0122  3004               	movlw	4
  6374  0123  3183  23C4         	fcall	_I2C_Stop
  6375                           
  6376                           ;i2c.c: 492: SSP1CON2bits.ACKSTAT = 0;
  6377  0125  0024               	movlb	4	; select bank4
  6378  0126  1316               	bcf	22,6	;volatile
  6379                           
  6380                           ;i2c.c: 493: }
  6381  0127  0008               	return
  6382  0128                     i1l261:	
  6383                           
  6384                           ;i2c.c: 494: else
  6385                           ;i2c.c: 495: {
  6386                           ;i2c.c: 496: SSP1CON2bits.RCEN = 1;
  6387  0128  1596               	bsf	22,3	;volatile
  6388                           
  6389                           ;i2c.c: 497: i2c_state = S_MASTER_ACK_RCV_DATA;
  6390  0129  3008               	movlw	8
  6391  012A  00F7               	movwf	??_I2C_ISR
  6392  012B  0877               	movf	??_I2C_ISR,w
  6393  012C  00F1               	movwf	_i2c_state
  6394                           
  6395                           ;i2c.c: 498: }
  6396                           ;i2c.c: 499: break;
  6397  012D  0008               	return
  6398  012E                     i1l2132:	
  6399                           ;i2c.c: 501: case S_MASTER_RCV_DATA:
  6400                           
  6401                           
  6402                           ;i2c.c: 506: i2c_state = S_MASTER_ACK_RCV_DATA;
  6403  012E  3008               	movlw	8
  6404  012F  00F7               	movwf	??_I2C_ISR
  6405  0130  0877               	movf	??_I2C_ISR,w
  6406  0131  00F1               	movwf	_i2c_state
  6407                           
  6408                           ;i2c.c: 509: SSP1CON2bits.RCEN = 1;
  6409  0132  0024               	movlb	4	; select bank4
  6410  0133  1596               	bsf	22,3	;volatile
  6411                           
  6412                           ;i2c.c: 511: break;
  6413  0134  0008               	return
  6414  0135                     i1l2136:	
  6415                           ;i2c.c: 513: case S_MASTER_ACK_RCV_DATA:
  6416                           
  6417                           
  6418                           ;i2c.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
  6419  0135  0024               	movlb	4	; select bank4
  6420  0136  0811               	movf	17,w	;volatile
  6421  0137  00F7               	movwf	??_I2C_ISR
  6422  0138  0020               	movlb	0	; select bank0
  6423  0139  0834               	movf	I2C_ISR@pi2c_buf_ptr,w
  6424  013A  0086               	movwf	6
  6425  013B  0187               	clrf	7
  6426  013C  0877               	movf	??_I2C_ISR,w
  6427  013D  0081               	movwf	1
  6428  013E  3001               	movlw	1
  6429  013F  00F7               	movwf	??_I2C_ISR
  6430  0140  0877               	movf	??_I2C_ISR,w
  6431  0141  07B4               	addwf	I2C_ISR@pi2c_buf_ptr,f
  6432                           
  6433                           ;i2c.c: 519: if(--i2c_bytes_left)
  6434  0142  3001               	movlw	1
  6435  0143  02B3               	subwf	I2C_ISR@i2c_bytes_left,f
  6436  0144  1903               	btfsc	3,2
  6437  0145  294D               	goto	i1l265
  6438                           
  6439                           ;i2c.c: 520: {
  6440                           ;i2c.c: 526: SSP1CON2bits.ACKDT = 0;
  6441  0146  0024               	movlb	4	; select bank4
  6442  0147  1296               	bcf	22,5	;volatile
  6443                           
  6444                           ;i2c.c: 529: i2c_state = S_MASTER_RCV_DATA;
  6445  0148  3006               	movlw	6
  6446  0149  00F7               	movwf	??_I2C_ISR
  6447  014A  0877               	movf	??_I2C_ISR,w
  6448  014B  00F1               	movwf	_i2c_state
  6449                           
  6450                           ;i2c.c: 530: }
  6451  014C  2951               	goto	i1l2148
  6452  014D                     i1l265:	
  6453                           
  6454                           ;i2c.c: 531: else
  6455                           ;i2c.c: 532: {
  6456                           ;i2c.c: 536: SSP1CON2bits.ACKDT = 1;
  6457  014D  0024               	movlb	4	; select bank4
  6458  014E  1696               	bsf	22,5	;volatile
  6459                           
  6460                           ;i2c.c: 538: I2C_FunctionComplete();
  6461  014F  3183  238C         	fcall	_I2C_FunctionComplete
  6462  0151                     i1l2148:	
  6463                           
  6464                           ;i2c.c: 539: }
  6465                           ;i2c.c: 542: SSP1CON2bits.ACKEN = 1;
  6466  0151  0024               	movlb	4	; select bank4
  6467  0152  1616               	bsf	22,4	;volatile
  6468                           
  6469                           ;i2c.c: 543: break;
  6470  0153  0008               	return
  6471  0154                     i1l2150:	
  6472                           ;i2c.c: 545: case S_MASTER_RCV_STOP:
  6473                           
  6474                           
  6475                           ;i2c.c: 546: case S_MASTER_SEND_STOP:
  6476                           ;i2c.c: 549: I2C_Stop(I2C_MESSAGE_COMPLETE);
  6477  0154  3000               	movlw	0
  6478  0155  3183  23C4         	fcall	_I2C_Stop
  6479                           
  6480                           ;i2c.c: 550: break;
  6481  0157  0008               	return
  6482  0158                     i1l2152:	
  6483                           ;i2c.c: 552: default:
  6484                           
  6485                           
  6486                           ;i2c.c: 556: i2c_object.i2cErrors++;
  6487  0158  3001               	movlw	1
  6488  0159  00F7               	movwf	??_I2C_ISR
  6489  015A  0877               	movf	??_I2C_ISR,w
  6490  015B  0020               	movlb	0	; select bank0
  6491  015C  07AB               	addwf	_i2c_object+4,f
  6492                           
  6493                           ;i2c.c: 557: I2C_Stop(I2C_LOST_STATE);
  6494  015D  3006               	movlw	6
  6495  015E  3183  23C4         	fcall	_I2C_Stop
  6496                           
  6497                           ;i2c.c: 560: }
  6498                           
  6499                           ;i2c.c: 558: break;
  6500  0160  0008               	return
  6501  0161                     i1l2158:	
  6502  0161  0871               	movf	_i2c_state,w
  6503                           
  6504                           ; Switch size 1, requested type "space"
  6505                           ; Number of cases is 11, Range of values is 0 to 11
  6506                           ; switch strategies available:
  6507                           ; Name         Instructions Cycles
  6508                           ; direct_byte           30     6 (fixed)
  6509                           ; simple_byte           34    18 (average)
  6510                           ; jumptable            260     6 (fixed)
  6511                           ;	Chosen strategy is direct_byte
  6512  0162  0084               	movwf	4
  6513  0163  300C               	movlw	12
  6514  0164  0204               	subwf	4,w
  6515  0165  1803               	skipnc
  6516  0166  2958               	goto	i1l2152
  6517  0167  3183               	movlp	high i1S2914
  6518  0168  3504               	lslf	4,w
  6519  0169  3E5F               	addlw	low i1S2914
  6520  016A  0082               	movwf	2
  6521  016B  0008               	return
  6522  016C                     __end_of_I2C_ISR:	
  6523                           
  6524                           	psect	swtext1
  6525  035F                     __pswtext1:	
  6526  035F                     i1S2914:	
  6527  035F  3180  2846         	ljmp	i1l231
  6528  0361  3180  2871         	ljmp	i1l236
  6529  0363  3180  28C2         	ljmp	i1l2078
  6530  0365  3180  28E6         	ljmp	i1l253
  6531  0367  3181  2954         	ljmp	i1l2150
  6532  0369  3181  291A         	ljmp	i1l260
  6533  036B  3181  292E         	ljmp	i1l2132
  6534  036D  3181  2954         	ljmp	i1l2150
  6535  036F  3181  2935         	ljmp	i1l2136
  6536  0371  3181  2958         	ljmp	i1l2152
  6537  0373  3180  2878         	ljmp	i1l237
  6538  0375  3180  2899         	ljmp	i1l242
  6539                           
  6540                           	psect	text19
  6541  03C4                     __ptext19:	
  6542 ;; *************** function _I2C_Stop *****************
  6543 ;; Defined at:
  6544 ;;		line 581 in file "../projectswithmick/CuriositywithADXL345Port/i2c.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  completion_c    1    wreg     enum E11987
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;  completion_c    1    0[COMMON] enum E11987
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      void 
  6551 ;; Registers used:
  6552 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6562 ;;Total ram usage:        0 bytes
  6563 ;; Hardware stack levels used:    1
  6564 ;; This function calls:
  6565 ;;		Nothing
  6566 ;; This function is called by:
  6567 ;;		_I2C_ISR
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           
  6572                           ;psect for function _I2C_Stop
  6573  03C4                     _I2C_Stop:	
  6574                           
  6575                           ;i2c.c: 584: SSP1CON2bits.PEN = 1;
  6576                           
  6577                           ;incstack = 0
  6578                           ; Regs used in _I2C_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  6579  03C4  0024               	movlb	4	; select bank4
  6580  03C5  1516               	bsf	22,2	;volatile
  6581                           
  6582                           ;i2c.c: 591: }
  6583                           ;i2c.c: 594: i2c_state = S_MASTER_IDLE;
  6584  03C6  01F1               	clrf	_i2c_state
  6585  03C7  0008               	return
  6586  03C8                     __end_of_I2C_Stop:	
  6587                           
  6588                           	psect	text20
  6589  038C                     __ptext20:	
  6590 ;; *************** function _I2C_FunctionComplete *****************
  6591 ;; Defined at:
  6592 ;;		line 563 in file "../projectswithmick/CuriositywithADXL345Port/i2c.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;		None
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;		None
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      void 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6608 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6609 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6610 ;;Total ram usage:        1 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; This function calls:
  6613 ;;		Nothing
  6614 ;; This function is called by:
  6615 ;;		_I2C_ISR
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           
  6620                           ;psect for function _I2C_FunctionComplete
  6621  038C                     _I2C_FunctionComplete:	
  6622                           
  6623                           ;i2c.c: 567: p_i2c_trb_current++;
  6624                           
  6625                           ;incstack = 0
  6626                           ; Regs used in _I2C_FunctionComplete: [wreg+status,2+status,0]
  6627  038C  3004               	movlw	4
  6628  038D  00F6               	movwf	??_I2C_FunctionComplete
  6629  038E  0876               	movf	??_I2C_FunctionComplete,w
  6630  038F  07F0               	addwf	_p_i2c_trb_current,f
  6631                           
  6632                           ;i2c.c: 570: if(--i2c_trb_count == 0)
  6633  0390  3001               	movlw	1
  6634  0391  0020               	movlb	0	; select bank0
  6635  0392  02B6               	subwf	_i2c_trb_count,f
  6636  0393  1D03               	btfss	3,2
  6637  0394  2B9A               	goto	i1l272
  6638                           
  6639                           ;i2c.c: 571: {
  6640                           ;i2c.c: 572: i2c_state = S_MASTER_SEND_STOP;
  6641  0395  3004               	movlw	4
  6642  0396  00F6               	movwf	??_I2C_FunctionComplete
  6643  0397  0876               	movf	??_I2C_FunctionComplete,w
  6644  0398  00F1               	movwf	_i2c_state
  6645                           
  6646                           ;i2c.c: 573: }
  6647  0399  0008               	return
  6648  039A                     i1l272:	
  6649                           
  6650                           ;i2c.c: 574: else
  6651                           ;i2c.c: 575: {
  6652                           ;i2c.c: 576: i2c_state = S_MASTER_RESTART;
  6653  039A  01F1               	clrf	_i2c_state
  6654  039B  0AF1               	incf	_i2c_state,f
  6655  039C  0008               	return
  6656  039D                     __end_of_I2C_FunctionComplete:	
  6657                           
  6658                           	psect	text21
  6659  03C8                     __ptext21:	
  6660 ;; *************** function _I2C_BusCollisionISR *****************
  6661 ;; Defined at:
  6662 ;;		line 728 in file "../projectswithmick/CuriositywithADXL345Port/i2c.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;		None
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;		None
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1    wreg      void 
  6669 ;; Registers used:
  6670 ;;		None
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6680 ;;Total ram usage:        0 bytes
  6681 ;; Hardware stack levels used:    1
  6682 ;; This function calls:
  6683 ;;		Nothing
  6684 ;; This function is called by:
  6685 ;;		_INTERRUPT_InterruptManager
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689                           
  6690                           ;psect for function _I2C_BusCollisionISR
  6691  03C8                     _I2C_BusCollisionISR:	
  6692                           
  6693                           ;i2c.c: 731: PIR2bits.BCL1IF = 0;
  6694                           
  6695                           ;incstack = 0
  6696                           ; Regs used in _I2C_BusCollisionISR: []
  6697  03C8  0020               	movlb	0	; select bank0
  6698  03C9  1191               	bcf	17,3	;volatile
  6699  03CA  0008               	return
  6700  03CB                     __end_of_I2C_BusCollisionISR:	
  6701  007E                     btemp	set	126	;btemp
  6702  007E                     int$flags	set	126
  6703  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         41
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     34      72
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_tr_queue.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    SPI_Read@data	PTR unsigned char  size(1) Largest target is 7
		 -> ADXL345_GetXyz@readBuffer(COMMON[7]), ADXL345_GetRegisterValue@dataBuffer(BANK0[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_object.pTrTail.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    F12099.pbuffer	PTR unsigned char  size(1) Largest target is 0

    F12094.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    S378$pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c_current.pbuffer	PTR unsigned char  size(1) Largest target is 0

    S390$pTrFlag	PTR enum E11987 size(1) Largest target is 0

    p_i2c_current.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    S390$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    p_i2c_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    p_i2c_current	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S401$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    i2c_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    S401$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    i2c_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    I2C_Read@dataBuffer	PTR unsigned char  size(1) Largest target is 7
		 -> ADXL345_GetXyz@readBuffer(COMMON[7]), ADXL345_GetRegisterValue@registerValue(BANK0[1]), 

    I2C_Write@dataBuffer	PTR unsigned char  size(1) Largest target is 2
		 -> ADXL345_GetXyz@firstRegAddress(COMMON[1]), ADXL345_SetRegisterValue@dataBuffer(COMMON[2]), ADXL345_GetRegisterValue@registerAddress(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_ISR
    _I2C_ISR->_I2C_FunctionComplete

Critical Paths under _main in BANK0

    _main->_ADXL345_Init
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _ADXL345_Init->_ADXL345_GetRegisterValue
    _ADXL345_GetRegisterValue->_I2C_Read

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0    3057
                                             18 BANK0     16    16      0
                       _ADXL345_Init
                    _AccelReadStatus
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     108
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     108
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AccelReadStatus                                      4     3      1     204
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADXL345_Init                                         3     3      0    2718
                                             15 BANK0      3     3      0
           _ADXL345_GetRegisterValue
                           _I2C_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             7     1      6     231
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                            11     7      4     120
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (2) _ADXL345_GetRegisterValue                             6     6      0    2262
                                              9 BANK0      6     6      0
                           _I2C_Read
                          _I2C_Write
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             3     1      2     308
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            8     5      3     938
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             9     6      3     769
                                              0 BANK0      9     6      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              5 COMMON     1     1      0
                _I2C_BusCollisionISR
                            _I2C_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_ISR                                              4     4      0       0
                                              1 COMMON     4     4      0
               _I2C_FunctionComplete
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_FunctionComplete                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADXL345_Init
     _ADXL345_GetRegisterValue
       _I2C_Read
       _I2C_Write
       _SPI_Read
     _I2C_Init
     _SPI_Init
   _AccelReadStatus
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _I2C_BusCollisionISR
   _I2C_ISR
     _I2C_FunctionComplete
     _I2C_Stop
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      54      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      54      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Mar 29 16:20:30 2018

        __end_of_ADXL345_GetRegisterValue 02CD                                         pc 0002  
                   I2C_ISR@i2c_bytes_left 0033                               __CFG_CP$OFF 0000  
                      __size_of_I2C_Write 003E                                        l37 0289  
                         _timer0ReloadVal 0067                               __CFG_LVP$ON 0000  
                        SPI_Init@clockEdg 0048                                       l111 021D  
                                     l120 023F                                       l114 0224  
                                     l132 01CB                                       l141 01E6  
                                     l126 0251                                       l151 0213  
                                     l135 01D2                                       l144 0202  
                                     l145 0204                                       l146 0205  
                                     l501 017D                                       l512 0199  
                                     l513 0195                                       l505 0185  
                                     l522 01AE                                       l523 01AA  
                                     l532 01BC                                       l516 019A  
                                     l509 018D                                       l526 01AF  
                                     l519 01A2                                       l529 01B9  
                                     l498 0176                          SPI_Init@clockPol 0047  
                    I2C_Read@slaveAddress 0049                           __end_of_I2C_ISR 016C  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_IESO$ON 0000                          SPI_Init@lsbFirst 0076  
                            __CFG_ZCD$OFF 0000                     __size_of_ADXL345_Init 003D  
                                    l2500 0248                                      l2502 024C  
                                    l2530 01E0                                      l2532 020D  
                                    l2534 0211                                      l2552 02B3  
                                    l2554 02CA                                      l2646 026E  
                                    l2498 0232                                      l2696 0189  
                                    l2890 02E6                         SPI_Init@clockFreq 0043  
                           main@i2cStatus 0062                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                  ??_I2C_FunctionComplete 0076                               main@counter 0064  
                                    u2477 02F4                                      u2487 0171  
                                    _TMR0 0015                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                                    _main 02CD                          __end_of_I2C_Init 035F  
                        __end_of_I2C_Read 0216                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                        __end_of_I2C_Stop 03C8                             __CFG_BOREN$ON 0000  
                                    start 0029                             __CFG_MCLRE$ON 0000  
                 __end_of_AccelReadStatus 01C1                   __end_of_TMR0_Initialize 038C  
                           __CFG_PLLEN$ON 0000            ??_TMR0_DefaultInterruptHandler 0076  
          __size_of_OSCILLATOR_Initialize 0007             __end_of_OSCILLATOR_Initialize 03B8  
                                   ?_main 0076                             __CFG_WDTE$OFF 0000  
                           _i2c_trb_count 0036                                     i1l231 0046  
                                   i1l242 0099                                     i1l243 00A5  
                                   i1l260 011A                                     i1l236 0071  
                                   i1l261 0128                                     i1l253 00E6  
                                   i1l237 0078                                     i1l342 001C  
                                   i1l272 039A                                     i1l265 014D  
                                   i1l257 0106                                     i1l347 0024  
                                   i1l339 0010                              _ADXL345_Init 0254  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E         __size_of_TMR0_SetInterruptHandler 0006  
               ?_TMR0_SetInterruptHandler 0043                          __end_of_TMR0_ISR 0341  
                        __end_of_SPI_Init 03CC                          __end_of_SPI_Read 03CD  
                       __end_of_I2C_Write 0254                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                            SPI_Read@data 0043                                _i2c_object 0027  
                         __initialization 002B                        ADXL345_GetXyz@F101 0020  
                            __end_of_main 02F9                                 ??_I2C_ISR 0077  
                          __CFG_LPBOR$OFF 0000               ?_INTERRUPT_InterruptManager 0076  
                _ADXL345_GetRegisterValue 0291                                    ??_main 0055  
                  AccelReadStatus@DataAdd 0043                                    i1S2914 035F  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  _RB4PPS 0E9C                                    _RB6PPS 0E9E  
                                  i1l2120 010D                                    i1l2112 00F4  
                                  i1l2104 00E1                                    i1l2132 012E  
                                  i1l2150 0154                                    i1l2046 0065  
                                  i1l2152 0158                                    i1l2136 0135  
                                  i1l2064 0094                                    _ODCONA 028C  
                                  i1l2058 0084                                    _ODCONB 028D  
                                  _ODCONC 028E                                    i1l2148 0151  
                                  i1l2078 00C2                                    i1l2158 0161  
                                  i1l2098 00D7                                    u162_20 033E  
                                  _OSCCON 0099                                    _SSPBUF 0211  
                          __CFG_PWRTE$OFF 0000                            __CFG_STVREN$ON 0000  
                        ?_AccelReadStatus 0043                          ?_TMR0_Initialize 0076  
                      ADXL345_Init@status 0054                                 ?_I2C_Init 0043  
                               ?_I2C_Read 0043                                 ?_I2C_Stop 0076  
                   __end_of_TMR0_CallBack 03A8  TMR0_SetInterruptHandler@InterruptHandler 0043  
                         I2C_Write@status 0047                         _SYSTEM_Initialize 03A8  
                 __end_of__initialization 0038                        ?_SYSTEM_Initialize 0076  
                          __pcstackCOMMON 0076                       ??_SYSTEM_Initialize 0046  
                               ?_TMR0_ISR 0076                                 ?_SPI_Init 0043  
                               ?_SPI_Read 0043                                ??_I2C_Init 0047  
                          _OPTION_REGbits 0095                                ??_I2C_Read 0046  
                   TMR0_ISR@CountCallBack 002C                                ??_I2C_Stop 0076  
               __end_of_SYSTEM_Initialize 03B1                          I2C_Init@brgValue 004B  
                              __pbssBANK0 0020              __size_of_I2C_BusCollisionISR 0003  
                              __pmaintext 02CD                              I2C_Read@byte 004B  
        __end_of_TMR0_SetInterruptHandler 03C4                            I2C_Init@status 004D  
                              ??_TMR0_ISR 0076                           __CFG_PPS1WAY$ON 0000  
                              __pintentry 0004                        I2C_Read@dataBuffer 0043  
                                 _I2C_ISR 003C                            I2C_Read@status 0048  
                              ??_SPI_Init 0049                                ??_SPI_Read 0045  
                         __CFG_WDTCCS$SWC 0000                                   _OSCTUNE 0098  
                 I2C_Stop@completion_code 0076                                   _SSP1ADD 0212  
                                 _SSP1BUF 0211                   AccelReadStatus@TempData 0045  
                 AccelReadStatus@SlaveAdd 0046             __size_of_I2C_FunctionComplete 0011  
                               _I2C_Write 0216                         _fullResolutionSet 0072  
              ??_ADXL345_GetRegisterValue 004C                                   __ptext1 03A8  
                                 __ptext2 0377                                   __ptext3 03BE  
                                 __ptext4 02F9                                   __ptext5 03B1  
                                 __ptext6 016C                                   __ptext7 0254  
                                 __ptext8 03CB                                   __ptext9 0341  
                   _OSCILLATOR_Initialize 03B1                  ??_PIN_MANAGER_Initialize 0043  
              __size_of_SYSTEM_Initialize 0009                                   clrloop0 03B9  
                    end_of_initialization 0038                  ADXL345_Init@commProtocol 0053  
                    I2C_Write@acknowledge 0049                                ?_I2C_Write 0043  
                _TMR0_SetInterruptHandler 03BE                        I2C_ISR@i2c_address 0074  
                               _SSPDATPPS 0E21                                 _SSPCLKPPS 0E20  
                        I2C_Write@stopBit 0045                          __CFG_FOSC$INTOSC 0000  
                              main@AccelX 0056                                main@AccelY 0058  
                              main@AccelZ 005A                         __size_of_I2C_Init 001E  
                       __size_of_I2C_Read 0055                         __size_of_I2C_Stop 0004  
 ADXL345_GetRegisterValue@registerAddress 0050          I2C_ISR@i2c_10bit_address_restart 0032  
                     I2C_Init@pbFrequency 0047                         _p_i2c_trb_current 0070  
                   I2C_Write@slaveAddress 0048                              _i2c_tr_queue 0040  
                       __size_of_TMR0_ISR 0021                    ?_OSCILLATOR_Initialize 0076  
                       __size_of_SPI_Init 0001                         __size_of_SPI_Read 0001  
                     _I2C_BusCollisionISR 03C8                  __size_of_AccelReadStatus 0055  
                     start_initialization 002B                  __size_of_TMR0_Initialize 0015  
         __size_of_PIN_MANAGER_Initialize 0027                                 _i2c_state 0071  
                     SPI_Read@bytesNumber 0044                               ??_I2C_Write 0046  
                    ?_I2C_BusCollisionISR 0076                    __size_of_TMR0_CallBack 000B  
                                ?_I2C_ISR 0076                             ?_ADXL345_Init 0076  
                       I2C_Init@clockFreq 0043                             _selectedRange 0073  
                             __pbssCOMMON 0070                                 ___latbits 0002  
                           __pcstackBANK0 0043                         _communicationType 0037  
                   ??_I2C_BusCollisionISR 0076                     _TMR0_InterruptHandler 0065  
                               __pnvBANK0 0065                      I2C_Write@bytesNumber 0044  
                  _PIN_MANAGER_Initialize 02F9              __end_of_I2C_FunctionComplete 039D  
            ??_INTERRUPT_InterruptManager 007B                            ??_ADXL345_Init 0052  
                               __pswtext1 035F                                  _I2C_Init 0341  
                                _I2C_Read 01C1                           I2C_Read@stopBit 0045  
                                _I2C_Stop 03C4                       I2C_Read@acknowledge 004A  
                           _TMR0_CallBack 039D                             _p_i2c_current 0035  
                       ??_AccelReadStatus 0044                         ??_TMR0_Initialize 0045  
                                _LATCbits 010E                                 clear_ram0 03B8  
                     I2C_Write@dataBuffer 0043                                  _PIE1bits 0090  
                                _PIE2bits 0091       __size_of_INTERRUPT_InterruptManager 0025  
              ??_TMR0_SetInterruptHandler 0045                                  _PIR1bits 0010  
                                _PIR2bits 0011                      __CFG_WDTCPS$WDTCPS1F 0000  
                                _SSP1CON1 0215                                  _SSP1CON3 0217  
                                _TMR0_ISR 0320                       I2C_ISR@pi2c_buf_ptr 0034  
                                _SSP1STAT 0214                                  _SPI_Init 03CB  
                                _SPI_Read 03CC                          __size_of_I2C_ISR 0130  
                   SPI_Read@slaveDeviceId 0076         __size_of_ADXL345_GetRegisterValue 003C  
               ?_ADXL345_GetRegisterValue 0076                            ?_TMR0_CallBack 0076  
      ADXL345_GetRegisterValue@dataBuffer 004E               ADXL345_GetRegisterValue@F85 0030  
             ADXL345_SetRegisterValue@F90 002E                   ??_OSCILLATOR_Initialize 0043  
                           I2C_Write@byte 004A                                  __ptext10 0291  
                                __ptext11 03CC                                  __ptext20 038C  
                                __ptext12 0216                                  __ptext21 03C8  
                                __ptext13 01C1                                  __ptext15 0320  
                                __ptext16 039D                                  __ptext17 03CD  
                                __ptext18 003C                                  __ptext19 03C4  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
                           __size_of_main 002C                      _I2C_FunctionComplete 038C  
                    __end_of_ADXL345_Init 0291      __end_of_TMR0_DefaultInterruptHandler 03CE  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 03CD  
                    __CFG_WDTCWS$WDTCWSSW 0000                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0029                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 0214                                _INTCONbits 000B  
                         ??_TMR0_CallBack 0076                       I2C_Read@bytesNumber 0044  
                                intlevel1 0000                     ?_I2C_FunctionComplete 0076  
                 ?_PIN_MANAGER_Initialize 0076                     I2C_MasterRead@trBlock 0038  
                       __CFG_CLKOUTEN$OFF 0000             ?_TMR0_DefaultInterruptHandler 0076  
                         main@AccelStatus 0063     ADXL345_GetRegisterValue@registerValue 0051  
                  I2C_MasterWrite@trBlock 003C                                _OPTION_REG 0095  
                         _AccelReadStatus 016C                           _TMR0_Initialize 0377  
                          main@AccelXtemp 005C                            main@AccelYtemp 005E  
                          main@AccelZtemp 0060               __end_of_I2C_BusCollisionISR 03CB  
          __end_of_PIN_MANAGER_Initialize 0320  
