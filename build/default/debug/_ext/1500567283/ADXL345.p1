Version 3.2 HI-TECH Software Intermediate Code
"79 ../projectswithmick/CuriositywithADXL345Port/Communication.h
[v _SPI_Read `(uc ~T0 @X0 0 ef3`uc`*uc`uc ]
"55
[v _I2C_Write `(uc ~T0 @X0 0 ef4`uc`*uc`uc`uc ]
"61
[v _I2C_Read `(uc ~T0 @X0 0 ef4`uc`*uc`uc`uc ]
"84
[v _SPI_Write `(uc ~T0 @X0 0 ef3`uc`*uc`uc ]
"67
[v _SPI_Init `(uc ~T0 @X0 0 ef4`uc`ul`uc`uc ]
"52
[v _I2C_Init `(uc ~T0 @X0 0 ef1`ul ]
[; ;ADXL345.h: 183: unsigned char ADXL345_GetRegisterValue(unsigned char registerAddress);
[; ;ADXL345.h: 186: void ADXL345_SetRegisterValue(unsigned char registerAddress,
[; ;ADXL345.h: 187: unsigned char registerValue);
[; ;ADXL345.h: 190: char ADXL345_Init(char commProtocol);
[; ;ADXL345.h: 193: void ADXL345_SetPowerMode(unsigned char pwrMode);
[; ;ADXL345.h: 196: void ADXL345_GetXyz(short* x,
[; ;ADXL345.h: 197: short* y,
[; ;ADXL345.h: 198: short* z);
[; ;ADXL345.h: 201: void ADXL345_GetGxyz(float* x,
[; ;ADXL345.h: 202: float* y,
[; ;ADXL345.h: 203: float* z);
[; ;ADXL345.h: 206: void ADXL345_SetTapDetection(unsigned char tapType,
[; ;ADXL345.h: 207: unsigned char tapAxes,
[; ;ADXL345.h: 208: unsigned char tapDur,
[; ;ADXL345.h: 209: unsigned char tapLatent,
[; ;ADXL345.h: 210: unsigned char tapWindow,
[; ;ADXL345.h: 211: unsigned char tapThresh,
[; ;ADXL345.h: 212: unsigned char tapInt);
[; ;ADXL345.h: 215: void ADXL345_SetActivityDetection(unsigned char actOnOff,
[; ;ADXL345.h: 216: unsigned char actAxes,
[; ;ADXL345.h: 217: unsigned char actAcDc,
[; ;ADXL345.h: 218: unsigned char actThresh,
[; ;ADXL345.h: 219: unsigned char actInt);
[; ;ADXL345.h: 222: void ADXL345_SetInactivityDetection(unsigned char inactOnOff,
[; ;ADXL345.h: 223: unsigned char inactAxes,
[; ;ADXL345.h: 224: unsigned char inactAcDc,
[; ;ADXL345.h: 225: unsigned char inactThresh,
[; ;ADXL345.h: 226: unsigned char inactTime,
[; ;ADXL345.h: 227: unsigned char inactInt);
[; ;ADXL345.h: 230: void ADXL345_SetFreeFallDetection(unsigned char ffOnOff,
[; ;ADXL345.h: 231: unsigned char ffThresh,
[; ;ADXL345.h: 232: unsigned char ffTime,
[; ;ADXL345.h: 233: unsigned char ffInt);
[; ;ADXL345.h: 236: void ADXL345_SetOffset(unsigned char xOffset,
[; ;ADXL345.h: 237: unsigned char yOffset,
[; ;ADXL345.h: 238: unsigned char zOffset);
[; ;ADXL345.h: 241: void ADXL345_SetRangeResolution(unsigned char gRange, unsigned char fullRes);
[; ;Communication.h: 52: unsigned char I2C_Init(unsigned long clockFreq);
[; ;Communication.h: 55: unsigned char I2C_Write(unsigned char slaveAddress,
[; ;Communication.h: 56: unsigned char* dataBuffer,
[; ;Communication.h: 57: unsigned char bytesNumber,
[; ;Communication.h: 58: unsigned char stopBit);
[; ;Communication.h: 61: unsigned char I2C_Read(unsigned char slaveAddress,
[; ;Communication.h: 62: unsigned char* dataBuffer,
[; ;Communication.h: 63: unsigned char bytesNumber,
[; ;Communication.h: 64: unsigned char stopBit);
[; ;Communication.h: 67: unsigned char SPI_Init(unsigned char lsbFirst,
[; ;Communication.h: 68: unsigned long clockFreq,
[; ;Communication.h: 69: unsigned char clockPol,
[; ;Communication.h: 70: unsigned char clockEdg);
[; ;Communication.h: 73: unsigned char SPI_Init(unsigned char lsbFirst,
[; ;Communication.h: 74: unsigned long clockFreq,
[; ;Communication.h: 75: unsigned char clockPol,
[; ;Communication.h: 76: unsigned char clockEdg);
[; ;Communication.h: 79: unsigned char SPI_Read(unsigned char slaveDeviceId,
[; ;Communication.h: 80: unsigned char* data,
[; ;Communication.h: 81: unsigned char bytesNumber);
[; ;Communication.h: 84: unsigned char SPI_Write(unsigned char slaveDeviceId,
[; ;Communication.h: 85: unsigned char* data,
[; ;Communication.h: 86: unsigned char bytesNumber);
"52 ../projectswithmick/CuriositywithADXL345Port/ADXL345.c
[v _communicationType `uc ~T0 @X0 1 e ]
[i _communicationType
-> -> 0 `i `uc
]
[; ;ADXL345.c: 52: char communicationType = 0;
"53
[v _selectedRange `uc ~T0 @X0 1 e ]
[i _selectedRange
-> -> 0 `i `uc
]
[; ;ADXL345.c: 53: char selectedRange = 0;
"54
[v _fullResolutionSet `uc ~T0 @X0 1 e ]
[i _fullResolutionSet
-> -> 0 `i `uc
]
[; ;ADXL345.c: 54: char fullResolutionSet = 0;
"67
[v _ADXL345_GetRegisterValue `(uc ~T0 @X0 1 ef1`uc ]
"68
{
[; ;ADXL345.c: 67: unsigned char ADXL345_GetRegisterValue(unsigned char registerAddress)
[; ;ADXL345.c: 68: {
[e :U _ADXL345_GetRegisterValue ]
"67
[v _registerAddress `uc ~T0 @X0 1 r1 ]
"68
[f ]
[v F85 `uc ~T0 @X0 -> 2 `i s ]
[i F85
:U ..
"69
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
[v _dataBuffer `uc ~T0 @X0 -> 2 `i a ]
[; ;ADXL345.c: 69: unsigned char dataBuffer[2] = {0, 0};
[e = _dataBuffer F85 ]
"70
[v _registerValue `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 70: unsigned char registerValue = 0;
[e = _registerValue -> -> 0 `i `uc ]
[; ;ADXL345.c: 72: if(communicationType == 0)
"72
[e $ ! == -> _communicationType `i -> 0 `i 2  ]
[; ;ADXL345.c: 73: {
"73
{
[; ;ADXL345.c: 74: dataBuffer[0] = (1 << 7) | registerAddress;
"74
[e = *U + &U _dataBuffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _dataBuffer `ui `ux -> | << -> 1 `i -> 7 `i -> _registerAddress `i `uc ]
[; ;ADXL345.c: 75: dataBuffer[1] = 0;
"75
[e = *U + &U _dataBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _dataBuffer `ui `ux -> -> 0 `i `uc ]
[; ;ADXL345.c: 76: SPI_Read(1, dataBuffer, 2);
"76
[e ( _SPI_Read (3 , , -> -> 1 `i `uc &U _dataBuffer -> -> 2 `i `uc ]
[; ;ADXL345.c: 77: registerValue = dataBuffer[1];
"77
[e = _registerValue *U + &U _dataBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _dataBuffer `ui `ux ]
"78
}
[; ;ADXL345.c: 78: }
[e $U 3  ]
"79
[e :U 2 ]
[; ;ADXL345.c: 79: else
[; ;ADXL345.c: 80: {
"80
{
[; ;ADXL345.c: 81: I2C_Write(0x1D,
[; ;ADXL345.c: 82: &registerAddress,
[; ;ADXL345.c: 83: 1,
[; ;ADXL345.c: 84: 0);
"84
[e ( _I2C_Write (4 , , , -> -> 29 `i `uc &U _registerAddress -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;ADXL345.c: 85: I2C_Read(0x1D,
[; ;ADXL345.c: 86: &registerValue,
[; ;ADXL345.c: 87: 1,
[; ;ADXL345.c: 88: 1);
"88
[e ( _I2C_Read (4 , , , -> -> 29 `i `uc &U _registerValue -> -> 1 `i `uc -> -> 1 `i `uc ]
"89
}
[e :U 3 ]
[; ;ADXL345.c: 89: }
[; ;ADXL345.c: 91: return registerValue;
"91
[e ) _registerValue ]
[e $UE 1  ]
[; ;ADXL345.c: 92: }
"92
[e :UE 1 ]
}
"102
[v _ADXL345_SetRegisterValue `(v ~T0 @X0 1 ef2`uc`uc ]
"104
{
[; ;ADXL345.c: 102: void ADXL345_SetRegisterValue(unsigned char registerAddress,
[; ;ADXL345.c: 103: unsigned char registerValue)
[; ;ADXL345.c: 104: {
[e :U _ADXL345_SetRegisterValue ]
"102
[v _registerAddress `uc ~T0 @X0 1 r1 ]
"103
[v _registerValue `uc ~T0 @X0 1 r2 ]
"104
[f ]
[v F90 `uc ~T0 @X0 -> 2 `i s ]
[i F90
:U ..
"105
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
[v _dataBuffer `uc ~T0 @X0 -> 2 `i a ]
[; ;ADXL345.c: 105: unsigned char dataBuffer[2] = {0, 0};
[e = _dataBuffer F90 ]
[; ;ADXL345.c: 107: if(communicationType == 0)
"107
[e $ ! == -> _communicationType `i -> 0 `i 5  ]
[; ;ADXL345.c: 108: {
"108
{
[; ;ADXL345.c: 109: dataBuffer[0] = (0 << 7) | registerAddress;
"109
[e = *U + &U _dataBuffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _dataBuffer `ui `ux -> | << -> 0 `i -> 7 `i -> _registerAddress `i `uc ]
[; ;ADXL345.c: 110: dataBuffer[1] = registerValue;
"110
[e = *U + &U _dataBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _dataBuffer `ui `ux _registerValue ]
[; ;ADXL345.c: 111: SPI_Write(1, dataBuffer, 2);
"111
[e ( _SPI_Write (3 , , -> -> 1 `i `uc &U _dataBuffer -> -> 2 `i `uc ]
"112
}
[; ;ADXL345.c: 112: }
[e $U 6  ]
"113
[e :U 5 ]
[; ;ADXL345.c: 113: else
[; ;ADXL345.c: 114: {
"114
{
[; ;ADXL345.c: 115: dataBuffer[0] = registerAddress;
"115
[e = *U + &U _dataBuffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _dataBuffer `ui `ux _registerAddress ]
[; ;ADXL345.c: 116: dataBuffer[1] = registerValue;
"116
[e = *U + &U _dataBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _dataBuffer `ui `ux _registerValue ]
[; ;ADXL345.c: 117: I2C_Write(0x1D, dataBuffer, 2, 1);
"117
[e ( _I2C_Write (4 , , , -> -> 29 `i `uc &U _dataBuffer -> -> 2 `i `uc -> -> 1 `i `uc ]
"118
}
[e :U 6 ]
[; ;ADXL345.c: 118: }
[; ;ADXL345.c: 119: }
"119
[e :UE 4 ]
}
"135
[v _ADXL345_Init `(uc ~T0 @X0 1 ef1`uc ]
"136
{
[; ;ADXL345.c: 135: char ADXL345_Init(char commProtocol)
[; ;ADXL345.c: 136: {
[e :U _ADXL345_Init ]
"135
[v _commProtocol `uc ~T0 @X0 1 r1 ]
"136
[f ]
"137
[v _status `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 137: unsigned char status = 0;
[e = _status -> -> 0 `i `uc ]
[; ;ADXL345.c: 139: communicationType = commProtocol;
"139
[e = _communicationType _commProtocol ]
[; ;ADXL345.c: 140: if(commProtocol == 0)
"140
[e $ ! == -> _commProtocol `i -> 0 `i 8  ]
[; ;ADXL345.c: 141: {
"141
{
[; ;ADXL345.c: 142: status = SPI_Init(0,
[; ;ADXL345.c: 143: 1000000,
[; ;ADXL345.c: 144: 1,
[; ;ADXL345.c: 145: 0);
"145
[e = _status ( _SPI_Init (4 , , , -> -> 0 `i `uc -> -> 1000000 `l `ul -> -> 1 `i `uc -> -> 0 `i `uc ]
"146
}
[; ;ADXL345.c: 146: }
[e $U 9  ]
"147
[e :U 8 ]
[; ;ADXL345.c: 147: else
[; ;ADXL345.c: 148: {
"148
{
[; ;ADXL345.c: 149: status = I2C_Init(100000);
"149
[e = _status ( _I2C_Init (1 -> -> 100000 `l `ul ]
"150
}
[e :U 9 ]
[; ;ADXL345.c: 150: }
[; ;ADXL345.c: 151: if(ADXL345_GetRegisterValue(0x00) != 0xE5)
"151
[e $ ! != -> ( _ADXL345_GetRegisterValue (1 -> -> 0 `i `uc `i -> 229 `i 10  ]
[; ;ADXL345.c: 152: {
"152
{
[; ;ADXL345.c: 153: status = -1;
"153
[e = _status -> -U -> 1 `i `uc ]
"154
}
[e :U 10 ]
[; ;ADXL345.c: 154: }
[; ;ADXL345.c: 155: selectedRange = 2;
"155
[e = _selectedRange -> -> 2 `i `uc ]
[; ;ADXL345.c: 156: fullResolutionSet = 0;
"156
[e = _fullResolutionSet -> -> 0 `i `uc ]
[; ;ADXL345.c: 158: return status;
"158
[e ) _status ]
[e $UE 7  ]
[; ;ADXL345.c: 159: }
"159
[e :UE 7 ]
}
"170
[v _ADXL345_SetPowerMode `(v ~T0 @X0 1 ef1`uc ]
"171
{
[; ;ADXL345.c: 170: void ADXL345_SetPowerMode(unsigned char pwrMode)
[; ;ADXL345.c: 171: {
[e :U _ADXL345_SetPowerMode ]
"170
[v _pwrMode `uc ~T0 @X0 1 r1 ]
"171
[f ]
"172
[v _oldPowerCtl `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 172: unsigned char oldPowerCtl = 0;
[e = _oldPowerCtl -> -> 0 `i `uc ]
"173
[v _newPowerCtl `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 173: unsigned char newPowerCtl = 0;
[e = _newPowerCtl -> -> 0 `i `uc ]
[; ;ADXL345.c: 175: oldPowerCtl = ADXL345_GetRegisterValue(0x2D);
"175
[e = _oldPowerCtl ( _ADXL345_GetRegisterValue (1 -> -> 45 `i `uc ]
[; ;ADXL345.c: 176: newPowerCtl = oldPowerCtl & ~(1 << 3);
"176
[e = _newPowerCtl -> & -> _oldPowerCtl `i ~ << -> 1 `i -> 3 `i `uc ]
[; ;ADXL345.c: 177: newPowerCtl = newPowerCtl | (pwrMode * (1 << 3));
"177
[e = _newPowerCtl -> | -> _newPowerCtl `i * -> _pwrMode `i << -> 1 `i -> 3 `i `uc ]
[; ;ADXL345.c: 178: ADXL345_SetRegisterValue(0x2D, newPowerCtl);
"178
[e ( _ADXL345_SetRegisterValue (2 , -> -> 45 `i `uc _newPowerCtl ]
[; ;ADXL345.c: 179: }
"179
[e :UE 11 ]
}
"190
[v _ADXL345_GetXyz `(v ~T0 @X0 1 ef3`*s`*s`*s ]
"193
{
[; ;ADXL345.c: 190: void ADXL345_GetXyz(short* x,
[; ;ADXL345.c: 191: short* y,
[; ;ADXL345.c: 192: short* z)
[; ;ADXL345.c: 193: {
[e :U _ADXL345_GetXyz ]
"190
[v _x `*s ~T0 @X0 1 r1 ]
"191
[v _y `*s ~T0 @X0 1 r2 ]
"192
[v _z `*s ~T0 @X0 1 r3 ]
"193
[f ]
"194
[v _firstRegAddress `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 194: unsigned char firstRegAddress = 0x32;
[e = _firstRegAddress -> -> 50 `i `uc ]
[v F101 `uc ~T0 @X0 -> 7 `i s ]
[i F101
:U ..
"195
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
[v _readBuffer `uc ~T0 @X0 -> 7 `i a ]
[; ;ADXL345.c: 195: unsigned char readBuffer[7] = {0, 0, 0, 0, 0, 0, 0};
[e = _readBuffer F101 ]
[; ;ADXL345.c: 197: if(communicationType == 0)
"197
[e $ ! == -> _communicationType `i -> 0 `i 13  ]
[; ;ADXL345.c: 198: {
"198
{
[; ;ADXL345.c: 199: readBuffer[0] = (1 << 7) |
[; ;ADXL345.c: 200: (1 << 6) |
[; ;ADXL345.c: 201: firstRegAddress;
"201
[e = *U + &U _readBuffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _readBuffer `ui `ux -> | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i -> _firstRegAddress `i `uc ]
[; ;ADXL345.c: 202: SPI_Read(1, readBuffer, 7);
"202
[e ( _SPI_Read (3 , , -> -> 1 `i `uc &U _readBuffer -> -> 7 `i `uc ]
[; ;ADXL345.c: 204: *x = ((short)readBuffer[2] << 8) + readBuffer[1];
"204
[e = *U _x -> + << -> -> *U + &U _readBuffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _readBuffer `ui `ux `s `i -> 8 `i -> *U + &U _readBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _readBuffer `ui `ux `i `s ]
[; ;ADXL345.c: 206: *y = ((short)readBuffer[4] << 8) + readBuffer[3];
"206
[e = *U _y -> + << -> -> *U + &U _readBuffer * -> -> -> 4 `i `ui `ux -> -> # *U &U _readBuffer `ui `ux `s `i -> 8 `i -> *U + &U _readBuffer * -> -> -> 3 `i `ui `ux -> -> # *U &U _readBuffer `ui `ux `i `s ]
[; ;ADXL345.c: 208: *z = ((short)readBuffer[6] << 8) + readBuffer[5];
"208
[e = *U _z -> + << -> -> *U + &U _readBuffer * -> -> -> 6 `i `ui `ux -> -> # *U &U _readBuffer `ui `ux `s `i -> 8 `i -> *U + &U _readBuffer * -> -> -> 5 `i `ui `ux -> -> # *U &U _readBuffer `ui `ux `i `s ]
"209
}
[; ;ADXL345.c: 209: }
[e $U 14  ]
"210
[e :U 13 ]
[; ;ADXL345.c: 210: else
[; ;ADXL345.c: 211: {
"211
{
[; ;ADXL345.c: 212: I2C_Write(0x1D,
[; ;ADXL345.c: 213: &firstRegAddress,
[; ;ADXL345.c: 214: 1,
[; ;ADXL345.c: 215: 0);
"215
[e ( _I2C_Write (4 , , , -> -> 29 `i `uc &U _firstRegAddress -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;ADXL345.c: 216: I2C_Read(0x1D,
[; ;ADXL345.c: 217: readBuffer,
[; ;ADXL345.c: 218: 6,
[; ;ADXL345.c: 219: 1);
"219
[e ( _I2C_Read (4 , , , -> -> 29 `i `uc &U _readBuffer -> -> 6 `i `uc -> -> 1 `i `uc ]
[; ;ADXL345.c: 221: *x = ((short)readBuffer[1] << 8) + readBuffer[0];
"221
[e = *U _x -> + << -> -> *U + &U _readBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _readBuffer `ui `ux `s `i -> 8 `i -> *U + &U _readBuffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _readBuffer `ui `ux `i `s ]
[; ;ADXL345.c: 223: *y = ((short)readBuffer[3] << 8) + readBuffer[2];
"223
[e = *U _y -> + << -> -> *U + &U _readBuffer * -> -> -> 3 `i `ui `ux -> -> # *U &U _readBuffer `ui `ux `s `i -> 8 `i -> *U + &U _readBuffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _readBuffer `ui `ux `i `s ]
[; ;ADXL345.c: 225: *z = ((short)readBuffer[5] << 8) + readBuffer[4];
"225
[e = *U _z -> + << -> -> *U + &U _readBuffer * -> -> -> 5 `i `ui `ux -> -> # *U &U _readBuffer `ui `ux `s `i -> 8 `i -> *U + &U _readBuffer * -> -> -> 4 `i `ui `ux -> -> # *U &U _readBuffer `ui `ux `i `s ]
"226
}
[e :U 14 ]
[; ;ADXL345.c: 226: }
[; ;ADXL345.c: 227: }
"227
[e :UE 12 ]
}
"238
[v _ADXL345_GetGxyz `(v ~T0 @X0 1 ef3`*f`*f`*f ]
"241
{
[; ;ADXL345.c: 238: void ADXL345_GetGxyz(float* x,
[; ;ADXL345.c: 239: float* y,
[; ;ADXL345.c: 240: float* z)
[; ;ADXL345.c: 241: {
[e :U _ADXL345_GetGxyz ]
"238
[v _x `*f ~T0 @X0 1 r1 ]
"239
[v _y `*f ~T0 @X0 1 r2 ]
"240
[v _z `*f ~T0 @X0 1 r3 ]
"241
[f ]
"242
[v _xData `s ~T0 @X0 1 a ]
[; ;ADXL345.c: 242: short xData = 0;
[e = _xData -> -> 0 `i `s ]
"243
[v _yData `s ~T0 @X0 1 a ]
[; ;ADXL345.c: 243: short yData = 0;
[e = _yData -> -> 0 `i `s ]
"244
[v _zData `s ~T0 @X0 1 a ]
[; ;ADXL345.c: 244: short zData = 0;
[e = _zData -> -> 0 `i `s ]
[; ;ADXL345.c: 246: ADXL345_GetXyz(&xData, &yData, &zData);
"246
[e ( _ADXL345_GetXyz (3 , , &U _xData &U _yData &U _zData ]
[; ;ADXL345.c: 247: *x = (float)(fullResolutionSet ? (xData * 0.0039) :
[; ;ADXL345.c: 248: (xData * 0.0039 * (selectedRange >> 1)));
"248
[e = *U _x -> ? != -> _fullResolutionSet `i -> -> -> 0 `i `uc `i : * -> _xData `d .0.0039 * * -> _xData `d .0.0039 -> >> -> _selectedRange `i -> 1 `i `d `f ]
[; ;ADXL345.c: 249: *y = (float)(fullResolutionSet ? (yData * 0.0039) :
[; ;ADXL345.c: 250: (yData * 0.0039 * (selectedRange >> 1)));
"250
[e = *U _y -> ? != -> _fullResolutionSet `i -> -> -> 0 `i `uc `i : * -> _yData `d .0.0039 * * -> _yData `d .0.0039 -> >> -> _selectedRange `i -> 1 `i `d `f ]
[; ;ADXL345.c: 251: *z = (float)(fullResolutionSet ? (zData * 0.0039) :
[; ;ADXL345.c: 252: (zData * 0.0039 * (selectedRange >> 1)));
"252
[e = *U _z -> ? != -> _fullResolutionSet `i -> -> -> 0 `i `uc `i : * -> _zData `d .0.0039 * * -> _zData `d .0.0039 -> >> -> _selectedRange `i -> 1 `i `d `f ]
[; ;ADXL345.c: 253: }
"253
[e :UE 15 ]
}
"282
[v _ADXL345_SetTapDetection `(v ~T0 @X0 1 ef7`uc`uc`uc`uc`uc`uc`uc ]
"289
{
[; ;ADXL345.c: 282: void ADXL345_SetTapDetection(unsigned char tapType,
[; ;ADXL345.c: 283: unsigned char tapAxes,
[; ;ADXL345.c: 284: unsigned char tapDur,
[; ;ADXL345.c: 285: unsigned char tapLatent,
[; ;ADXL345.c: 286: unsigned char tapWindow,
[; ;ADXL345.c: 287: unsigned char tapThresh,
[; ;ADXL345.c: 288: unsigned char tapInt)
[; ;ADXL345.c: 289: {
[e :U _ADXL345_SetTapDetection ]
"282
[v _tapType `uc ~T0 @X0 1 r1 ]
"283
[v _tapAxes `uc ~T0 @X0 1 r2 ]
"284
[v _tapDur `uc ~T0 @X0 1 r3 ]
"285
[v _tapLatent `uc ~T0 @X0 1 r4 ]
"286
[v _tapWindow `uc ~T0 @X0 1 r5 ]
"287
[v _tapThresh `uc ~T0 @X0 1 r6 ]
"288
[v _tapInt `uc ~T0 @X0 1 r7 ]
"289
[f ]
"290
[v _oldTapAxes `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 290: unsigned char oldTapAxes = 0;
[e = _oldTapAxes -> -> 0 `i `uc ]
"291
[v _newTapAxes `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 291: unsigned char newTapAxes = 0;
[e = _newTapAxes -> -> 0 `i `uc ]
"292
[v _oldIntMap `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 292: unsigned char oldIntMap = 0;
[e = _oldIntMap -> -> 0 `i `uc ]
"293
[v _newIntMap `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 293: unsigned char newIntMap = 0;
[e = _newIntMap -> -> 0 `i `uc ]
"294
[v _oldIntEnable `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 294: unsigned char oldIntEnable = 0;
[e = _oldIntEnable -> -> 0 `i `uc ]
"295
[v _newIntEnable `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 295: unsigned char newIntEnable = 0;
[e = _newIntEnable -> -> 0 `i `uc ]
[; ;ADXL345.c: 297: oldTapAxes = ADXL345_GetRegisterValue(0x2A);
"297
[e = _oldTapAxes ( _ADXL345_GetRegisterValue (1 -> -> 42 `i `uc ]
[; ;ADXL345.c: 298: newTapAxes = oldTapAxes & ~((1 << 2) |
[; ;ADXL345.c: 299: (1 << 1) |
[; ;ADXL345.c: 300: (1 << 0));
"300
[e = _newTapAxes -> & -> _oldTapAxes `i ~ | | << -> 1 `i -> 2 `i << -> 1 `i -> 1 `i << -> 1 `i -> 0 `i `uc ]
[; ;ADXL345.c: 301: newTapAxes = newTapAxes | tapAxes;
"301
[e = _newTapAxes -> | -> _newTapAxes `i -> _tapAxes `i `uc ]
[; ;ADXL345.c: 302: ADXL345_SetRegisterValue(0x2A, newTapAxes);
"302
[e ( _ADXL345_SetRegisterValue (2 , -> -> 42 `i `uc _newTapAxes ]
[; ;ADXL345.c: 303: ADXL345_SetRegisterValue(0x21, tapDur);
"303
[e ( _ADXL345_SetRegisterValue (2 , -> -> 33 `i `uc _tapDur ]
[; ;ADXL345.c: 304: ADXL345_SetRegisterValue(0x22, tapLatent);
"304
[e ( _ADXL345_SetRegisterValue (2 , -> -> 34 `i `uc _tapLatent ]
[; ;ADXL345.c: 305: ADXL345_SetRegisterValue(0x23, tapWindow);
"305
[e ( _ADXL345_SetRegisterValue (2 , -> -> 35 `i `uc _tapWindow ]
[; ;ADXL345.c: 306: ADXL345_SetRegisterValue(0x1D, tapThresh);
"306
[e ( _ADXL345_SetRegisterValue (2 , -> -> 29 `i `uc _tapThresh ]
[; ;ADXL345.c: 307: oldIntMap = ADXL345_GetRegisterValue(0x2F);
"307
[e = _oldIntMap ( _ADXL345_GetRegisterValue (1 -> -> 47 `i `uc ]
[; ;ADXL345.c: 308: newIntMap = oldIntMap & ~((1 << 6) | (1 << 5));
"308
[e = _newIntMap -> & -> _oldIntMap `i ~ | << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i `uc ]
[; ;ADXL345.c: 309: newIntMap = newIntMap | tapInt;
"309
[e = _newIntMap -> | -> _newIntMap `i -> _tapInt `i `uc ]
[; ;ADXL345.c: 310: ADXL345_SetRegisterValue(0x2F, newIntMap);
"310
[e ( _ADXL345_SetRegisterValue (2 , -> -> 47 `i `uc _newIntMap ]
[; ;ADXL345.c: 311: oldIntEnable = ADXL345_GetRegisterValue(0x2E);
"311
[e = _oldIntEnable ( _ADXL345_GetRegisterValue (1 -> -> 46 `i `uc ]
[; ;ADXL345.c: 312: newIntEnable = oldIntEnable & ~((1 << 6) | (1 << 5));
"312
[e = _newIntEnable -> & -> _oldIntEnable `i ~ | << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i `uc ]
[; ;ADXL345.c: 313: newIntEnable = newIntEnable | tapType;
"313
[e = _newIntEnable -> | -> _newIntEnable `i -> _tapType `i `uc ]
[; ;ADXL345.c: 314: ADXL345_SetRegisterValue(0x2E, newIntEnable);
"314
[e ( _ADXL345_SetRegisterValue (2 , -> -> 46 `i `uc _newIntEnable ]
[; ;ADXL345.c: 315: }
"315
[e :UE 16 ]
}
"339
[v _ADXL345_SetActivityDetection `(v ~T0 @X0 1 ef5`uc`uc`uc`uc`uc ]
"344
{
[; ;ADXL345.c: 339: void ADXL345_SetActivityDetection(unsigned char actOnOff,
[; ;ADXL345.c: 340: unsigned char actAxes,
[; ;ADXL345.c: 341: unsigned char actAcDc,
[; ;ADXL345.c: 342: unsigned char actThresh,
[; ;ADXL345.c: 343: unsigned char actInt)
[; ;ADXL345.c: 344: {
[e :U _ADXL345_SetActivityDetection ]
"339
[v _actOnOff `uc ~T0 @X0 1 r1 ]
"340
[v _actAxes `uc ~T0 @X0 1 r2 ]
"341
[v _actAcDc `uc ~T0 @X0 1 r3 ]
"342
[v _actThresh `uc ~T0 @X0 1 r4 ]
"343
[v _actInt `uc ~T0 @X0 1 r5 ]
"344
[f ]
"345
[v _oldActInactCtl `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 345: unsigned char oldActInactCtl = 0;
[e = _oldActInactCtl -> -> 0 `i `uc ]
"346
[v _newActInactCtl `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 346: unsigned char newActInactCtl = 0;
[e = _newActInactCtl -> -> 0 `i `uc ]
"347
[v _oldIntMap `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 347: unsigned char oldIntMap = 0;
[e = _oldIntMap -> -> 0 `i `uc ]
"348
[v _newIntMap `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 348: unsigned char newIntMap = 0;
[e = _newIntMap -> -> 0 `i `uc ]
"349
[v _oldIntEnable `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 349: unsigned char oldIntEnable = 0;
[e = _oldIntEnable -> -> 0 `i `uc ]
"350
[v _newIntEnable `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 350: unsigned char newIntEnable = 0;
[e = _newIntEnable -> -> 0 `i `uc ]
[; ;ADXL345.c: 352: oldActInactCtl = ADXL345_GetRegisterValue(0x2E);
"352
[e = _oldActInactCtl ( _ADXL345_GetRegisterValue (1 -> -> 46 `i `uc ]
[; ;ADXL345.c: 353: newActInactCtl = oldActInactCtl & ~((1 << 7) |
[; ;ADXL345.c: 354: (1 << 6) |
[; ;ADXL345.c: 355: (1 << 5) |
[; ;ADXL345.c: 356: (1 << 4));
"356
[e = _newActInactCtl -> & -> _oldActInactCtl `i ~ | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i `uc ]
[; ;ADXL345.c: 357: newActInactCtl = newActInactCtl | (actAcDc | actAxes);
"357
[e = _newActInactCtl -> | -> _newActInactCtl `i | -> _actAcDc `i -> _actAxes `i `uc ]
[; ;ADXL345.c: 358: ADXL345_SetRegisterValue(0x27, newActInactCtl);
"358
[e ( _ADXL345_SetRegisterValue (2 , -> -> 39 `i `uc _newActInactCtl ]
[; ;ADXL345.c: 359: ADXL345_SetRegisterValue(0x24, actThresh);
"359
[e ( _ADXL345_SetRegisterValue (2 , -> -> 36 `i `uc _actThresh ]
[; ;ADXL345.c: 360: oldIntMap = ADXL345_GetRegisterValue(0x2F);
"360
[e = _oldIntMap ( _ADXL345_GetRegisterValue (1 -> -> 47 `i `uc ]
[; ;ADXL345.c: 361: newIntMap = oldIntMap & ~((1 << 4));
"361
[e = _newIntMap -> & -> _oldIntMap `i ~ << -> 1 `i -> 4 `i `uc ]
[; ;ADXL345.c: 362: newIntMap = newIntMap | actInt;
"362
[e = _newIntMap -> | -> _newIntMap `i -> _actInt `i `uc ]
[; ;ADXL345.c: 363: ADXL345_SetRegisterValue(0x2F, newIntMap);
"363
[e ( _ADXL345_SetRegisterValue (2 , -> -> 47 `i `uc _newIntMap ]
[; ;ADXL345.c: 364: oldIntEnable = ADXL345_GetRegisterValue(0x2E);
"364
[e = _oldIntEnable ( _ADXL345_GetRegisterValue (1 -> -> 46 `i `uc ]
[; ;ADXL345.c: 365: newIntEnable = oldIntEnable & ~((1 << 4));
"365
[e = _newIntEnable -> & -> _oldIntEnable `i ~ << -> 1 `i -> 4 `i `uc ]
[; ;ADXL345.c: 366: newIntEnable = newIntEnable | ((1 << 4) * actOnOff);
"366
[e = _newIntEnable -> | -> _newIntEnable `i * << -> 1 `i -> 4 `i -> _actOnOff `i `uc ]
[; ;ADXL345.c: 367: ADXL345_SetRegisterValue(0x2E, newIntEnable);
"367
[e ( _ADXL345_SetRegisterValue (2 , -> -> 46 `i `uc _newIntEnable ]
[; ;ADXL345.c: 368: }
"368
[e :UE 17 ]
}
"394
[v _ADXL345_SetInactivityDetection `(v ~T0 @X0 1 ef6`uc`uc`uc`uc`uc`uc ]
"400
{
[; ;ADXL345.c: 394: void ADXL345_SetInactivityDetection(unsigned char inactOnOff,
[; ;ADXL345.c: 395: unsigned char inactAxes,
[; ;ADXL345.c: 396: unsigned char inactAcDc,
[; ;ADXL345.c: 397: unsigned char inactThresh,
[; ;ADXL345.c: 398: unsigned char inactTime,
[; ;ADXL345.c: 399: unsigned char inactInt)
[; ;ADXL345.c: 400: {
[e :U _ADXL345_SetInactivityDetection ]
"394
[v _inactOnOff `uc ~T0 @X0 1 r1 ]
"395
[v _inactAxes `uc ~T0 @X0 1 r2 ]
"396
[v _inactAcDc `uc ~T0 @X0 1 r3 ]
"397
[v _inactThresh `uc ~T0 @X0 1 r4 ]
"398
[v _inactTime `uc ~T0 @X0 1 r5 ]
"399
[v _inactInt `uc ~T0 @X0 1 r6 ]
"400
[f ]
"401
[v _oldActInactCtl `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 401: unsigned char oldActInactCtl = 0;
[e = _oldActInactCtl -> -> 0 `i `uc ]
"402
[v _newActInactCtl `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 402: unsigned char newActInactCtl = 0;
[e = _newActInactCtl -> -> 0 `i `uc ]
"403
[v _oldIntMap `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 403: unsigned char oldIntMap = 0;
[e = _oldIntMap -> -> 0 `i `uc ]
"404
[v _newIntMap `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 404: unsigned char newIntMap = 0;
[e = _newIntMap -> -> 0 `i `uc ]
"405
[v _oldIntEnable `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 405: unsigned char oldIntEnable = 0;
[e = _oldIntEnable -> -> 0 `i `uc ]
"406
[v _newIntEnable `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 406: unsigned char newIntEnable = 0;
[e = _newIntEnable -> -> 0 `i `uc ]
[; ;ADXL345.c: 408: oldActInactCtl = ADXL345_GetRegisterValue(0x2E);
"408
[e = _oldActInactCtl ( _ADXL345_GetRegisterValue (1 -> -> 46 `i `uc ]
[; ;ADXL345.c: 409: newActInactCtl = oldActInactCtl & ~((1 << 3) |
[; ;ADXL345.c: 410: (1 << 2) |
[; ;ADXL345.c: 411: (1 << 1) |
[; ;ADXL345.c: 412: (1 << 0));
"412
[e = _newActInactCtl -> & -> _oldActInactCtl `i ~ | | | << -> 1 `i -> 3 `i << -> 1 `i -> 2 `i << -> 1 `i -> 1 `i << -> 1 `i -> 0 `i `uc ]
[; ;ADXL345.c: 413: newActInactCtl = newActInactCtl | (inactAcDc | inactAxes);
"413
[e = _newActInactCtl -> | -> _newActInactCtl `i | -> _inactAcDc `i -> _inactAxes `i `uc ]
[; ;ADXL345.c: 414: ADXL345_SetRegisterValue(0x27, newActInactCtl);
"414
[e ( _ADXL345_SetRegisterValue (2 , -> -> 39 `i `uc _newActInactCtl ]
[; ;ADXL345.c: 415: ADXL345_SetRegisterValue(0x25, inactThresh);
"415
[e ( _ADXL345_SetRegisterValue (2 , -> -> 37 `i `uc _inactThresh ]
[; ;ADXL345.c: 416: ADXL345_SetRegisterValue(0x26, inactTime);
"416
[e ( _ADXL345_SetRegisterValue (2 , -> -> 38 `i `uc _inactTime ]
[; ;ADXL345.c: 417: oldIntMap = ADXL345_GetRegisterValue(0x2F);
"417
[e = _oldIntMap ( _ADXL345_GetRegisterValue (1 -> -> 47 `i `uc ]
[; ;ADXL345.c: 418: newIntMap = oldIntMap & ~((1 << 3));
"418
[e = _newIntMap -> & -> _oldIntMap `i ~ << -> 1 `i -> 3 `i `uc ]
[; ;ADXL345.c: 419: newIntMap = newIntMap | inactInt;
"419
[e = _newIntMap -> | -> _newIntMap `i -> _inactInt `i `uc ]
[; ;ADXL345.c: 420: ADXL345_SetRegisterValue(0x2F, newIntMap);
"420
[e ( _ADXL345_SetRegisterValue (2 , -> -> 47 `i `uc _newIntMap ]
[; ;ADXL345.c: 421: oldIntEnable = ADXL345_GetRegisterValue(0x2E);
"421
[e = _oldIntEnable ( _ADXL345_GetRegisterValue (1 -> -> 46 `i `uc ]
[; ;ADXL345.c: 422: newIntEnable = oldIntEnable & ~((1 << 3));
"422
[e = _newIntEnable -> & -> _oldIntEnable `i ~ << -> 1 `i -> 3 `i `uc ]
[; ;ADXL345.c: 423: newIntEnable = newIntEnable | ((1 << 3) * inactOnOff);
"423
[e = _newIntEnable -> | -> _newIntEnable `i * << -> 1 `i -> 3 `i -> _inactOnOff `i `uc ]
[; ;ADXL345.c: 424: ADXL345_SetRegisterValue(0x2E, newIntEnable);
"424
[e ( _ADXL345_SetRegisterValue (2 , -> -> 46 `i `uc _newIntEnable ]
[; ;ADXL345.c: 425: }
"425
[e :UE 18 ]
}
"443
[v _ADXL345_SetFreeFallDetection `(v ~T0 @X0 1 ef4`uc`uc`uc`uc ]
"447
{
[; ;ADXL345.c: 443: void ADXL345_SetFreeFallDetection(unsigned char ffOnOff,
[; ;ADXL345.c: 444: unsigned char ffThresh,
[; ;ADXL345.c: 445: unsigned char ffTime,
[; ;ADXL345.c: 446: unsigned char ffInt)
[; ;ADXL345.c: 447: {
[e :U _ADXL345_SetFreeFallDetection ]
"443
[v _ffOnOff `uc ~T0 @X0 1 r1 ]
"444
[v _ffThresh `uc ~T0 @X0 1 r2 ]
"445
[v _ffTime `uc ~T0 @X0 1 r3 ]
"446
[v _ffInt `uc ~T0 @X0 1 r4 ]
"447
[f ]
"448
[v _oldIntMap `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 448: unsigned char oldIntMap = 0;
[e = _oldIntMap -> -> 0 `i `uc ]
"449
[v _newIntMap `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 449: unsigned char newIntMap = 0;
[e = _newIntMap -> -> 0 `i `uc ]
"450
[v _oldIntEnable `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 450: unsigned char oldIntEnable = 0;
[e = _oldIntEnable -> -> 0 `i `uc ]
"451
[v _newIntEnable `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 451: unsigned char newIntEnable = 0;
[e = _newIntEnable -> -> 0 `i `uc ]
[; ;ADXL345.c: 453: ADXL345_SetRegisterValue(0x28, ffThresh);
"453
[e ( _ADXL345_SetRegisterValue (2 , -> -> 40 `i `uc _ffThresh ]
[; ;ADXL345.c: 454: ADXL345_SetRegisterValue(0x29, ffTime);
"454
[e ( _ADXL345_SetRegisterValue (2 , -> -> 41 `i `uc _ffTime ]
[; ;ADXL345.c: 455: oldIntMap = ADXL345_GetRegisterValue(0x2F);
"455
[e = _oldIntMap ( _ADXL345_GetRegisterValue (1 -> -> 47 `i `uc ]
[; ;ADXL345.c: 456: newIntMap = oldIntMap & ~((1 << 2));
"456
[e = _newIntMap -> & -> _oldIntMap `i ~ << -> 1 `i -> 2 `i `uc ]
[; ;ADXL345.c: 457: newIntMap = newIntMap | ffInt;
"457
[e = _newIntMap -> | -> _newIntMap `i -> _ffInt `i `uc ]
[; ;ADXL345.c: 458: ADXL345_SetRegisterValue(0x2F, newIntMap);
"458
[e ( _ADXL345_SetRegisterValue (2 , -> -> 47 `i `uc _newIntMap ]
[; ;ADXL345.c: 459: oldIntEnable = ADXL345_GetRegisterValue(0x2E);
"459
[e = _oldIntEnable ( _ADXL345_GetRegisterValue (1 -> -> 46 `i `uc ]
[; ;ADXL345.c: 460: newIntEnable = oldIntEnable & ~(1 << 2);
"460
[e = _newIntEnable -> & -> _oldIntEnable `i ~ << -> 1 `i -> 2 `i `uc ]
[; ;ADXL345.c: 461: newIntEnable = newIntEnable | ((1 << 2) * ffOnOff);
"461
[e = _newIntEnable -> | -> _newIntEnable `i * << -> 1 `i -> 2 `i -> _ffOnOff `i `uc ]
[; ;ADXL345.c: 462: ADXL345_SetRegisterValue(0x2E, newIntEnable);
"462
[e ( _ADXL345_SetRegisterValue (2 , -> -> 46 `i `uc _newIntEnable ]
[; ;ADXL345.c: 463: }
"463
[e :UE 19 ]
}
"474
[v _ADXL345_SetOffset `(v ~T0 @X0 1 ef3`uc`uc`uc ]
"477
{
[; ;ADXL345.c: 474: void ADXL345_SetOffset(unsigned char xOffset,
[; ;ADXL345.c: 475: unsigned char yOffset,
[; ;ADXL345.c: 476: unsigned char zOffset)
[; ;ADXL345.c: 477: {
[e :U _ADXL345_SetOffset ]
"474
[v _xOffset `uc ~T0 @X0 1 r1 ]
"475
[v _yOffset `uc ~T0 @X0 1 r2 ]
"476
[v _zOffset `uc ~T0 @X0 1 r3 ]
"477
[f ]
[; ;ADXL345.c: 478: ADXL345_SetRegisterValue(0x1E, xOffset);
"478
[e ( _ADXL345_SetRegisterValue (2 , -> -> 30 `i `uc _xOffset ]
[; ;ADXL345.c: 479: ADXL345_SetRegisterValue(0x1F, yOffset);
"479
[e ( _ADXL345_SetRegisterValue (2 , -> -> 31 `i `uc _yOffset ]
[; ;ADXL345.c: 480: ADXL345_SetRegisterValue(0x20, yOffset);
"480
[e ( _ADXL345_SetRegisterValue (2 , -> -> 32 `i `uc _yOffset ]
[; ;ADXL345.c: 481: }
"481
[e :UE 20 ]
}
"497
[v _ADXL345_SetRangeResolution `(v ~T0 @X0 1 ef2`uc`uc ]
"498
{
[; ;ADXL345.c: 497: void ADXL345_SetRangeResolution(unsigned char gRange, unsigned char fullRes)
[; ;ADXL345.c: 498: {
[e :U _ADXL345_SetRangeResolution ]
"497
[v _gRange `uc ~T0 @X0 1 r1 ]
[v _fullRes `uc ~T0 @X0 1 r2 ]
"498
[f ]
"499
[v _oldDataFormat `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 499: unsigned char oldDataFormat = 0;
[e = _oldDataFormat -> -> 0 `i `uc ]
"500
[v _newDataFormat `uc ~T0 @X0 1 a ]
[; ;ADXL345.c: 500: unsigned char newDataFormat = 0;
[e = _newDataFormat -> -> 0 `i `uc ]
[; ;ADXL345.c: 502: oldDataFormat = ADXL345_GetRegisterValue(0x31);
"502
[e = _oldDataFormat ( _ADXL345_GetRegisterValue (1 -> -> 49 `i `uc ]
[; ;ADXL345.c: 503: newDataFormat = oldDataFormat & ~(((0x3) & 0x3) | (1 << 3));
"503
[e = _newDataFormat -> & -> _oldDataFormat `i ~ | & -> 3 `i -> 3 `i << -> 1 `i -> 3 `i `uc ]
[; ;ADXL345.c: 504: newDataFormat = newDataFormat | ((gRange) & 0x3) | fullRes;
"504
[e = _newDataFormat -> | | -> _newDataFormat `i & -> _gRange `i -> 3 `i -> _fullRes `i `uc ]
[; ;ADXL345.c: 505: ADXL345_SetRegisterValue(0x31, newDataFormat);
"505
[e ( _ADXL345_SetRegisterValue (2 , -> -> 49 `i `uc _newDataFormat ]
[; ;ADXL345.c: 506: selectedRange = (1 << (gRange + 1));
"506
[e = _selectedRange -> << -> 1 `i + -> _gRange `i -> 1 `i `uc ]
[; ;ADXL345.c: 507: fullResolutionSet = fullRes ? 1 : 0;
"507
[e = _fullResolutionSet -> ? != -> _fullRes `i -> -> -> 0 `i `uc `i : -> 1 `i -> 0 `i `uc ]
[; ;ADXL345.c: 508: }
"508
[e :UE 21 ]
}
